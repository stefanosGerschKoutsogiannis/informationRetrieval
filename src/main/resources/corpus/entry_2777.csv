2007,Kernels on Attributed Pointsets with Applications,This paper introduces kernels on attributed pointsets  which are sets of vectors embedded in an euclidean space. The embedding gives the notion of neighborhood  which is used to define positive semidefinite kernels on pointsets. Two novel kernels on neighborhoods are proposed  one evaluating the attribute similarity and the other evaluating shape similarity. Shape similarity function is motivated from spectral graph matching techniques. The kernels are tested on three real life applications: face recognition  photo album tagging  and shot annotation in video sequences  with encouraging results.,Kernels on Attributed Pointsets with Applications

Mehul Parsana1

mehul.parsana@gmail.com

Sourangshu Bhattacharya1
sourangshu@gmail.com

Chiranjib Bhattacharyya1

chiru@csa.iisc.ernet.in

K. R. Ramakrishnan2

krr@ee.iisc.ernet.in

Abstract

This paper introduces kernels on attributed pointsets  which are sets of vectors em-
bedded in an euclidean space. The embedding gives the notion of neighborhood 
which is used to deﬁne positive semideﬁnite kernels on pointsets. Two novel ker-
nels on neighborhoods are proposed  one evaluating the attribute similarity and
the other evaluating shape similarity. Shape similarity function is motivated from
spectral graph matching techniques. The kernels are tested on three real life ap-
plications: face recognition  photo album tagging  and shot annotation in video
sequences  with encouraging results.

1 Introduction

In recent times  one of the major challenges in kernel methods has been design of kernels on struc-
tured data e.g. sets [9  17  15]  graphs [8  3]  strings  automata  etc. In this paper  we propose kernels
on a type of structured objects called attributed pointsets [18]. Attributed pointsets are points em-
bedded in a euclidean space with a vector of attributes attached to each point. The embedding of
points in the euclidean space yields a notion of neighborhood of each point which is exploited in
designing new kernels. Also  we describe the notion of similarity between pointsets which model
many real life scenarios and incorporate it in the proposed kernels.

The main contribution of this paper is deﬁnition of two different kernels on neighborhoods. These
neighborhood kernels are then used to deﬁne kernels on the entire pointsets. The ﬁrst kernel treats the
neighborhoods as sets of vectors for calculating the similarity. Second kernel calculates similarity
in shape of the two neighborhoods. It is motivated using spectral graph matching techniques [16].

We demonstrate practical applications of the kernels on the well known task of face recognition [20] 
and two other novel tasks of tagging photo albums and annotation of shots in video sequences. For
the face recognition task  we test our kernels on benchmark datasets and compare their performance
with state-of-the-art algorithms. Our kernels outperform the existing methods in many cases. The
kernels also perform according to expectation on the two novel applications. Section 2 deﬁnes
attributed pointsets and contrasts it with related notions. Section 3 proposes two kernels and section
4 describes experimental results.

2 Deﬁnition and related work

An attributed pointset [18  1] (a.k.a. point pattern) X is sets of points in Rk with attributes or labels
(real vectors in this case) attached to each point. Thus  X = {(xi  di)|i = 1 . . . n}  where xi ∈ Ru
and di ∈ Rv  l being the dimension of the attribute vector. The number of points in a pointset 

1Dept. of Computer Science & Automation  2Dept. of Electrical Engineering  Indian Institute of Science 

Bangalore - 560012  India.

1

n  is variable. Also  for practical purposes pointsets with u = 2  3 are of interest. The construct
of pointsets are richer than sets of vectors [17] because of the structure formed by embedding of
the points in a euclidean space. However  they are less general than attributed graphs because all
attributed graphs cannot be embedded onto a euclidean space. Pointsets are useful in several domains
including computer vision [18]  computational biology [5]  etc.

The notion of similarity between pointsets is also different from those between sets of vectors 
or graphs. The main aspect of similarity is that there should be correspondences (1-1 mappings)
between the points of a pointset such that the relative positions of corresponding point are same.
Also the attribute vectors of the matching points should be similar. In case of sets of vectors  the
kernel function captures the similarity between aggregate properties of the two sets  such as the
principle angles between spanned subspaces [17]  or distance between the distributions generating
the vectors [9]. Kernels on graphs try to capture similarity in the graph topology by comparing the
number of similar paths [3]  or comparing steady state distributions on of linear systems on graphs
[8].

For example  consider recognizing faces using local descriptors calculated at some descriptor points
(corner points in this case) on the face. It is necessary that subsets of descriptor points found in two
images of the same face should be approximately superimposable (slight changes may be due to
change of expression) and that the descriptor values for the corresponding points should be roughly
same to ensure similar local features. Thus  a face can be modeled as an attributed pointset X =
{(xi  di)|i = 1 . . . n}  where xi ∈ R2 is the coordinate of ith descriptor point and di ∈ Rv is the
local descriptor vector at the ith descriptor point. Similar arguments can be provided for any object
recognition task.

i )|i = 1 . . . nA} and X B = {(xB

A local descriptor based kernel was proposed for object recognition in similar setting in [12]. Sup-
pose X A = {(xA
i )|i = 1 . . . nB} are two pointsets. The
normalized sum kernel [12] was deﬁned as KN S(X A  X B) = 1
j ))p 
where K(dA
j ) is some kernel function on the descriptors. It was argued in [12] that raising
the kernel to a high power p approximately calculates similarity between matched pairs of vectors.
Using the RBF kernel KRBF (x  y) = e− kx−yk2
  and adjusting the parameter p in σ  we get the
normalized sum kernels as:

nAnB PnA

i=1 PnB

j=1(K(dA

i   dB

i   dB

i   dA

i   dB

σ2

KN S(X A  X B) =

1

nAnB

nA

nB

X

i=1

X

j=1

KRBF (dA

i   dB
j )

(1)

Observe that this kernel doesn’t use the in formation in xi anywhere  and thus is actually a kernel
on a set of vectors. In fact  this kernel can be derived as a special case of the set kernel proposed
in [15]. The kernel K(A  B) = trace(cid:16)Pr(AT ˆGrB) ˆFr(cid:17) becomes K(A  B) = Pij k(ai  bj)fij
for ˆGr = I and F = Pr Fr (whose entries are fij) should be positive semideﬁnite [15]. Thus 
and using KRBF as the
choosing F = 11T (all entries 1) and multiplying the kernel by
kernel on vectors  we get back the kernel deﬁned in (1). The normalized sum kernel is used as the
basic kernel for development and validation of the new kernels proposed here. In the next section 
we incorporate position xi of the points using the concept of neighborhood.

1
An2

n2

B

3 Kernels

3.1 Neighborhood kernels

The key idea in this section is to use spatially co-occurring points of a point to improve the similarity
values given by the kernel function. In other words  we hypothesize that similar points from two
pointsets should also have neighboring points which are similar. Thus  for each point we deﬁne a
neighborhood of the point and weight the similarity between each pair of points with the similarity
between their neighborhoods.
The k-neighborhood Ni of a point (xi  di) in a pointset X is deﬁned as the set of points (including
itself) that are closest to it in the embedding euclidean space. So  Ni = {(xj  dj) ∈ X|kxi − xjk ≤
kxi − xlk∀(xl  dl) 6∈ Ni and |Ni| = k}. The neighborhood kernel between two points (xA
i   dA
i )

2

Figure 1: Correspondences implicitly found by sum and neighborhood kernels

and (xB

j   dB

j ) is deﬁned as:

KN ((xA

i   dA

i )  (xB

j   dB

j )) = KRBF (dA

i   dB

j )×

1

|N A

i ||N B

j | X

(xA

s  dA

s )∈N A
i

X
t )∈N B
t  dB
j

(xB

KRBF (dA

s   dB
t )

(2)

(3)

The neighborhood kernel (NK) between two pointsets X A and X B is thus deﬁned as:

KN K(X A  X B) =

1

nAnB

×

nA

nB

X

i=1

X

j=1

KN ((xA

i   dA

i )  (xB

j   dB

j ))

It is easy to see that KN K is a positive semideﬁnite kernel function. Even though KN K is a straight-
forward extension  it considerably improves accuracy of KN S. Figure 1 shows values of KN S and
KN K for 4 pairs of point from two pointsets modeling faces. Dark blue lines indicate best matches
given by KN S while bright blue lines indicate best matches by the KN K. In both cases  KN K gives
the correct match while the KN S fails. Computational complexity of KN K is O(k2n2)  k being
neighborhood size and n number of points. The next section proposes a kernel which uses positions
of points (xi) in a neighborhood more strongly to calculate similarity in shape.

3.2 Spectral Neighborhood Kernel

The kernel deﬁned in the previous section still uses a set of vectors kernel for ﬁnding similarity
between the neighborhoods. Here  we are interested in a kernel function which evaluates the simi-
larity in relative position of the corresponding points. Since the neighborhoods being compared are
of ﬁxed size  we assume that all points in a neighborhood have a corresponding point in the other.
Thus  the correspondences are given by a permutation of points in one of the neighborhoods. This
problem can be formulated as the weighted graph matching problem [16]  for which spectral method
is one of the popular heuristics. We use the features given by spectral decomposition of adjacency
matrix of the neighborhood to deﬁne a kernel function.

α

Given
a
e− kxs−xtk
N A
the neighborhoods (say N B
norm of a matrix.

i and N B

neighborhood Ni we

=
  ∀s  t|(xs  ds)  (xt  dt) ∈ Ni  where α is a parameter. Given two neighborhoods
j   we are thus interested in a permutation π of the basis of adjacency matrix of one of
j )kF is minimized  k.kF being the frobenius

j )  such that kAA

adjacency matrix Ai

as Ai(s  t)

i − π(AB

deﬁne

its

It is well known that a matrix can be fully reconstructed from its spectral decomposition. Also  in the
case that fewer eigenvectors are used  the equation kA − Pk
j   suggests
that eigenvectors corresponding to the higher eigenvalues will give better reconstruction. We use one
eigenvector corresponding to largest eigenvalue. Thus  the approximate adjacency matrix becomes
ˆA = λ1ζ1ζ T
1 .
Let π∗ be the optimal permutation that minimizes k ˆAA
j )kF . Note that here π applied on a
matrix implies permutation of the basis. It is easy to see that same permutation is induced on basis

F = Pn

i − π( ˆAB

i=1 λiζiζ T

j=k+1 λ2

i k2

3

i = |ζ A
i and N B

j (1)|  the spectral projection vectors
of the eigenvectors ζ B
j (1). Call f A
j (1) are eigenvectors corresponding
corresponding to neighborhoods N A
to largest eigenvalue of ˆAA
j   and |ζ(1)| is the vector of absolute values of components of ζ(1).
f (s) can be thought of as projection of the sth point in the corresponding neighborhood on R1. It is
equivalent to seek a permutation π∗ which minimizes kf A
j )k  for comparing neighborhoods
N A

i (1)| and f B
j . Here ζ A

j . The resulting similarity score is:

j = |ζ B
i (1)  ζ B

i and N B

i − π(f B

i   ˆAB

S(N A

i   N B

j ) = max
π∈Π

T − kf A

i − π(f B

j )k2
2

(4)

where  T is a threshold for converting the distance measure to similarity  and Π is the set of all
permutations. However  this similarity function is not necessarily positive semideﬁnite.

and f B
j  
To construct a positive semideﬁnite kernel giving similarity between the vectors f A
i
Let x ∈ X be a
we use the convolution kernel
composite object formed using parts from X1  . . .   Xm.
Let R be a relation over X1 ×
· · · × Xm × X such that R(x1  . . .   xm  x) is true if x is composed of x1  . . .   xm. Let
R−1(x) = (x1  . . .   xm) ∈ X1 × · · · × Xm|R(x1  . . .   xm  x) = true and K1  . . .   Km be kernels
on X1  . . .   Xm  respectively. The convolution kernel K over X is deﬁned as:

technique [7] on discrete structures.

K(x  y) =

X

(x1 ... xm)∈R−1(x) (y1 ... ym)∈R−1(y)

m

Y

i=1

Ki(xi  yi)

(5)

Haussler [7] showed that if K1  . . .   Km are symmetric and positive semideﬁnite  so is K.
For us  let X be the set of all neighborhoods and X1  . . .   Xm be the sets of spectral projections
of all points from all the neighborhoods. Here  note that even if the same point appears in dif-
ferent neighborhoods  the appearances will be considered to be different because the projections
are relative to the neighborhoods. Since  each neighborhood has size k  in our case m = k. The
i ) is true iff the vector (f (1)  . . .   f (k)) = π(f A
relation R is deﬁned as R(f (1)  . . .   f (k)  N A
i )
for some permutation π.
i ) is true iff f (1)  . . .   f (k) are
spectral projections the points of neighborhood N A
i ). Also  let Ki  i = 1 . . . k all be RBF ker-
nels with the same parameter β. Thus  from the above equation  the convolution kernel becomes

In other words  R(f (1)  . . .   f (k)  N A

i   N B

l=1(f A
K(N A
constant (k!)2  we get kernel KSN as:

j ) = k!Pπ∈Π e

β Pl

−1

i (l)−f B

j (π(l)))2

= k!Pπ∈Π e

−kf A

i −π(f B

j )k2

β

. Dividing by the

KSN (N A

i   N B

j ) =

1
k! X

π∈Π

e

−kf A

i −π(f B

j )k2

β

The spectral kernel (SK) KSK between two pointsets X A and X B is thus deﬁned as:

KSK(X A  X B) =

1

nAnB

nA

nB

X

i=1

X

j=1

KRBF (dA

i   dB

j )KSN (N A

i   N B
j )

Following theorem relates KSN (N A

i   N B

j ) to S(N A

i   N B

j ) (eqn 4).

(6)

(7)

Theorem 3.1 Let Ni and Nj be two sub-structures with spectral projection vectors f i and f j. For
large enough value of T such that all points are matched.
e−T
k!

KSN (Ni  Nj))β =

eS(Ni Nj )

lim
β→0

Proof: Let π∗ be the permutation that gives the optimal score S(Ni  Nj). By deﬁnition  eS(Ni Nj ) =
eT e−kf i−π∗(f j )k2.

limβ→0(KSN (Ni  Nj))β = limβ→0( 1
= 1
= −1

k! e−kf i−π∗(f j )k2
k! e−kf i−π∗(f j )k2

limβ→0(1 + Pπ∈Π\{π∗} e

k! Pπ∈Π(l) e

−1

−kf i−π(f j )k2

β

)β

β (kf i−π(f j )k2−kf i−π∗(f j )k2))β

4

Angry
88.9%
79.3%
92.9%
96.0%
96.3%

Table 1: Recognition accuracy on AR face dataset (section 4.1)
Scarf
Smile
3.0%
96.3%
2.2%
94.1%
47.4%
78.6%
82.0%
96.0%
97.8%
85.2%
96.19% 95.23% 83.80% 89.52% 60.00%
98.09% 98.09% 85.71% 94.28% 65.71%
99.04% 99.04% 86.66% 93.33% 65.71%

Scream Glasses
48.1%
57.0%
44.4%
32.9%
74.8%
31.3%
80.0%
56.0%
66.7%
80.7%

98.5%
86.66%
92.38%
90.47%

1-NN
PCA
LEM
AMM
Face-ARG
Sum(eq (1))
NK (eq (3))
SK (eq (7))

Left-Light Right-Light

22.2%
7.4%
92.9%

NA

17.8%
7.4%
91.1%

NA

96.3%
80.95%
86.66%
84.76%

Computational complexity of this kernel is O(k!n2)  where k is neighborhood size and n is no.
of descriptor points. However  since in practice only small neighborhood sizes are considered  the
computation time doesn’t become prohibitive.

(cid:3)

4 Experimental Results

In order to study the effectiveness of proposed kernels for practical visual tasks  we applied them
on three problems. Firstly  the kernels were applied to the well known problem of face recognition
[20]  and results on two benchmark datasets (AR and ORL) were compared to existing state-of-the-
art methods. Next we used the spectral kernel to tag images in personal photo albums using faces
of people present in them. Finally  the spectral kernel was used for annotation of video sequences
using faces of people present.
Attribute For face recognition  faces were modeled as attributed pointsets using local gabor descrip-
tors [10] calculated at the corner points using Harris corner point detector [6]. At each point  gabor
despite for three different scales and four different orientations were calculated. Descriptors for 5
points (4 pixel neighbors and itself) were used for each of the 12 combinations  making a total of
60 descriptors per point. For image tagging and video annotation  faces were modeled as attributed
pointsets using SIFT local descriptors [11]  having 128 descriptors per point.

The kernels were implemented in GNU C/C++. LAPACK [2] was used for calculation of eigen-
vectors and GNU GSL for calculation of permutations. LIBSVM [4] was used as the SVM based
classiﬁer for classifying pointsets. The face detector provided in OpenCV was used for detecting
faces in album images and video frames.
Dataset The AR dataset [13] is composed of color images of 135 people (75 men and 60 women).
The DB includes frontal view images with different facial expressions  illumination conditions  and
occlusion by sunglasses and scarf. After removing persons with corrupted images or missing any of
the 8 types of required images  a total of 105 persons (56 men and 49 women) were selected. All the
images were converted to greyscale and rescaled to 154 × 115 pixels. The ORL dataset is composed
of 10 images for each of the 40 persons. The images have minor variations in pose  illumination and
scale. All the 400  112 × 92 pixel images were used for experiments.

4.1 Face Recognition in AR face DB

The kernels proposed in this paper  were tested pointsets derived from images in AR face DB.
Face recognition was posed as a multiclass classiﬁcation problem  and SVMs were along with the
proposed kernels. The AR face DB is a standard benchmark dataset  on which a recent comparison
of state of the art methods for face recognition has been given in [14]. In table 1  we have restated
the results provided in [14] along with the results of our kernels. All the results reported in table
1 have been obtained using one normal (no occlusion or change of expression) face image as the
training set.

It can be seen that for all the images showing change of expression (Smile  Angry and Scream) 
the pointset kernels outperform existing methods. Also  in case of occlusion of face by glasses  the

5

Table 2: Recognition accuracy on ORL dataset (section 4.2)

# of training images →
Sum (eq (1))
NK (eq (3))
SK (eq (7))

1

3

5

70.83% 92.50% 98.00%
71.38% 93.57% 98.00%
71.94% 93.92% 98.00%

Figure 2: Representative cluster from tagging of album

pointset kernels give better results than existing methods. However  in case of occlusion by scarf 
the kernel based method do not perform as well as the Face-ARG or AMM. This failure is due to
introduction of a large number of points in the scarf themselves. It was observed that about 50% of
the descriptor points in the faces having scarfs were in the scarf region of the image. Summing the
similarities over such a large number of extra points makes the overall kernel value noisy.

The proposed approach doesn’t perform better than existing methods on images taken under extreme
variation in lighting conditions. This is due to the fact that values of the local descriptors change
drastically with illumination. Also  some of the corner points disappear under different lighting
condition. However  performance of the kernels is comparable to the existing methods  thus demon-
strating the effectiveness of modeling faces as attributed pointsets.

4.2 Recognition performance on ORL Dataset

Real life problems in face recognition also show minor variations in pose  which are addressed by
testing the kernels on images in the ORL dataset. The problem was posed as a multiclass classi-
ﬁcation problem and SVM was used along with the kernels for classiﬁcation. Table 2 reports the
recognition accuracies of all the three kernels for two different values of parameters  and for 1  3
and 5 training images.

It can be seen that even with images showing minor variations in pose  the proposed kernels perform
reasonably well. Also  due to change in pose the relative position of points in the pointsets change.
This is reﬂected in the fact that improvement due to addition of position information in kernels
is minor as compared to those shown in AR dataset. For higher number of training images  the
performance of all the kernels saturate at 98%.

4.3 Tagging images in personal albums based on faces

The problem of tagging images in personal albums with names of people present in them  is a prob-
lem of high practical relevance [19]. The spectral kernels were used solve this problem. Images
from publicly available sources like http://www.flickr.com 1 were used for experimenta-
tion. Five personal albums having 20 - 55 images each were downloaded and many images had upto
6 people. Face detector from openCV library was used to automatically detect faces in images. De-
tected faces are cropped and resized to 100 × 100 px resolution. 47 - 265 such faces detected from
each album. To the best of our knowledge  there are no openly available techniques to benchmark
our method against.

Due to non-availability of training data  the problem of image tagging was posed as a clustering
problem. Faces detected from the images were represented as attributed pointsets using SIFT local
descriptors  and spectral kernel was evaluated on them. A threshold based clustering scheme was
used on the distance metric induced by the kernel (d(x  y) = pK(x  x) + K(y  y) − 2 ∗ k(x  y)).
Ideally  each cluster thus obtained should represent a person and images containing faces from a
given cluster should be tagged with the name of that person.

1We intend to make the dataset publicly available if no copyrights are violated

6

Table 3: Face based album tagging

Album no.

1
2
3
4
5

No. of people

(Actual)

(Identiﬁed)

-
14
8
4
3

2
6
4
2
2

% Identiﬁed % False +ve

90%
84%

66.66%
83.33%
80.00%

0%

10.52%
8.33%
19.44%
14.70%

Figure 3: Keyframes of a few shots detected with annotation

Table 3 reports results from tagging experiments for ﬁve albums. No. of people identiﬁed reports
the number clusters having more than one faces  as singleton cluster will always be correct for that
person. Thus  people appearing only once in the entire album are not reported  which reduce the
no. of identiﬁed people. % identiﬁed and % false +ve are averaged over all clusters detected in the
album  and are calculated for each cluster as: % identif ied = N o. of correct f aces in the cluster
T otal no. of f aces of the person and
T otal no. of f aces in the cluster . It can be seen that the kernel performs reasonably
% f alse + ve =
well on the dataset. Figure 2 shows a representative cluster with the ﬁrst 8 images as true +ves and
rest as false +ves.

f alse +ves in the cluster

4.4 Video annotation based on faces

The kernels were also used to perform video shot annotation based faces detected in video se-
quences. Experimentation was performed on videos from “News and Public affair” section of
www.archive.org and music videos from www.youtube.com. Video was sampled at 1 frame
per second and experimental methodology was similar section 4.3 was used on the frames.

Figure 3 shows two representative shots from corresponding to two candidates from “Election 2004 
presidential debate part 2”  and one from “Westlife- Seasons in the Sun” video. The faces annotating
the shots are shown in the left as thumbnails. It may be noted that for videos  high pose variation did
not reduce accuracy of recognition due to gradual changing of pose. The results on detecting shots
were highly encouraging  thus demonstrating the varied applicability of proposed attributed pointset
kernels.

5 Conclusion

In this article  we propose kernels on attributed pointsets. We deﬁne the notion of neighborhood
in an attributed pointset and propose two new kernels. The ﬁrst kernel evaluates attribute similari-
ties between the neighborhoods and uses the co-occurrence information to improve the performance
of kernels on sets of vectors. The second kernel uses the position information more strongly and

7

matches the shapes of neighborhoods. This kernel function is motivated from spectral graph match-
ing techniques.

The proposed kernels were validated on the well known task on face recognition on two popular
benchmark datasets. Results show that the current kernels perform competitively with the state-of-
the-art techniques for face recognition. The spectral kernel was also used to perform two real life
tasks of tagging images in personal photo albums and annotating shots in videos. The results were
encouraging in both cases.

References

[1] Helmut Alt and Leonidas J. Guibas. Discrete geometric shapes: Matching  interpolation  and

approximation A survey. Technical Report B 96-11  1996.

[2] E. Anderson  Z. Bai  C. Bischof  S. Blackford  J. Demmel  J. Dongarra  J. Du Croz  A. Green-
baum  S. Hammarling  A. McKenney  and D. Sorensen. LAPACK Users’ Guide. Society for
Industrial and Applied Mathematics  Philadelphia  PA  third edition  1999.

[3] Karsten M. Borgwardt and Hans-Peter Kriegel. Shortest-path kernels on graphs.

In ICDM
’05: Proceedings of the Fifth IEEE International Conference on Data Mining  pages 74–81 
Washington  DC  USA  2005. IEEE Computer Society.

[4] Chih-Chung Chang and Chih-Jen Lin. LIBSVM: a library for support vector machines  2001.

Software available at http://www.csie.ntu.edu.tw/∼cjlin/libsvm.

[5] Ingvar Eidhammer  Inge Jonassen  and William R. Taylor. Structure comparison and structure

patterns. Journal of Computational Biology  7(5):685–716  2000.

[6] C. Harris and M.J. Stephens. A combined corner and edge detector. In Proc. of Alvey Vision

Conf.  1988.

[7] David Haussler. Convolution kernels on discrete structures. Technical report  University of

California  Santa Cruz  1999.

[8] Koji Tsuda Hisashi Kashima and Akihiro Inokuchi. Marginalized kernels between labeled

graphs. In Twentieth International Conference on Machine Learning (ICML)  2003.

[9] Risi Kondor and Tony Jebara. A kernel between sets of vectors. In Twentieth International

Conference on Machine Learning (ICML)  2003.

[10] Tai Sing Lee. Image representation using 2d gabor wavelets. IEEE TPAMI  18(10):959–971 

1996.

[11] D. Lowe. Distinctive image features from scale-invariant keypoints. Int. Journal of Computer

Vision  20:91–110  2003.

[12] Siwei Lyu. Mercer kernels for object recognition with local features. In IEEE CVPR  2005.
[13] A.M. Martinez and R. Benavente. The ar face database. CVC Technical Report  24  1998.
[14] Bo Gun Park  Kyoung Mu Lee  and Sang Uk Lee. Face recognition using face-arg matching.

IEEE TPAMI  27(12):1982–1988  2005.

[15] Amnon Shashua and Tamir Hazan. Algebraic set kernels with application to inference over

local image representations. In Neural Information Processing Systems (NIPS)  2004.

[16] Shinji Umeyama. An eigendecomposition approach to weighted graph matching problems.

IEEE transactions on pattern analysis and machine intelligence  10(5):695–703  1988.

[17] Lior Wolf and Amnon Shashua. Learning over sets using kernel principal angles. Journal of

Machine Learning Research  (4):913–931  2003.

[18] Haim J. Wolfson and Isidore Rigoutsos. Geometric hashing: An overview. IEEE Comput. Sci.

Eng.  4(4):10–21  1997.

[19] L. Zhang  L. Chen  M. Li  and H. Zhang. Automated annotation of human faces in family

albums  2003.

[20] W. Zhao  R. Chellappa  P. J. Phillips  and A. Rosenfeld. Face recognition: A literature survey.

ACM Comput. Surv.  35(4):399–458  2003.

8

,Jiajun Wu
Erika Lu
Pushmeet Kohli
Bill Freeman
Josh Tenenbaum