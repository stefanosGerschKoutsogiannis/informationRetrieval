2018,On Misinformation Containment in Online Social Networks,The widespread online misinformation could cause public panic and serious economic damages. The misinformation containment problem aims at limiting the spread of misinformation in online social networks by launching competing campaigns. Motivated by realistic scenarios  we present the first analysis of the misinformation containment problem for the case when an arbitrary number of cascades are allowed. This paper makes four contributions. First  we provide a formal model for multi-cascade diffusion and introduce an important concept called as cascade priority. Second  we show that the misinformation containment problem cannot be approximated within a factor of $\Omega(2^{\log^{1-\epsilon}n^4})$ in polynomial time unless $NP \subseteq DTIME(n^{\polylog{n}})$. Third  we introduce several types of cascade priority that are frequently seen in real social networks. Finally  we design novel algorithms for solving the misinformation containment problem. The effectiveness of the proposed algorithm is supported by encouraging experimental results.,On Misinformation Containment in

Online Social Networks

Department of Computer and Information Sciences

Guangmo (Amo) Tong

University of Delaware
amotong@udel.edu

Weili Wu

Department of Computer Science

University of Texas at Dallas
weiliwu@utdallas.edu

Ding-Zhu Du

Department of Computer Science

University of Texas at Dallas

dzdu@utdallas.edu

Abstract

The widespread online misinformation could cause public panic and serious eco-
nomic damages. The misinformation containment problem aims at limiting the
spread of misinformation in online social networks by launching competing cam-
paigns. Motivated by realistic scenarios  we present an analysis of the misinfor-
mation containment problem for the case when an arbitrary number of cascades
are allowed. This paper makes four contributions. First  we provide a formal
model for multi-cascade diffusion and introduce an important concept called as
cascade priority. Second  we show that the misinformation containment problem
cannot be approximated within a factor of Ω(2log1− n4
) in polynomial time unless
N P ⊆ DT IM E(npolylog n). Third  we introduce several types of cascade priority
that are frequently seen in real social networks. Finally  we design novel algorithms
for solving the misinformation containment problem. The effectiveness of the
proposed algorithm is supported by encouraging experimental results.

1

Introduction

The past years have witnessed a drastic increase in the usage of online social networks. By the end
of April 2018  there are totally 3.03 billion active social media users and each Internet user has an
average of 7.6 social media accounts [24]. Despite allowing efﬁcient exchange of information  online
social networks have provided platforms for misinformation. Misinformation may lead to serious
economic consequences and even cause panics. For example  it was reported by NDTV that the
misinformation on social media led to Pune violence in January 2018.1 Recently  the rapid spread
of misinformation has been on the list of top global risks according to World Economic Forum 2.
Therefore  effective strategies on misinformation control are imperative.
Information propagates through social networks via cascades and each cascade starts to spread
from certain seed users. When misinformation is detected  a feasible strategy is to launch counter
campaigns competing against the misinformation [1]. Such counter campaigns are usually called
as positive cascades. The misinformation containment (MC) problem aims at selecting seed users
for positive cascades such that the misinformation can be effectively restrained. The existing works

1https://www.ndtv.com/mumbai-news/misinformation-on-social-media-led-to-pune-violence-minister-

1795562

2http://reports.weforum.org/global-risks-2018/digital-wildﬁres/

32nd Conference on Neural Information Processing Systems (NeurIPS 2018)  Montréal  Canada.

have considered this problem for the case when there is one misinformation cascade and one positive
cascade [2  3  4]. In this paper  we address this problem for the general case when there are multiple
misinformation cascades and positive cascades. The scenario considered in this paper is more realistic
because there always exists multiple cascades concerning one issue or news in a real social network.
Example 1. In the 2016 US presidential election  the fake news that Hillary Clinton sold weapons
to ISIS has been widely shared in online social networks. More than 20 articles spreading this fake
news were discovered on Facebook in October 2016 [5]. While these articles all supported the fake
news  they were spreading on Facebook as different information cascades because they had different
sources and exhibited different levels of reliability. On the other hand  multiple articles aiming at
correcting this fake news were being shared by the users standing for Hillary Clinton. These articles
can be taken as the positive cascades and  again  they spread as individual cascades. The model
proposed in this paper applies to such a scenario.

We introduce an important concept  called as cascade priority  which deﬁnes how the users make
selections when more than one cascades arrive at the same time. As shown later  the cascade priority
is a necessary and critical setting when multiple cascades exist. The model proposed in this paper
is a natural extension of the existing models  but the MC problem becomes very challenging under
the new setting. For example  as shown later in Sec. 5  adding more seed nodes for the positive
cascade may surprisingly cause a wider spread of misinformation  i.e.  the objective function is not
monotone nondecreasing. Our goal in this paper is to offer a systematic study  including formal
model formulation  hardness analysis  and algorithm design. The contributions of this paper are
summarized as follows.

of Ω(2log1− n4

• We provide a formal model supporting multi-cascade inﬂuence diffusion in online social
networks. To the best of our knowledge  we are the ﬁrst to consider the issue on cascade priority.
Based on the proposed model  we study the MC problem by formulating it as a combinatorial
optimization problem.
• We prove that the MC problem under the general model cannot be approximated within a factor
• We propose and study three types of cascade priorities  homogeneous cascade priority  M-
dominant cascade priority  and P-dominant cascade priority  as deﬁned in Sec. 5. These special
cascade priorities are commonly seen in real social networks  and the MC problem enjoys
desirable combinatorial properties under these settings.
• We design a novel algorithm for the MC problem by using nontrivial upper bound and lower
bound. As shown in the experiments  the proposed algorithm outperforms other methods and it
admits a near-constant data-dependent approximation ratio on all the considered datasets.

) in polynomial time unless N P ⊆ DT IM E(npolylog n).3

2 Related work.

Inﬂuence maximization (IM). The inﬂuence maximization (IM) problem is proposed by Kempe 
Kleinberg  and Tardos in [6] where the authors also develop two basic diffusion models  independent
cascade (IC) model and linear threshold (LT) model. It is shown in [6] that the IM problem is
actually a submodular maximization problem and therefore the greedy scheme provides a (1 − 1/e)-
approximation. However  Chen et al. in [7] prove that it is #P-hard to compute the inﬂuence and the
naive greedy algorithm is not scalable to large datasets. One breakthrough is made by C. Borgs et
al. [8] who invent the reverse sampling technique and design an efﬁcient algorithm. This technique
is later improved by Tang et al. [9] and Nguyen et al. [10]. Recently  Li et al. [18] study the IM
problem under non-submodular threshold functions and Lynn et al. [19] consider the IM problem
under the Ising network. For the continuous-time generative model  N. Du et al. [30] propose a
scalable inﬂuence estimation method and then study the IM problem under the continuous setting.
Misinformation containment (MC). Based on the IC and LT model or their variants  the MC
problem is then proposed and extensively studied. Budak et al. [2] consider the independent cascade
model and show that the MC problem is again a submodular maximization problem when there are
two cascades. Tong et al. [4  31] design an efﬁcient algorithm by utilizing the reverse sampling

3When there is only one misinformation cascade and one positive cascade  this problem can be approximated
within a factor of 1 − 1/e [2  3  4]. Informally  the complexity class DT IM E(f (n)) consists of the decision
problems that can be solved in O(f (n)).

2

Figure 1: An illustrative example of diffusion process.

technique. He et al. [3]  Fan et al. [11] and Zhang et al. [12] study the MC problem under competitive
linear threshold model. Nguyen et al. [13] propose the IT-Node Protector problem which limits the
spread of misinformation by blocking the high inﬂuential nodes. Different from the existing works 
we focus on the general case when more than two cascades are allowed. In other contexts  He et al.
[20] study the MC problem in mobile social networks and Wang et al. [21] study the MC problem
with the consideration of user experience. Mehrdad et al. [28] consider a point process network
activity model and study the fake news mitigation problem by reinforcement learning. Recently  a
comprehensive survey [29] regarding false information is provided by Srijan et al.

3 Model and problem formulation

In this section  we formally formulate the diffusion model and the MC problem.

3.1 Model

A social network is given by a directed graph G = (V  E). For each edge (u  v)  we say v is an
out-neighbor of u  and u is an in-neighbor of v. Information is assumed to spread via cascades and
each cascade spreads from seed users. Let C be the set of all the cascades  and we use τ (C) ⊆ V to
denote the seed set of a cascade C ∈ C. We say a user is C-active if they are activated by cascade C.
All users are initially deﬁned as ∅-active. Associated with each edge (u  v)  there is a real number
p(u v) ∈ [0  1] denoting the propagation probability from u to v. We assume that p(u v) = 0 iff
(u  v) /∈ E. When u becomes C-active for a certain cascade C ∈ C  they attempt once to activate
an ∅-active out-neighbor v with the success probability of p(u v). We assume that a user will be
activated by the cascade arriving ﬁrst and will not be activated later for another time. Associated
with each user v  each cascade C is given a unique priority  denoted by Fv(C)  which gives a linear
order over the cascades. Fv can be represented as a bijection between C and {1  2  ... | C|}  and  for
each C1  C2 ∈ C  Fv(C1) > Fv(C2) iff C1 has a higher priority than that of C2 at v. If two or more
cascades reach v at the same time  v will be activated by the cascade with the highest priority. The
cascade priority at each node is affected by many factors such as the reputation of the source  the
reliability of the message and the user’s personal opinion. Several special cascade priorities will be
introduced later in Sec. 5.
For a time step t ∈ {0  1  2  ...}  we use πt(v) ∈ C∪{∅} to denote the activation state of a user v
after time step t  where πt(v) = C (resp. πt(v) = ∅) if v is C-active (resp. ∅-active). Let π∞(v)
be the activation state of v when the diffusion process terminates. The diffusion process unfolds
stochastically in discrete  described as follows:

where C∗ = arg maxC∈{C|C∈C v∈τ (C)} Fv(C) .

• Time step 0. If a node v is selected as a seed node by one or more cascades  v becomes C∗-active
• Time step t. Each node u activated at time step t − 1 attempts to activate each of u’s ∅-active
out-neighbor v with a success probability of p(u v). If a node v is successfully activated by one
or more in-neighbors  v becomes πt−1(u∗)-active where u∗ = arg maxu∈A⊆V Fv(πt−1(u))
where A is the set of the in-neighbors who successfully activate v at time step t.4

Example 2. Consider the network shown in Fig. 1 where there are three cascades C1  C2 and C3 
of which the seed sets are {v1}  {v2} and {v3}  respectively. Suppose that pe = 1 for each edge e 
Fv4 (C1) > Fv4(C2)  and  Fv6 (C2) > Fv6(C3) > Fv6(C1). At time step 1  v4 becomes C1-active
due to that Fv4 (C1) > Fv4 (C2). Because Fv6 (C3) > Fv6(C1)  v6 is ﬁnally C3-active. One can see
that v6 would be C2-active if the cascade priority at v4 was Fv4(C2) > Fv4(C1).

4Note that here πt−1(u) cannot be ∅ so Fv(πt−1(u)) is well-deﬁned.

3

Cascade C1C2Cascade C3Cascade v1v2v3v4v6v5v3v3v1v2v3v4v6v5v3v3Step 0 Step 1 Step 2 v2v1v3v6v5v4v7Cascade P1M1Cascade Fv3(P)>Fv3(P1)Fv5(P1)>Fv5(M1)>Fv5(P)v1v2v3v4v6v5v3v33.2 Problem formulation

We assume that  regarding one issue or topic  there are two groups of cascades: misinformation
cascades and positive cascades. Suppose there are already some cascades in the network and their
seed sets are known to us. For the purpose of misinformation containment  we launch a new positive
cascade with a certain seed set. We use M and P to denote the sets of the existing misinformation
cascades and positive cascades  respectively  and use P∗ to denote the newly introduced positive
cascade. Therefore  C = M∪ P∪{P∗}. We say a user is M-active if they are M-active for some
M ∈ M  otherwise they are called as M-active.5 For a seed set τ (P∗) of cascade P∗  we use
fM(τ (P∗)) (resp. fM(τ (P∗))) to denote the expected number of the M-active (resp. M-active) nodes
when the diffusion process terminates. The problems considered in this paper are shown as follows.
Problem 1 (Min-M problem). Given a budget k ∈ Z+ and a candidate set V ∗ ⊆ V   select a seed set
τ (P∗) ⊆ V ∗ for P∗ with |τ (P∗)| ≤ k such that fM(τ (P∗)) is minimized.
Alternatively  we can maximize the number of the M-active users.
Problem 2 (Max-M problem). Given a budget k ∈ Z+ and a candidate V ∗ ⊆ V   select a seed set
τ (P∗) ⊆ V ∗ for P∗ with |τ (P∗)| ≤ k such that fM(τ (P∗)) is maximized.
An instance of the above problems is given by (1) G = (V  E): a network structure; (2) {pe|pe ∈
[0  1]  e ∈ E}:
the set of the existing
cascades together with P∗; (4) {Fv(C)|v ∈ V  C ∈ C}: the cascade priority at each node; (5)
{τ (C) ⊆ V |C ∈ M∪ P}: the seed sets of the existing cascades; (6) V ∗ ⊆ V : a candidate set of the
seed nodes of P∗. The propagation probability and the cascade priority can be inferred by mining
historical data [25  26  27].
Remark 1. When | M| = 1  it becomes the model considered in [14]. When | M| = 1  | P| = 0
and the cascade priority is homogeneous6  the problem considered in [2  4] reduces to the Max-M
problem.

the probabilities on the edges; (3) C = M∪ P∪{P∗}:

4 Hardness result
In this section  we provide a hardness result for the Min-M problem. The result is obtained by a
reduction from the positive-negative partial set cover (±PSC) problem.
Problem 3 (±PSC problem). An instance of ±PSC is a triplet (X  Y  Φ) where X and Y are two
sets of elements with X ∩ Y = ∅  and Φ = {φ1  ...  φm} ⊆ 2X∪Y is collection of subsets over
X ∪ Y . For each Φ∗ ⊆ Φ  its cost is deﬁned as |X \ (∪φ∈Φ∗ φ)| + |Y ∩ (∪φ∈Φ∗ φ)|. The ±PSC
problem seeks for a Φ∗ ⊆ Φ with the minimum cost.
The following result is presented by Miettinen [15].
Lemma 1 ([15]). There exists no polynomial-time approximation algorithm for ±PSC with an
approximation factor of Ω(2log1− |m|4

) for any  > 0  unless N P ⊆ DT IM E(npolylog n).

A core result is given in the next lemma.
Lemma 2. For any α(|V ∗|) > 1  ±PSC is approximable to within a factor of 4· α(m)− 3  if Min-M
is approximable to within a factor of α(|V ∗|).

Proof. For an arbitrary instance (X  Y  Φ) of the ±PSC problem  we construct an instance of the
Min-M problem accordingly  as shown in Fig. 2.
The graph. Let us ﬁrst construct the graph G. For each xi ∈ X  we add a node xi to the graph  and
for each yi ∈ Y we add two nodes yi and zi to the graph. For each φi ∈ Φ  we add a node φi to the
graph. We further add four nodes a  b1  b2 and c  as shown in Fig. 2. For each φi and xj (resp. yj) 
we add an edge (φi  xj) (resp. (φi  yj)) iff xj ∈ φi (resp. yj ∈ φi). For each zi  we add an edge
(yi  zi) and an edge (c  zi). We add an edge (a  yi) for each yi ∈ Y and an edge (b2  xi) for each
xi ∈ X. Finally  we add an edge (b1  c). The probability of each edge is set as 1.

5Note that an ∅-active node is M-active.
6The deﬁnition of homogeneous cascade priority is given later in Sec. 5.

4

Figure 2: Reduction.

Cascade setting. We assume there is one misinformation cascade M1 with the seed set {b1  b2} and
one positive cascade P1 with the seed set {a}. We aim at introducing one positive cascade P∗ by
selecting at most k = m seed nodes from V ∗ = Φ = {φ1  ....  φm}. For each yi ∈ {y1  ...  ym}  the
cascade priority is set as Fyi(P∗) > Fyi(P1). For each node zi in {z1  ...  zm}  the cascade priority
is set as Fzi(P1) > Fzi(M1) > Fzi(P∗). The cascade priority at other nodes can be set arbitrarily.
Analysis. Each set Φ∗ ⊆ Φ corresponds to a solution to the Min-M problem. We use g(Φ∗) to denote
the objective function of the ±PSC problem  i.e. 

g(Φ∗) = |X \ (∪φ∈Φ∗ φ)| + |Y ∩ (∪φ∈Φ∗ φ)|.

Now let us ﬁx Φ∗ and analyze the activation state of the nodes. Note that each node yi will be either
P1-active or P∗-active. In particular  yi is P∗ active iff yi is in some φ ∈ Φ∗. Furthermore  according
the cascade priority at zi  zi is M-active iff yi is P1-active. Therefore  zi is M-active iff yi is not
in ∪φ∈Φ∗ φ. For each node xi ∈ X  it is M-active iff it is in some φ ∈ Φ∗. Finally  it can be easily
checked that the nodes in Φ ∪ Y ∪ {a} will be M-active and the nodes in {c  b1  b2} will be M-active 
regardless of Φ∗. As a result 

fM(Φ∗) = 3 + |X \ ∪φ∈Φ∗ φ| + |Y ∩ ∪φ∈Φ∗ φ| = 3 + g(Φ∗).

Thus  OP T ⊆ Φ is an optimal solution to the MC instance iff OP T is an optimal solution to the
instance of the ±PSC problem. Suppose that Φ∗ is an α(|V ∗|)-approximation to the Min-M problem
for some α(|V ∗|) > 1. We have

fM(Φ∗) ≤ α(|V ∗|) · fM(OP T ) ⇐⇒ 3 + g(Φ∗) ≤ α(|V ∗|) · (3 + g(OP T ))

≤ 4α(|V ∗|) − 3.

⇐⇒ g(Φ∗)

g(OP T )

≤ α(|V ∗|) +

3(α(|V ∗|) − 1)

g(OP T )

=⇒ g(Φ∗)

g(OP T )

Since |V ∗| = |Φ| = m  Φ∗ is a (4 · α(m) − 3)-approximation to the instance of the ±PSC
problem.

The following result follows immediately from Lemmas 1 and 2.
Theorem 1. For any  > 0  there is no polynomial-time approximation algorithm for the Min-M
problem with an approximation factor of Ω(2log1− |V ∗|4

) unless N P ⊆ DT IM E(npolylog n).

5 Algorithms

In this section  we present algorithms for the Max-M problem. Throughout this section  we denote
the objective function fM as f. The technique of submodular maximization has been extensively
used in the existing works. For a set function h() over a ground set U  the properties of monotone
nondecreasing and submodular are deﬁned as follows:
Deﬁnition 1 (Monotone nondecreasing). h(A) ≤ h(B)  for each A ⊆ B ⊆ U.
Deﬁnition 2 (Submodular). h(A) + h(B) ≥ h(A ∪ B) + h(A ∩ B)  for each A  B ⊆ U.
As mentioned in Remark 1  the Max-M problem is a natural extension of the problem considered in
[2  4]  but it is not submodular and even not monotone nondecreasing.

5

YΦXb1b2aϕ1ϕ2ϕmy1y2y3y4x1x2x3x4z1z2z3z4...c.........Figure 3: An illustrative example of non-submodularity.

Example 3. Consider the network shown in Fig. 3  where there exists one positive cascade P1 and
one misinformation cascade M1. Now we deploy a new positive cascade P∗ and assume the candidate
seed set V ∗ is equal to V . Suppose that the probability on each edge is equal to 1  τ (P1) = {v1}
and τ (M1) = {v7}  and the cascade priority at v3 and v5 is given as shown in the ﬁgure. We can
observe that f ({∅}) = 5  f ({v2}) = f ({v4}) = f ({v2  v4}) = 4. Therefore  f ({v2}) < f (∅) 
and f ({v2}) + f ({v4}) < f ({v2} ∩ {v4}) + f ({v2} ∪ {v4}). This illustrates that inappropriately
selecting positive seed nodes may lead to a wider spread of misinformation.

In the rest of this section  we ﬁrst study three special cascade priorities and then design an algorithm
for the general setting.

5.1 Special cases: homogeneous  M-dominant and P-dominant cascade priority

We introduce the following types of cascade priority that frequently appear in real social networks.
Deﬁnition 3 (Homogeneous cascade priority). The cascade priority is said to be homogeneous if
Fv(C) = Fu(C) for each u  v ∈ V and C ∈ C. That is  each cascade has the same priority at each
node.
Deﬁnition 4 (M-dominant cascade priority). The cascade priority is said to be M-dominant if
Fv(M ) > Fv(P ) for each M ∈ M  P ∈ P∪{P∗} and v ∈ V . Informally speaking  at each node 
the priority of each misinformation cascade is higher than that of any positive cascade.

Similarly  we have the P-dominant cascade priority.
Deﬁnition 5 (P-dominant cascade priority). The cascade priority is said to be P-dominant if Fv(P ) >
Fv(M ) for each M ∈ M  P ∈ P∪{P∗} and v ∈ V .
Remark 2. The homogeneous cascade priority is capable of representing the case when the priority
of cascade is determined by the source or the initiator of the cascade. For example  when there are
two opposite cascades C1 and C2 regarding NBA on Twitter  where C1 is posted by ESPN while C2
comes from an unknown source  the users will all tend to believe C1 and therefore Fv(C1) > Fv(C2)
for each v ∈ V . The M-dominant or P-dominant cascade priority describes the scenario when one
group of the cascades are well polished and very convincing. For example  the fake news in Example
1 was believed to be true by many online users because it was claimed to be released by WikiLeaks.
As a result  the fake news always had a higher cascade priority and Fv(M ) > Fv(P ) for each
M ∈ M  P ∈ P∪{P∗} and v ∈ V .
While the Max-M problem does not exhibit any good property in general  it is indeed monotone
nondecreasing and submodular under special cascade priority settings. For the above types of cascade
priority  we have the following results.
Theorem 2. f is monotone nondecreasing and submodular if the cascade priority is M-dominant or
P-dominant.
Theorem 3. f is monotone nondecreasing and submodular if the cascade priority is homogeneous.

Please see the supplementary material for the proofs of Theorems 2 and 3. Note that the greedy
algorithm yields a (1 − 1/e)-approximation when the objective function is monotone nondecreasing
and submodular [16]. Theorems 2 and 3 evince that special cascade priorities may admit desirable
combinatorial properties. In the next subsection  we will utilize these results to design an effective
algorithm for the Max-M problem for the general case.

6

Cascade C1C2Cascade C3Cascade v1v2v3v4v6v5v3v3v1v2v3v4v6v5v3v3Step 0 Step 1 Step 2 v2v1v3v6v5v4v7Cascade P1M1Cascade Fv3(P)>Fv3(P1)Fv5(P1)>Fv5(M1)>Fv5(P)v1v2v3v4v6v5v3v3Algorithm 1 Greedy scheme
1: Input: a function h over a ground set U and a budget k;
2: U0 ← ∅;
3: for i = 1 : k do
4:
5:
6: return U ← arg maxUi h(Ui);

u ← arg maxu∈U h(Ui−1 ∪ {u}) − h(Ui−1);
Ui ← Ui−1 ∪ {u};

Algorithm 2 Sandwich approximation strategy
1: Input: f  f   f   V ∗  k;
2: S∗ ← ALG. 1(f   V ∗  k); S∗ ← ALG. 1(f   V ∗  k); S∗ ← ALG. 1(f  V ∗  k);
3: return S

= arg maxS∈{S∗ S∗ S∗} f (S);

(cid:48)

5.2 General case

For the general cascade priority  we present a data-dependent approximation algorithm based on the
upper-lower-bound technique [22]. Each cascade priority Fv induces another two cascade priorities 
deﬁned as follows:
Deﬁnition 6 (Fv). Fv is a cascade priority at node v induced by Fv  satisfying 
(a) for each P1  P2 ∈ P∪{P∗}  Fv(P1) < Fv(P2) ⇐⇒ Fv(P1) < Fv(P2) 
(b) for each M1  M2 ∈ M  Fv(M1) < Fv(M2) ⇐⇒ Fv(M1) < Fv(M2)  and 
(c) for each P ∈ P∪{P∗} and M ∈ M  Fv(M ) < Fv(P ).
Deﬁnition 7 (Fv). Fv is a cascade priority at node v induced by Fv()  satisfying (a) and (b) in Def.
6  and  for each P ∈ P∪{P∗} and M ∈ M  Fv(P ) < Fv(M ).
Fv and Fv keep the relative priority of the cascades within the same group and adjust the relative
priority of the cascades between groups. We can easily check that Fv and Fv are uniquely determined
by Fv.
Example 4. Suppose there are three positive cascades  P1  P2 and P3  and two misinformation cas-
cades  M1 and M2. If Fv(P3) < Fv(P1) < Fv(M2) < Fv(P2) < Fv(M1)  then we have Fv(M2) <
Fv(M1) < Fv(P3) < Fv(P1) < Fv(P2) and Fv(P3) < Fv(P1) < Fv(P2) < Fv(M2) < Fv(M1).
For a seed set τ (P∗) ⊆ V ∗ of cascade P∗  we use f (τ (P∗)) (resp. f (τ (P∗))) to denote the expected
number of the M-active nodes when each node v replaces its cascade priority Fv by Fv (resp. Fv).
Because Fv is P-dominant and Fv is M-dominant  the following result immediately follows from
Theorem 2.
Corollary 1. f and f are both monotone nondecreasing and submodular.

Furthermore  f is an upper bound of f and f is a lower bound of f.
Theorem 4. For each τ (P∗) ⊆ V ∗  f (τ (P∗)) ≥ f (τ (P∗)) ≥ f (τ (P∗)).
Please see the supplementary material for the proof of Theorem 4. We now present an algorithm to
solve the Max-M problem by approximating f and f. First  we run the greedy algorithm  ALG. 1 
on all three functions  f  f and f  to obtain three solutions S∗  S∗ and S∗  respectively. The ﬁnal
= arg maxS∈{S∗ S∗ S∗} f (S). The process is formally shown in ALG. 2.
solution is selected as S
According to [22]  it has the following performance bound.
f (OP T )} · (1 − 1/e) · f (OP T )  where OP T is the optimal
Theorem 5. f (S
solution.
Remark 3. The performance bound of ALG. 2 depends on the closeness of the upper bound and the
lower bound. We will experimentally examine this gap in Sec. 6.

) ≥ max{ f (S∗)

f (OP T )

(cid:48)

(cid:48)

 

f (S∗)

7

6 Experiments

In this section  we evaluate the proposed algorithm by experiments. Our goal is to examine the
performance of ALG. 2 by (a) comparing it to baseline methods and (b) measuring the data-dependent
approximation ratio given in Theorem 5. Our experiments are performed on a server with a 2.2 GHz
eight-core processor.

6.1 Setup

ai

amax

Dataset. The ﬁrst dataset  collected from Twitter  is built after monitoring the spreading process of
the messages posted between 1st and 7th July 2012 regarding the discovery of a new particle with
the features of the elusive Higgs boson [17]. It consists of a collection of activities between users 
including re-tweeting action  replying action  and mentioning action. We extract two subgraphs
from this dataset  where the ﬁrst one has 10 000 nodes and the second one has 100 000 nodes. We
denote these two graphs by Higgs-10K and Higgs-100K  respectively. The second dataset  denoted
by HepPh  is a citation graph from the e-print arXiv with 34 546 papers [23]. HepPh has been widely
used in the study on inﬂuence diffusion in social networks. The statistics of the datasets can be found
in the supplementary material.
Propagation Probability. On Higss-10K  the probability of edge (u  v) is set to be proportional to
· pmax + pbase 
the frequency of the activities between u and v. In particular  we set p(u v) as
where ai is the number of activities from u to v  amax is the maximum number of the activities
among all the edges  and  pmax = 0.2 and pbase = 0.4 are two constants. On Higgs-100K  we adopt
the uniform setting where the propagation probability on each edge is set as 0.1. On HepPh  we adopt
the wighted cascade setting and set p(u v) as 1/deg(v) where deg(v) is the number of in-neighbors of
v. The uniform setting and the weighted cascade are two classic settings and they have been widely
used in the existing works [2  4  6  7  9  10  18].
Cascade setting. We consider three cases where there are three cascades  ﬁve cascades and ten
cascades  respectively. For the case of three cascades  we deploy one existing misinformation cascade
and one existing positive cascade  and we launch a new positive cascade P∗. For each existing
cascade  the size of the seed set is set as 20 and the seed nodes are selected from the node with the
highest single-node inﬂuence. The seed sets of different cascades do not overlap with each other. The
budget of P∗ is enumerated from {1  2  ...  20} and the candidate set V ∗ is equal to V . The cascade
priority at each node is assigned randomly by generating a random permutation over {1  2  3}. We
process the cases with ﬁve and ten cascades in the same way as the three cascades case. The details
can be found in the supplementary material.
Baseline methods. Since there is no algorithm explicitly addressing the model considered in this
paper  we consider three baseline methods  HighWeight  Proximity and Random. The weight of
v p(u v)). HighWeight
outputs the seed set according to the decreasing order of the node weight. Proximity selects the seed
nodes of P∗ from the out-neighbors of the seed nodes of the misinformation cascades  where the
preference is given to the node with a large weight. Random is a baseline method which selects the
seed nodes randomly. The performance of Random is evaluated by the mean over 1 000 executions.
Estimating inﬂuence. The feasibility of ALG. 2 relies on the assumption that there is an efﬁcient
oracle of fM. Unfortunately  it has been shown in [7] that computing the inﬂuence is a #P-hard
problem  and in fact  it is also hard to compute fM. In our experiments  the function value is estimated
by 5 000 Monte Carlo simulations whenever fM is called  and the ﬁnal solution of each algorithm is
evaluated by 10 000 simulations. We note that the techniques proposed in [4  8  9  10] are potentially
applicable to the MC problem  but improving the efﬁciency of the algorithm is beyond the scope of
this paper.

a node v is deﬁned as the sum of the probabilities of its out-edges (i.e. (cid:80)

6.2 Result and discussion

The experimental results are shown in Figs. 4  5 and 6. In each ﬁgure  the ﬁrst three subﬁgures show
the performance under the settings of three  ﬁve and ten cascades  respectively. Each subﬁgure gives
four curves plotting the number of M-active nodes under Sandwich (ALG. 2)  HighWeight  Proximity
and Random  respectively. The last subﬁgure shows the value of f (S∗)/f (S∗) in each experiment.

8

(a) Three cascades

(b) Five cascades

(c) Ten cascades

(d) Performance bound

Figure 4: Results on Higgs-10K.

(a) Three cascades

(b) Five cascades

(c) Ten cascades

(d) Performance bound

Figure 5: Results on Higgs-100K.

(a) Three cascades

(b) Five cascades

(c) Ten cascades

(d) Performance bound

Figure 6: Results on HepPh.

Major observations. First  as shown in the ﬁgures  ALG. 2 consistently provides the best perfor-
mance. Comparing it to other baseline methods  the superiority of ALG. 2 can be very signiﬁcant
when the budget becomes large. As shown in Fig. 4a  on Higgs-10K  when there are three cascades
and the budget is equal to 20  ALG. 2 is able to reduce the number of M-active nodes from 180 to 100 
while other methods can hardly make it below 160. Another important observation is that the ratio
f (S∗)/f (S∗) is very close to 1 in practice. For example  on HepPh  this ratio is always larger than
0.9985. This means the performance ratio of ALG. 2 is guaranteed to be very close to 1− 1/e on such
datasets. From Example 3 and the proofs of Theorems 2 and 3 we can see that the non-submodularity
only occurs in the case when two or more cascades arrive at one node at the same time. Thus  if such
a scenario does not happen frequently  the Max-M and Min-M problems will be close to submodular
optimization problems  and consequently  the greedy algorithm is effective. While f (S∗)/f (S∗) is
data-dependent  we have observed that it is very close to 1 under all the considered datasets  which
indicates that the approximation ratio is near-constant.
Minor observations. We can also observe that Random offers no help in misinformation containment
and HighWeight is also futile in many cases (e.g.  Figs. 4a  5a and 6b where it has the same
performance as that of Random). In addition  Proximity performs slightly better than HighWeight
does but it can still fail to reduce the number of M-active users when budget increases  i.e.  the curve
is not monotone decreasing. We have also observed that ALG. 2 strictly outperforms that solely
running ALG. 1 on fM  which means approximating the upper bound and lower bound can provide
better solutions. The results of this part can be found in our supplementary material.

7 Conclusion

In this paper  we study the MC problem under the general case where there is an arbitrary number of
cascades. The considered scenario is more realistic and it applies to complicated real applications
in online social networks. We provide a formal model and address the MC problem from the view
of combinatorial optimization. We show the MC problem is not only NP-hard but also admits
strong inapproximability property. We propose three types of cascade priority and show that the MC
problem can be close to submodular optimization problems. An effective algorithm for solving the
MC problem is designed and evaluated by experiments.

9

510152080100120140160180200BudgetNumber of M−active nodes SandwichHighWeightProximityRandom5101520130140150160170180190BudgetNumber of M−active nodes SandwichHighWeightProximityRandom5101520255260265270275280285290BudgetNumber of M−active nodes SandwichHighWeightProximityRandom51015200.9940.9950.9960.9970.9980.9991BudgetRatio three cascadesfive cascadesten cascades5101520125130135140145150BudgetNumber of M−active nodes SandwichHighWeightProximityRandom5101520170175180185190195200BudgetNumber of M−active nodes SandwichHighWeightProximityRandom5101520300305310315320325330BudgetNumber of M−active nodes SandwichHighWeightProximityRandom51015200.99950.99960.99970.99980.99991BudgetRatio three cascadesfive cascadesten cascades5101520100110120130140150160BudgetNumber of M−active nodes SandwichHighWeightProximityRandom5101520200250300350400450BudgetNumber of M−active nodes SandwichHighWeightProximityRandom5101520500550600650700750BudgetNumber of M−active nodes SandwichHighWeightProximityRandom51015200.9970.99750.9980.99850.9990.999511.00051.001BudgetRatio three cascadesfive cascadesten cascadesAcknowledgments

This work is supported in part by a start-up grant from the University of Delaware and the NSF under
grant #1747818.

References

[1] Kumar  KP Krishna  and G. Geethakumari. "Detecting misinformation in online social networks using
cognitive psychology." Human-centric Computing and Information Sciences 4.1 (2014): 14.
[2] Budak  Ceren  Divyakant Agrawal  and Amr El Abbadi. "Limiting the spread of misinformation in social
networks." In Proc. of WWW  2011.
[3] He  Xinran  et al. "Inﬂuence blocking maximization in social networks under the competitive linear threshold
model." In Proc. of SDM  2012.
[4] Tong  Guangmo  et al. "An efﬁcient randomized algorithm for rumor blocking in online social networks."
IEEE Transactions on Network Science and Engineering (2017).
[5] Allcott  Hunt  and Matthew Gentzkow. "Social media and fake news in the 2016 election." Journal of
Economic Perspectives 31.2 (2017): 211-36.

[6] Kempe  David  Jon Kleinberg  and Éva Tardos. "Maximizing the spread of inﬂuence through a social
network." In Proc. of SIGKDD  2003.
[7] Chen  Wei  Chi Wang  and Yajun Wang. "Scalable inﬂuence maximization for prevalent viral marketing in
large-scale social networks." In Proc. of SIGKDD  2010.
[8] Borgs  Christian  et al. "Maximizing social inﬂuence in nearly optimal time." In Proc. of SODA  2014.
[9] Tang  Youze  Yanchen Shi  and Xiaokui Xiao. "Inﬂuence maximization in near-linear time: A martingale
approach." In Proc. of SIGMOD  2015.
[10] Nguyen  Hung T.  My T. Thai  and Thang N. Dinh. "Stop-and-stare: Optimal sampling algorithms for viral
marketing in billion-scale networks." In Proc. of SIGMOD  2016.
[11] Fan  Lidan  et al. "Least cost rumor blocking in social networks." In Proc. of ICDCS  2013.
[12] H. Zhang  H. Zhang  X. Li  and M. T. Thai  “Limiting the spread of misinformation while effectively raising
awareness in social networks ” In Proc. of CSoNet  2015.
[13] N. P. Nguyen  G. Yan  M. T. Thai  and S. Eidenbenz  “Containment of misinformation spread in online
social networks ” In Proc. of Websci  2012.
[14] G. Tong  W. Wu and D. Z. Du  "Distributed Rumor Blocking With Multiple Positive Cascades " in IEEE
Transactions on Computational Social Systems  2018.
[15] Miettinen  Pauli. "On the positive–negative partial set cover problem." Information Processing Letters 108.4
(2008): 219-221.
[16] Nemhauser  George L.  Laurence A. Wolsey  and Marshall L. Fisher. "An analysis of approximations for
maximizing submodular set functions—I." Mathematical Programming 14.1 (1978): 265-294.
[17] De Domenico  Manlio  et al. "The anatomy of a scientiﬁc rumor." Scientiﬁc reports 3 (2013): 2980.
[18] Li  Qiang  et al. "Inﬂuence Maximization with -Almost Submodular Threshold Functions." In Proc. of
NIPS  2017.
[19] Lynn  Christopher  and Daniel D. Lee. "Maximizing inﬂuence in an ising network: A mean-ﬁeld optimal
solution." In Proc. of NIPS  2016.
[20] He  Zaobo  et al. "Cost-efﬁcient strategies for restraining rumor spreading in mobile social networks." IEEE
Transactions on Vehicular Technology 66.3 (2017): 2789-2800.
[21] Wang  Biao  et al. "Drimux: Dynamic rumor inﬂuence minimization with user experience in social
networks." IEEE Transactions on Knowledge and Data Engineering 29.10 (2017): 2168-2181.
[22] Lu  Wei  Wei Chen  and Laks VS Lakshmanan. "From competition to complementarity: comparative
inﬂuence diffusion and maximization." In Proc. of the VLDB Endowment 9.2 (2015): 60-71.
[23] J. Leskovec and A. Krevl. (Jun. 2014). SNAP Datasets: 1071 Stanford Large Network Dataset Collection.
[Online]. Available: 1072 http://snap.stanford.edu/data

10

[24] K. Smith. (April. 2018). Marketing: 115 Amazing Social Media Statistics and Facts [Online]. Available:
https://www.brandwatch.com/blog/96-amazing-social-media-statistics-and-facts/
[25] Goyal  Amit  Francesco Bonchi  and Laks VS Lakshmanan. "Learning inﬂuence probabilities in social
networks." In Proc. of WSDM  2010.
[26] Leskovec  Jure  Daniel Huttenlocher  and Jon Kleinberg. "Predicting positive and negative links in online
social networks." In Proc. of WWW  2010.
[27] Zeng  Fue  Li Huang  and Wenyu Dou. "Social factors in user perceptions and responses to advertising in
online social networking communities." Journal of interactive advertising 10.1 (2009): 1-13.
[28] Farajtabar  Mehrdad and Yang  Jiachen and Ye  Xiaojing and Xu  Huan and Trivedi  Rakshit and Khalil 
Elias and Li  Shuang and Song  Le and Zha  Hongyuan. "Fake News Mitigation via Point Process Based
Intervention." In Proc. of ICML  2017.
[29] Kumar  Srijan  and Neil Shah. "False information on web and social media: A survey." arXiv preprint
arXiv:1804.08559 (2018).
[30] Du  Nan  et al. "Scalable inﬂuence estimation in continuous-time diffusion networks." In Proc. of NIPS 
2013.
[31] Tong  Guangmo  et al. "Beyond Uniform Reverse Sampling: A Hybrid Sampling Technique for Misinfor-
mation Prevention." In Proc. of INFOCOM  2019.

11

,Jin-Hwa Kim
Sang-Woo Lee
Donghyun Kwak
Min-Oh Heo
Jeonghee Kim
Jung-Woo Ha
Byoung-Tak Zhang
Amo Tong
Ding-Zhu Du
Weili Wu