2019,Efficient Identification in Linear Structural Causal Models with Instrumental Cutsets,One of the most common mistakes made when performing data analysis is attributing causal meaning to regression coefficients. Formally  a causal effect can only be computed if it is identifiable from a combination of observational data and structural knowledge about the domain under investigation (Pearl  2000  Ch. 5). Building on the literature of instrumental variables (IVs)  a plethora of methods has been developed to identify causal effects in linear systems. Almost invariably  however  the most powerful such methods rely on exponential-time procedures. In this paper  we investigate graphical conditions to allow efficient identification in arbitrary linear structural causal models (SCMs). In particular  we develop a method to efficiently find unconditioned instrumental subsets  which are generalizations of IVs that can be used to tame the complexity of many canonical algorithms found in the literature. Further  we prove that determining whether an effect can be identified with TSID (Weihs et al.  2017)  a method more powerful than unconditioned instrumental sets and other efficient identification algorithms  is NP-Complete. Finally  building on the idea of flow constraints  we introduce a new and efficient criterion called Instrumental Cutsets (IC)  which is able to solve for parameters missed by all other existing polynomial-time algorithms.,Efﬁcient Identiﬁcation in Linear Structural
Causal Models with Instrumental Cutsets

Daniel Kumor
Purdue University

dkumor@purdue.edu

Bryant Chen

Brex Inc.

bryant@brex.com

Elias Bareinboim
Columbia University
eb@cs.columbia.edu

Abstract

One of the most common mistakes made when performing data analysis is at-
tributing causal meaning to regression coefﬁcients. Formally  a causal effect can
only be computed if it is identiﬁable from a combination of observational data and
structural knowledge about the domain under investigation (Pearl  2000  Ch. 5).
Building on the literature of instrumental variables (IVs)  a plethora of methods
has been developed to identify causal effects in linear systems. Almost invariably 
however  the most powerful such methods rely on exponential-time procedures.
In this paper  we investigate graphical conditions to allow efﬁcient identiﬁcation
in arbitrary linear structural causal models (SCMs). In particular  we develop
a method to efﬁciently ﬁnd unconditioned instrumental subsets  which are gen-
eralizations of IVs that can be used to tame the complexity of many canonical
algorithms found in the literature. Further  we prove that determining whether an
effect can be identiﬁed with TSID (Weihs et al.  2017)  a method more powerful
than unconditioned instrumental sets and other efﬁcient identiﬁcation algorithms 
is NP-Complete. Finally  building on the idea of ﬂow constraints  we introduce a
new and efﬁcient criterion called Instrumental Cutsets (IC)  which is able to solve
for parameters missed by all other existing polynomial-time algorithms.

1

Introduction

Predicting the effects of interventions is one of the fundamental tasks in the empirical sciences.
Controlled experimentation is considered the “gold standard” in which one physically intervenes in
the system and learn about the corresponding effects. In practice  however  experimentation is not
always possible due costs  ethical constraints  or technical feasibility – e.g.  a self-driving car should
not need to crash to recognize that doing so has negative consequences. In such cases  the agent must
uniquely determine the effect of an action using observational data and its structural knowledge of
the environment. This leads to the problem of identiﬁcation (Pearl  2000; Bareinboim & Pearl  2016).
Structural knowledge is usually represented as a structural causal model (SCM)1 (Pearl  2000)  which
represents the set of observed and unobserved variables and their corresponding causal relations. We
focus on the problem of generic identiﬁcation in linear  acyclic SCMs. In such systems  the value of
each observed variable is determined by a linear combination of the values of its direct causes along
with a latent error term . This leads to a system of equations X = ΛT X +   where X is the vector
of variables  ΛT is a lower triangular matrix whose ijth element λij – called structural parameter –
is 0 whenever xi is not a direct cause of xj  and  is a vector of latent variables.
Methods for identiﬁcation in linear SCMs generally assume that variables are normally distributed
(Chen & Pearl  2014)  meaning that the observational data can be summarized with a covariance
matrix Σ. This covariance matrix can be linked to the underlying structural parameters through the

1Such models are also referred to as structural equation models  or SEM  in the literature.

33rd Conference on Neural Information Processing Systems (NeurIPS 2019)  Vancouver  Canada.

Efﬁcient?

? → *

? → *

Power
low

medium
medium

Identiﬁcation Power & Efﬁciency

system of equations Σ = XX T = (I − Λ)−T Ω(I − Λ)−1 (1)  where Ω’s elements  ij  represent
σij   and I is the identity matrix (Foygel et al.  2012). The task of causal effect identiﬁcation in
linear SCMs can  therefore  be seen as solving for the target structural parameter λij using Eq. (1). If
the parameter can be expressed in terms of Σ alone  then it is said to be generically identiﬁable.
Such systems of polynomial equations can be approached directly through the application of Gröbner
bases (García-Puente et al.  2010). In practice  however  these methods are doubly-exponential
(Bardet  2002) in the number of structural parameters  and become computationally intractable very
quickly  incapable of handling causal graphs with more than 4 or 5 nodes (Foygel et al.  2012).
Identiﬁcation in linear SCMs has been a topic of great interest for nearly a century (Wright  1921) 
including much of the early work in econometrics (Wright  1928; Fisher  1966; Bowden & Turkington 
1984; Bekker et al.  1994). The computational aspects of the problem  however  have only more
recently received attention from computer scientists and statisticians (Pearl  2000  Ch. 5).
Since then  there has been a growing body of literature
developing successively more sophisticated methods with
increasingly stronger identiﬁcation power i.e.  capable of
covering a larger spectrum of identiﬁable effects. Deciding
whether a certain structural parameter can be identiﬁed in
polynomial time is currently an open problem.
The most popular identiﬁcation method found in the lit-
erature today is known as the instrumental variable (IV)
(Wright  1928). A number of extensions of IVs have been
proposed  including conditional IV (cIV)  (Bowden &
Turkington  1984; Van der Zander et al.  2015)  uncondi-
tioned instrumental sets (IS) (Brito  2004)  and the half-
trek criterion (HTC) (Foygel et al.  2012)  all of which are
accompanied with efﬁcient  polynomial-time algorithms.
In contrast  generalized instrumental sets (gIS) (Brito &
Pearl  2002) were developed as a graphical criterion  with-
out an efﬁcient algorithm. Van der Zander & Liskiewicz
(2016) proved that checking existence of conditioning sets
that satisfy the gIS given a set of instruments is NP-Hard.
They further proposed a simpliﬁed version of the criterion
(scIS)  for which ﬁnding a conditioning set can be done ef-
ﬁciently. It remains an open problem whether instruments
satisfying the gIS can be found in polynomial time.
The generalized HTC (gHTC) (Chen  2016; Weihs et al. 
2017) and auxiliary variables (AVS) (Chen et al.  2016 
2017) were developed with algorithms that were polyno-
mial  provided that the number of incoming edges to each
node in the causal graph were bounded. The corresponding algorithms are exponential without this
restriction  since they enumerate all subsets of each node’s incident edges.
More recently  Weihs et al. (2017) showed how constraints stemming from determinants of minors
in the covariance matrix (Sullivant et al.  2010) can be exploited for identiﬁcation (TSID). Still  the
complexity of their method was left as an open problem. We use the term tsIV to refer to the unnamed
criterion underlying the TSID algorithm. Against this background  our contributions are as follows:
• We develop an efﬁcient algorithm for ﬁnding instrumental subsets  which overcomes the
need for enumerating all subsets of incoming edges into each node. This leads to efﬁcient
identiﬁcation algorithms exploiting the gHTC and AVS criteria.

Algorithm
IVa
cIVb
ISd
scISc
gISd
HTCe
gHTCf g
very high
cAV & AVSh
very high
very high
Our Method
gAVSh
very high
TSID & gHTCg very high
Gröbneri
complete
a Wright (1928);
b Bowden & Turkington (1984);
c Van der Zan-
d Brito & Pearl
der et al. (2015); Van der Zander & Liskiewicz (2016);
g Weihs et al. (2017);
(2002);
h Chen et al. (2017);
† Finding conditioning set for candidates shown to be NP-hard by (c)  but
complexity of search is open question
‡ Previous algorithms only polynomial if node input degree bounded
* One of our contributions is proving NP-Completeness of this method

Table 1: Our contributions in relation
to existing literature are shown in red;
Ordered roughly by identiﬁcation power:
? → represents methods for which we
determined complexity in this work.

? → ‡
? → ‡

e Foygel et al. (2012);

f Chen (2016);


c


?†



?†



high
high
high

i García-Puente et al. (2010)

• We prove NP-Completeness of ﬁnding tsIVs and scIS  which shows they are impractical for

use in large graphs without constraining their search space.

• Finally  we introduce a new criterion  called Instrumental Cutsets  and develop an associated
polynomial-time identiﬁcation algorithm. We show that ICs subsume both gHTC and AVS.

For the sake of clarity  a summary of our results in relation to existing literature is shown in Table 1.

2

a

a

λab

b

λbc

c

a•

λ

a

b

bc

λbc

b

(a)

aa

bb



b

c  b c

cc

c

λab

a’

b’

λbc

c’

(b)

•

z1

x1 •

•

•

z2

x2

•
•
b

(c)

•
c

y

(d)

Figure 1: Conversion of an instrumental variable (a) into a trek-encoding ﬂow graph shown in (b)
if one ignores the colorings. From it  we can deduce that σbc = λabaaλabλbc + bbλbc. (c) shows
another way of drawing the sets from (b)  which facilitates interpretation in more complex settings.
(d) z1  z2 can be used as an instrumental set to solve for λx1y.

2 Preliminaries

The causal graph of an SCM is deﬁned as a triple G = (V  D  B)  where V represents the nodes  D
the directed edges  and B the bidirected ones. A linear SCM’s graph has a node vi for each variable
xi  a directed edge between vi and vj for each non-zero λij  and a bidirected edge between vi and
vj for each non-zero ij (Fig. 1a). Each edge in the graph  therefore  corresponds to an unknown
coefﬁcient  which we call a structural parameter. When clear from the context  we will use λij and
ij to refer to the corresponding directed and bidirected edges in the graph. We deﬁne P a(xi) as the
set of parents of xi  An(xi) as ancestors of xi  De(xi) as descendants of xi  and Sib(xi) as variables
connected to xi with bidirected edges (i.e.  variables with latent common causes).
We will refer to paths in the graph as “unblocked" conditioned on a set W (which may be empty)  if
they contain a collider (a → b ← c  a ↔ b ↔ c  a → b ↔ c) only when b ∈ W ∪An(W )  and if they
do not otherwise contain vertices from W (see d-separation  Koller & Friedman (2009)). Unblocked
paths without conditioning do not contain colliders  and are referred to as treks (Sullivant et al.  2010).
The computable covariances of observable variables and the unknown structural parameters given in
Eq. (1) have a graphical interpretation in terms of a sum over all treks between nodes in the causal

graph  namely σxy =(cid:80) π(x  y)  where π is the product of structural parameters along the trek.

Since unblocked paths in the causal graph have a non-trivial relation to arrow directions  we follow
Foygel et al. (2012) in constructing an alternate DAG  called the “ﬂow graph" (Gf low)  which encodes
treks as directed paths between nodes (see Fig. 1b  where the blue path shows a trek between A and
B in Fig. 1a  meaning σab = aaλab). When referencing the ﬂow graph  we call the “top” nodes (e.g. 
a  b  c in Fig. 1b) the “source nodes"  and the “bottom” nodes (a(cid:48)  b(cid:48)  c(cid:48)) the “sink nodes".
Treks between two sets of nodes in G are said to have “no sided intersection" if they do not intersect
in Gf low. The red and blue paths of Fig. 1b show such a set from {a  b} to {b(cid:48)  c(cid:48)}. Non-intersecting
2. We visually denote
path sets are related to minors of the covariance matrix  denoted with Σ(a b) (b c)
the source and sink sets in the original graph with a dot near the top of the node if it is a source  and a
dot near the bottom if it is a sink. By these conventions  Fig. 1b can be represented by Fig. 1c.
For simplicity  we will demonstrate many of our contributions in the context of instrumental sets:
Deﬁnition 2.1. (Brito & Pearl  2002) A set Z is called an instrumental set (IS) relative to X ⊆
P a(y) if (i) there exists an unblocked path set without sided intersection between Z and X  and (ii)
there does not exist an unblocked path from any z ∈ Z to y in G with edges X → y removed.
In Fig. 1d  {z1  z2} is an instrumental set relative to {x1  x2}  leading to a system of equations
solvable for λx1y  λx2y. A conditioning set W can be added to block paths from Z to y  creating the
simple conditional IS (scIS). If each zi has its own conditioning set  it is called a generalized IS (gIS).
A set of identiﬁed structural parameters Λ∗ can be used to create “auxiliary variables" (Chen et al. 
2016) which subtract out parents of variables whose effect is known: x∗
λxj xi∈Λ∗ λxj xixj.
Using these variables as instruments leads to AV sets (AVS)  which are equivalent to the gHTC3.
Finally  we will build upon the tsIV  which exploits ﬂow constraints in Gf low to identify parameters:
2Refer to Sullivant et al. (2010) and the Gessel-Viennot-Lindström Lemma (A.1) (Gessel & Viennot  1989).
3Full deﬁnitions for the methods mentioned in this section are available in Appendix A.1.

i = xi −(cid:80)

3

z2

z3•

x2 •

x3

x4

z1•

•
x1

•

z1

•

z2

w

x3

x1 •

x2 •

z4•

•
x5

y

(a)

y

(b)

a

b

x

y

c

(c)

z1•

•
x1

•
w •

•
•

z2

x2

y

(d)

Figure 2: (a): only a subset of edges can be identiﬁed with an instrumental set  and ﬁnding the
maximal subset in arbitrary graphs was exponential in previous algorithms. (b): λx1y could previously
only be identiﬁed using tsIVs  which we show are NP-hard to ﬁnd. (c): λxy cannot be identiﬁed
using tsIVs  but is identiﬁed through iterative application of Theorem 5.1 (λbx using a  λyc using x∗ 
and λxy using c∗). (d): λx1y is identiﬁable with cAV but is not captured by IC.

Deﬁnition 2.2. (Weihs et al.  2017) Sets S  T ⊂ V   |S| = |T| + 1 = k are a tsIV with respect to λxy
if (i) De(y) ∩ T = ∅ (ii) The max ﬂow between S and T (cid:48) ∪ {x(cid:48)} in Gf low is k  (iii) The max ﬂow
between S and T (cid:48) ∪ {y(cid:48)} in Gf low with x(cid:48) → y(cid:48) w(cid:48)

i → y(cid:48)  λwiy ∈ Λ∗ removed is less than k.

3 Efﬁciently Finding Instrumental Subsets

When identifying a causal effect  λx1y  using instrumental sets  it is often the case that no instrument
exists for x1  but an instrumental set does exist for a subset of y’s parents that includes x1. For
example  in Fig. 1d  there does not exist any IV for {x1}  but {z1  z2} is an instrumental set for
{x1  x2}  allowing identiﬁcation of both λx1y and λx2y. Likewise  in Fig. 2a  {x1  x2  x5} is the only
subset of P a(y) which has a valid instrumental set ({z1  z3  z4}).
One method for ﬁnding sets satisfying a criterion like IS would be to list all subsets of y’s incident
edges  and for each subset  check if there exist corresponding variables {z1  ...  zk} satisfying all
requirements. This is indeed the approach that algorithms developed for the gHTC (Chen  2016;
Weihs et al.  2017) and AVS (Chen et al.  2016) take. However  enumerating all subsets is clearly
exponential in the number structural parameters / edges pointing to y. In this section  we show that
ﬁnding this parameter subset can instead be performed in polynomial-time.
First  we deﬁne the concept of “match-blocking"  which generalizes the above problem to arbitrary
source and sink sets in a DAG  and can be used to create algorithms for ﬁnding valid subsets applicable
to IS  the gHTC  AVS  and our own identiﬁcation criterion  instrumental cutsets (IC).
Deﬁnition 3.1. Given a directed acyclic graph G = (V  D)  a set of source nodes S and sink nodes
T   the sets Sf ⊆ S and Tf ⊆ T   with |Sf| = |Tf| = k  are called match-blocked iff for each
si ∈ Sf   all elements of T reachable from si are in the set Tf   and the max ﬂow between Sf and Tf
is k in G where each vertex has capacity 1.

To efﬁciently ﬁnd a match-block4  we observe that if a max ﬂow is done from a set of variables S to
T   then any element of T that has 0 ﬂow through it cannot be part of a match-block  and therefore
none of its ancestors in S can be part of the match-block either:
Theorem 3.1. Given a directed acyclic graph G = (V  D)  a set of source nodes S  sink nodes T  
and a max ﬂow F from S to T in G with vertex capacity 1  if a node ti ∈ T has 0 ﬂow crossing it in
F  then there do not exist subsets Sm ⊆ S  Tm ⊆ T where Sm  Tm are match-blocked and ti ∈ Tm.
Furthermore  for any match-block (Sm  Tm)  we have |Sm ∩ An(ti)| = 0.
This suggests an algorithm for ﬁnding the match-block: ﬁnd a max ﬂow from S to T   then remove
elements of T that did not have a ﬂow through them  and all of their ancestors from S  and repeat
until no new elements are removed. The procedure  given in Algorithm 1  runs in polynomial time.

4While there exist methods for ﬁnding solvable subsystems of equations (Duff & Reid  1978; Sridhar et al. 
1996; Gonçalves & Porto  2016)  they cannot be applied to our situation due to the requirement of nonintersecting
paths in a full arbitrary DAG.

4

A

λ

a

b



a

b

A

b

−λ a

λ

a

b

B

C

B∗

(a)

1

B

(b)

A

λab

B

λbc

C

aa



a

b

b

a



1

B∗
bb

cc

C

A’

λab

B’

λbc

C’

(c)

A

b

 a

B∗

1

λ

a

b

B

(d)

λ

bc

A

λab

B

A∗
aa
A(cid:48)∗
1

1

1

b

a




a

b

λab

B∗
bb
B(cid:48)∗
1

λ b c

C

A’

B’

(e)

C

C’

1
C∗
cc
C(cid:48)∗
1

Figure 3: The graph in (a) with edge λab known has an auxiliary variable B∗ shown in (b). (c) shows
a modiﬁed ﬂow graph  which encodes the treks from B∗ excluding the known edge. This corresponds
to a new encoding of the AV  shown in (d). Finally  (e) gives the auxiliary ﬂow graph as described in
Deﬁnition 3.2

Algorithm 1 Find Maximal Match-Block given DAG G  source nodes S and target nodes T

function MAXMATCHBLOCK(G S T)

do F ← MAXFLOW(G  S  T )

T (cid:48) ← {ti|F has 0 ﬂow through ti ∈ T}
T ← T \ T (cid:48)
S ← S \ An(T (cid:48))

while at least one element of T was removed in this iteration
return (S  T )

end function

The match-block can be exploited to ﬁnd instrumental subsets by using Gf low with ancestors of y
that don’t have back-paths to siblings of y as S and P a(y)(cid:48) as T . This procedure is shown to ﬁnd an
IS if one exists in Corollary A.3  and is implemented in Algorithm 3 of the appendix.

3.1 Extending IS to AVS with the Auxiliary Flow Graph

A match-block operates upon a directed graph. When using instrumental sets  one can convert the
SCM to the ﬂow graph Gf low  but the AVS algorithm exploits auxiliary variables  which are not
encoded in this graph. The covariance of an auxiliary variable with another variable y can be written:

σb∗y = IE[b∗y] = IE

b − (cid:88)

 y

 = σby − (cid:88)

λxibxi

λxib∈Λ∗

λxibσxiy

λxib∈Λ∗

This quantity behaves like σby with treks from b starting with the known λxib removed. We can
therefore construct a ﬂow graph which encodes this intuition explicitly using Deﬁnition 3.2. An
example of an auxiliary ﬂow graph can be seen in Fig. 3  which uses b∗ = b − λaba. In Fig. 3c  B∗
no longer has the edge λab to A  but it still has all other edges  giving it all of the same treks as B 
except the ones subtracted out in the AV. The original variable  B  has an edge with weight 1 to B∗ 
making its treks identical to the standard ﬂow graph. With this new graph  and MAXMATCHBLOCK 
the algorithm for instrumental sets can easily be extended to ﬁnd AVS (Algorithm 4 in appendix) 
which in turn is equivalent to the gHTC. We have therefore shown that both of these methods can be
efﬁciently applied for identiﬁcation  without a restriction on number of edges incoming into a node.
Deﬁnition 3.2. (Auxiliary Flow Graph) Given a linear SCM (Λ  Ω) with causal graph G =
(V  D  B)  and set of known structural parameters Λ∗  the auxiliary ﬂow graph is a weighted
DAG with vertices V ∪ V ∗ ∪ V (cid:48) ∪ V (cid:48)∗ and edges

1. j → i and i(cid:48) → j(cid:48) both with weight λij if (i → j) ∈ D  and λij ∈ Λ∗
2. j∗ → i and i(cid:48) → j(cid:48)∗ both with weight λij if (i → j) ∈ D  and λij /∈ Λ∗
3. i → i∗ and i(cid:48)∗ → i(cid:48) with weight 1  and i∗ → i(cid:48) with weight ii for i ∈ V
4. i∗ → j(cid:48)∗ with weight ij if (i ↔ j) ∈ B

5

•
a •

•

z1

•
x1

•
b•

•

z2

•
x2

y

(a)

a

•
b •

z1

z2

•

¬c

z3

d

e

z5

z6

•
c•

•

z4

•
x2

•
x1

y

(b)

Figure 4: The model in (a) encodes the basic structure we exploit in our proof. The set {z1  z2} is a
simple conditional instrumental set only if z1 ↔ b and z2 ↔ a do not exist  since it opens the collider
from z1 through b to y. (b) shows the full encoding of a 1-in-3SAT for (a ∨ b ∨ ¬c) ∧ (c ∨ d ∨ e).
We have removed bidirected edges from all top nodes to y in (b) for clarity.

This graph is referred to as Gaux. The nodes without (cid:48) are called “source”  or “top” nodes  and the
nodes with (cid:48) are called “sink” or “bottom” nodes. The nodes with ∗ are called “auxiliary" nodes.

4 On Searching for tsIVs (Weihs et al.  2017)

There exist structural parameters that can be identiﬁed using tsIVs  which cannot be found with
gHTC  AVS  nor any other efﬁcient method. However  there currently does not exist an efﬁcient
algorithm for ﬁnding tsIVs in arbitrary DAGs. This section can be summarized with Corollary 4.1:
Corollary 4.1. Given an SCM and target structural parameter λxy  determining whether there exists
a tsIV which can be used to solve for λxy in G is an NP-Complete problem.

We show this by encoding 1-in-3SAT  which is NP-Complete (Schaefer  1978)  into a graph  such
that ﬁnding a tsIV is equivalent to solving for a satisfying boolean assignment.
Since tsIVs can be difﬁcult to intuitively visualize  we will illustrate the ideas behind the proof
with simple conditional instrumental sets (scIS)  which we also show are NP-Complete to ﬁnd
(Corollary A.5). We observe a property of the graph in Fig. 4a: with a ↔ z2 and z1 ↔ b removed
(blue)  {z1  z2} can be used as scIS for λx1y  λx2y  since their back-paths to y (z1 ← a ↔ y and
z2 ← b ↔ y) can be blocked by conditioning on W = {a  b}. However  if the bidirected edges are
not removed  conditioning on a or b opens a path to y using them as a collider (z1 ↔ b ↔ y and
z2 ↔ a ↔ y). A simple conditional instrumental set for λx1y exists in this graph if and only if none
of the instruments has bidirected edges to another instrument’s required conditioning variable.
We exploit this property to construct the graph in Fig. 4b  which repeats the structure from Fig. 4a
for each literal li in the 1-in-3SAT formula (a ∨ b ∨ ¬c) ∧ (c ∨ d ∨ e). Each clause is designed so
that usage of any potential instrument  zi  precludes usage of the other two potential instruments
in the clause. For example  the bidirected edges in Fig. 4b from z2 to a and b disallow usage of z1
and z2 as instruments once z2 is used. Likewise  there are bidirected edges between the c and ¬c
structures  since if c is true  ¬c cannot be true. Similarly  b has bidirected edges to d and e  since if
a is true  then ¬c is false and c is true  so d and e must be disabled. Finally  y has 2 parents  x1  x2 
corresponding to the two clauses. Each element of Z has edges to all parents of y  meaning that any
scIS existing in the graph must have as many instruments as there are clauses. Thus  ﬁnding an scIS
for y in this graph corresponds to ﬁnding a satisfying assignment for the formula. The full procedure
for generating the graph  which is the same for both scIV and tsIV  is given in Theorem 4.1.
Theorem 4.1. Given a boolean formula F in conjunctive normal form  if a graph G is constructed
as follows  starting from a target node y:

1. For each clause ci ∈ F   a node xi is added with edges xi → y and xi ↔ y
2. For ci ∈ F   take each literal lj ∈ ci  and add nodes zij  wij  with edges wij → zij 

wij ↔ y  and zij → xk ∀xk

3. For ci ∈ F   lj  lk ∈ ci where j (cid:54)= k add bidirected edge zij ↔ wik
4. ∀ci  cm ∈ F  lj ∈ ci  ln ∈ cm with i (cid:54)= m  add a bidirected edge zij ↔ wmn if

6

(a) lj = ¬ln  or
(b) ∃lq ∈ cm with q (cid:54)= n and lj = lq  or
(c) ∃lp ∈ ci  lq ∈ cm with p (cid:54)= j and q (cid:54)= n where lp = ¬lq

Then a tsIV exists for λx1y in G if and only if there is a truth assignment to the variables of F such
that there is exactly one true literal in each clause of F .

5 The Instrumental Cutset Identiﬁcation Criterion

While ﬁnding a tsIV is NP-hard  it is possible to create a new criterion  which both includes constraints
from the tsIV that can be efﬁciently found  and exploits knowledge of previously identiﬁed edges
similarly to AVS. This criterion is described in the following theorem.
Theorem 5.1. (Instrumental Cutset) Let M = (Λ  Ω) be a linear SCM with associated causal graph
G = (V  D  E)  a set of identiﬁed structural parameters Λ∗  and a target structural parameter λxy.
Deﬁne Gaux as the auxiliary ﬂow graph for (G  Λ∗). Suppose that there exist subsets S ⊂ V ∪ V ∗ 
with V ∗ representing the set of AVs  and T ⊆ P a(y∗) \ {x} with |S| = |T| − 1 = k such that

1. There exists a ﬂow of size k in Gaux from S to T ∪ {x}
2. There does not exist a ﬂow of size k from S to T ∪ {y} in Gaux with x(cid:48) → y(cid:48)∗ removed
3. No element of {y} ∪ Sib(y) has a directed path to si ∈ S in G

then λxy is generically identiﬁable by the equation:

λxy =

det ΣS T∪{y∗}
det ΣS T∪{x}

Instrumental Cutsets (ICs) differ from tsIVs in two fundamental ways:

1. We allow auxiliary variables  enabling exploitation of previously identiﬁed structural param-
eters incoming to si ∈ S for identiﬁcation. An example that is identiﬁable with ICID  but
not with TSID is shown in Fig. 2c.

2. We require that T is a subset of the parents of target node y  and that y has no half-treks to S.
A version of IC which avoids these requirements is given in Theorem A.4 in the appendix.
While this version is strictly more powerful than tsIV  ﬁnding satisfying sets can be shown
to be NP-hard by a modiﬁed version of the arguments given in Section 4 (Appendix A.4.1).

λx1y in Fig. 2b is an example of a parameter that can be identiﬁed using ICs. To see this  consider
the paths from {z1  z2} to y that do not have sided intersection anywhere but at y. One such path set
is z1 → x1 → y and z2 → w → x2 → y. After removing the edge x1 → y  there no longer exist 2
separate nonintersecting paths to y  because the node w forms a bottleneck  or cut  allowing only one
path to pass to y. According to theorem 5.1  this is sufﬁcient to uniquely solve for λx1y.
In contrast  previously known efﬁcient algorithms cannot identify λx1y. z1  which is the only possible
instrument for x1  has unblockable paths to y through x2 and x3 (w cannot be conditioned  since it
has a bidirected edge to y). Furthermore  only z2 is a possible additional instrument for x2 or x3 
giving 2 candidate instruments {z1  z2} for a set of 3 parents of y  {x1  x2  x3}  all of which need to
be matched to an instrument to enable solving for λx1y.
In general  any coefﬁcient that can be identiﬁed using the gHTC or AVS can also be identiﬁed using
ICs. ICs  therefore  strictly subsume gHTC and AVS.
Lemma 5.1. If a structural parameter λxy of linear SCM M is identiﬁable using the gHTC or AVS
then λxy is identiﬁed using IC. There also exists a model M(cid:48) such that λxy is identiﬁable using IC 
but cannot be identiﬁed using gHTC or AVS.

Lastly  we discuss the identiﬁcation power of ICs with respect to cAVs (Chen et al.  2017)  which
are single auxiliary conditional instruments  and can be found in polynomial-time. While there are
many examples of parameters that ICs  and even the gHTC and AVS  can identify that cAVs cannot 
it turns out there are also examples that the cAV can identify that ICs cannot. This is because ICs 

7

Algorithm 2 IC solves for edges incoming to y given a set of known edges Λ∗

function IC(G  y  Λ∗)

Gaux ← AUXILIARYFLOWGRAPH(G  Λ∗)
T ← all sink-node parents of y(cid:48)∗ in Gaux
aux ← Gaux with edges ti ∈ T to y(cid:48)∗ removed
Gy
S ← Source nodes in Gy
C ← CLOSESTMINVERTEXCUT(Gaux  S  T )
Sf ← elements of S that have a full ﬂow to C
(Cm  Tm) ← MAXMATCHBLOCK(Gauxwith edges to C removed  C  T )
Tf ← elements of T that are part of a full ﬂow between C \ Cm and T \ Tm
return (Sf   Tf ∪ Tm  Tm)

aux which are not ancestors of y(cid:48)∗

end function

which operate on sets of variables  do not include conditioning. In Fig. 2d  z1 is a cAV for λx1y
when conditioned on {w  z2}  but no IC exists  because λx2x1 cannot be identiﬁed  and therefore the
back path from x1 through w ↔ y cannot be eliminated. While a version of ICs with conditioning
could be developed  the algorithmic complexity of ﬁnding parameters identiﬁable by such a criterion
is unclear. A version of ICs with a single conditioning set would be NP-hard to ﬁnd  which can
be shown using a modiﬁed version of our results from Section 4 (see Appendix A.4.1). On the
other hand  a version with multiple conditioning sets (one for each si ∈ S) would require additional
algorithmic breakthroughs  due to its similarity to the as-yet unsolved gIS.

5.1 Efﬁcient Algorithm for Finding Instrumental Cutsets

To demonstrate efﬁciency of IC  we develop a polynomial-time algorithm that ﬁnds all structural
parameters identiﬁable through iterative application of Theorem 5.1. To do so  we show that the
conditions required by Theorem 5.1 can be reduced to ﬁnding a match-block in Gaux:
Theorem 5.2. Given directed graph G = (V  D)  a target edge x → y  a set of “candidate sources"
S  and the vertex min-cut C between S and P a(y) closest to P a(y)  then there exist subsets Sf ⊆ S
and Tf ⊆ P a(y) where |Sf| = |Tf| + 1 = k such that

1. the max-ﬂow from Sf to Tf ∪ {x} is k in G  and
2. the max-ﬂow from Sf to Tf ∪ {y} in G(cid:48) where x → y is removed is k − 1

if and only if x is part of a match-block between C and P a(y) in G with all edges incoming to ci ∈ C
removed.

Note that the “closest min-cut” C required by Theorem 5.2 can be found using the Ford-Fulkerson
algorithm with P a(y) as source and S as sink (Picard & Queyranne  1982).
Theorem 5.2 was proven by explicitly constructing the sets Sf and Tf using a match-block. The
procedure for doing so is given in Algorithm 2. It works by ﬁnding a set Sf which has a full ﬂow to
C  which in turn has a match-block to P a(y) (due to the requirement that none of the Sf have paths
to y through Sib(y) ↔ y). The min-cut ensures that once x → y is removed  all paths to y must still
go through the set C  and the match-block from C to P a(y) ensures that there is no way to reorder
the paths to create a ﬂow to y through a different parent. This guarantees that the ﬂow constraints are
satisﬁed  so there is a corresponding IC. The full algorithm for ﬁnding all edges identiﬁable with ICs
can be constructed by recursively applying the procedure on the auxiliary ﬂow graph  as shown in
Algorithm 5 (ICID)5.

6 Conclusion

We have developed a new  polynomial-time algorithm for identiﬁcation in linear SCMs. Previous
algorithms with similar identiﬁcation power had either exponential or unknown complexity  with
existing implementations using exponential components. Finally  we also showed that the promising
method called tsIV cannot handle arbitrarily large graphs due to its inherent computational complexity.

5A Python implementation is available at https://github.com/dkumor/instrumental-cutsets

8

Acknowledgements

Bareinboim and Kumor are supported in parts by grants from NSF IIS-1704352  IIS-1750807
(CAREER)  IBM Research  and Adobe Research. Part of Chen’s contributions were made while at
IBM Research.

References
Bardet  Magali. On the Complexity of a Gröbner Basis Algorithm. pp. 8  2002.

Bareinboim  Elias and Pearl  Judea. Causal inference and the data-fusion problem. Proceedings of

the National Academy of Sciences  113(27):7345–7352  July 2016.

Bekker  Paul A.  Merckens  Arjen  and Wansbeek  Tom J. Identiﬁcation  Equivalent Models  and

Computer Algebra. Academic Press  1994.

Bowden  Roger J and Turkington  Darrell A. Instrumental Variables  volume 8. Cambridge University

Press  1984.

Brito  Carlos and Pearl  Judea. Generalized instrumental variables. In Proceedings of the Eighteenth
Conference on Uncertainty in Artiﬁcial Intelligence  pp. 85–93. Morgan Kaufmann Publishers Inc. 
2002.

Brito  Carlos Eduardo Fisch. Graphical Methods for Identiﬁcation in Structural Equation Models.

PhD Thesis  University of California Los Angeles  CA 90095-1596  USA  2004.

Chen  B. J. Pearl  and Bareinboim  E. Incorporating knowledge into structural equation models
using auxiliary variables. In Kambhampati  S. (ed.)  Proceedings of the Twenty-ﬁfth International
Joint Conference on Artiﬁcial Intelligence  pp. 3577–3583. AAAI Press  New York  NY  2016.

Chen  Bryant. Identiﬁcation and Overidentiﬁcation of Linear Structural Equation Models. In Lee 
D. D.  Sugiyama  M.  Luxburg  U. V.  Guyon  I.  and Garnett  R. (eds.)  Advances in Neural
Information Processing Systems 29  pp. 1587–1595. Curran Associates  Inc.  2016.

Chen  Bryant and Pearl  Judea. Graphical tools for linear structural equation modeling. Technical

report  DTIC Document  2014.

Chen  Bryant  Kumor  Daniel  and Bareinboim  Elias. Identiﬁcation and Model Testing in Linear
Structural Equation Models Using Auxiliary Variables. In Proceedings of the 34th International
Conference on Machine Learning - Volume 70  ICML’17  pp. 757–766. JMLR.org  2017.

Draisma  Jan  Sullivant  Seth  and Talaska  Kelli. Positivity for Gaussian graphical models. Advances
in Applied Mathematics  50(5):661–674  May 2013. ISSN 0196-8858. doi: 10.1016/j.aam.2013.
03.001.

Duff  I. S. and Reid  J. K. An Implementation of Tarjan’s Algorithm for the Block Triangularization

of a Matrix. ACM Transactions on Mathematical Software  4(2):137–147  June 1978.

Fisher  Franklin M. The Identiﬁcation Problem in Econometrics. McGraw-Hill  1966.

Foygel  Rina  Draisma  Jan  and Drton  Mathias. Half-trek criterion for generic identiﬁability of

linear structural equation models. The Annals of Statistics  pp. 1682–1713  2012.

García-Puente  Luis D.  Spielvogel  Sarah  and Sullivant  Seth. Identifying Causal Effects with
Computer Algebra. In Proceedings of the Twenty-Sixth Conference on Uncertainty in Artiﬁcial
Intelligence  UAI’10  pp. 193–200  Arlington  Virginia  United States  2010. AUAI Press. ISBN
978-0-9749039-6-5.

Gessel  Ira M and Viennot  Xavier. Determinants  paths  and plane partitions. 1989.

Gonçalves  Bernardo and Porto  Fabio. A note on the complexity of the causal ordering problem.

Artiﬁcial Intelligence  238:154–165  2016.

9

Koller  Daphne and Friedman  Nir. Probabilistic Graphical Models: Principles and Techniques. MIT

press  2009.

Pearl  J. Causality: Models  Reasoning  and Inference. Cambridge University Press  New York  2000.

2nd edition  2009.

Picard  Jean-Claude and Queyranne  Maurice. On the structure of all minimum cuts in a network and

applications. Mathematical Programming  22(1):121–121  December 1982.

Schaefer  Thomas J. The complexity of satisﬁability problems. In Proceedings of the Tenth Annual
ACM Symposium on Theory of Computing - STOC ’78  pp. 216–226  San Diego  California  United
States  1978. ACM Press.

Sridhar  Natarajan  Agrawal  Rajiv  and Kinzel  Gary L. Algorithms for the structural diagnosis
and decomposition of sparse  underconstrained design systems. Computer-Aided Design  28(4):
237–249  April 1996.

Sullivant  Seth  Talaska  Kelli  and Draisma  Jan. Trek separation for Gaussian graphical models. The

Annals of Statistics  pp. 1665–1685  2010.

Van der Zander  Benito and Liskiewicz  Maciej. On Searching for Generalized Instrumental Variables.
In Proceedings of the 19th International Conference on Artiﬁcial Intelligence and Statistics
(AISTATS-16)  2016.

Van der Zander  Benito  Textor  Johannes  and Liskiewicz  Maciej. Efﬁciently Finding Conditional
IJCAI 2015  Proceedings of the 24th International Joint

Instruments for Causal Inference.
Conference on Artiﬁcial Intelligence  2015.

Weihs  Luca  Robinson  Bill  Dufresne  Emilie  Kenkel  Jennifer  Kubjas  Reginald McGee
II Kaie  Reginald  McGee II  Nguyen  Nhan  Robeva  Elina  and Drton  Mathias. Determi-
nantal Generalizations of Instrumental Variables. Journal of Causal Inference  6(1)  2017. doi:
10.1515/jci-2017-0009.

Wright  Philip G. Tariff on Animal and Vegetable Oils. Macmillan Company  New York  1928.

Wright  Sewall. Correlation and causation. Journal of agricultural research  20(7):557–585  1921.

10

,Yilin Zhang
Karl Rohe
Daniel Kumor
Bryant Chen
Elias Bareinboim