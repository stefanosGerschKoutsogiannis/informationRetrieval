2016,Sample Complexity of Automated Mechanism Design,The design of revenue-maximizing combinatorial auctions  i.e. multi item auctions over bundles of goods  is one of the most fundamental problems in computational economics  unsolved even for two bidders and two items for sale. In the traditional economic models  it is assumed that the bidders' valuations are drawn from an underlying distribution and that the auction designer has perfect knowledge of this distribution. Despite this strong and oftentimes unrealistic assumption  it is remarkable that the revenue-maximizing combinatorial auction remains unknown. In recent years  automated mechanism design has emerged as one of the most practical and promising approaches to designing high-revenue combinatorial auctions. The most scalable automated mechanism design algorithms take as input samples from the bidders' valuation distribution and then search for a high-revenue auction in a rich auction class. In this work  we provide the first sample complexity analysis for the standard hierarchy of deterministic combinatorial auction classes used in automated mechanism design. In particular  we provide tight sample complexity bounds on the number of samples needed to guarantee that the empirical revenue of the designed mechanism on the samples is close to its expected revenue on the underlying  unknown distribution over bidder valuations  for each of the auction classes in the hierarchy. In addition to helping set automated mechanism design on firm foundations  our results also push the boundaries of learning theory. In particular  the hypothesis functions used in our contexts are defined through multi stage combinatorial optimization procedures  rather than simple decision boundaries  as are common in machine learning.,Sample Complexity of Automated Mechanism Design

Maria-Florina Balcan  Tuomas Sandholm  Ellen Vitercik

{ninamf sandholm vitercik}@cs.cmu.edu

School of Computer Science
Carnegie Mellon University

Pittsburgh  PA 15213

Abstract

The design of revenue-maximizing combinatorial auctions  i.e. multi-item auctions
over bundles of goods  is one of the most fundamental problems in computational
economics  unsolved even for two bidders and two items for sale. In the traditional
economic models  it is assumed that the bidders’ valuations are drawn from an
underlying distribution and that the auction designer has perfect knowledge of
this distribution. Despite this strong and oftentimes unrealistic assumption  it is
remarkable that the revenue-maximizing combinatorial auction remains unknown.
In recent years  automated mechanism design has emerged as one of the most prac-
tical and promising approaches to designing high-revenue combinatorial auctions.
The most scalable automated mechanism design algorithms take as input samples
from the bidders’ valuation distribution and then search for a high-revenue auction
in a rich auction class. In this work  we provide the ﬁrst sample complexity analysis
for the standard hierarchy of deterministic combinatorial auction classes used in
automated mechanism design. In particular  we provide tight sample complexity
bounds on the number of samples needed to guarantee that the empirical revenue
of the designed mechanism on the samples is close to its expected revenue on the
underlying  unknown distribution over bidder valuations  for each of the auction
classes in the hierarchy. In addition to helping set automated mechanism design on
ﬁrm foundations  our results also push the boundaries of learning theory. In partic-
ular  the hypothesis functions used in our contexts are deﬁned through multi-stage
combinatorial optimization procedures  rather than simple decision boundaries  as
are common in machine learning.

1

Introduction

Multi-item  multi-bidder auctions have been studied extensively in economics  operations research 
and computer science. In a combinatorial auction (CA)  the bidders may submit bids on bundles of
goods  rather than on individual items alone  and thereby they may fully express their complex valua-
tion functions. Notably  these functions may be non-additive due to the presence of complementary
or substitutable goods for sale. There are many important and practical applications of CAs  ranging
from the US government’s wireless spectrum license auctions to sourcing auctions  through which
companies coordinate the procurement and distribution of equipment  materials and supplies.
One of the most important and tantalizing open questions in computational economics is the design
of optimal auctions  that is  auctions that maximize the seller’s expected. In the standard economic
model  it is assumed that the bidders’ valuations are drawn from an underlying distribution and that
the mechanism designer has perfect information about this distribution. Astonishingly  even with this
strong assumption  the optimal CA design problem is unsolved even for auctions with just two distinct
items for sale and two bidders. A monumental advance in the study of optimal auction design was
the characterization of the optimal 1-item auction [Myerson  1981]. However  the problem becomes

30th Conference on Neural Information Processing Systems (NIPS 2016)  Barcelona  Spain.

signiﬁcantly more challenging with multiple items for sale. In particular  Conitzer and Sandholm
proved that the problem of ﬁnding a revenue-maximizing deterministic CA is NP-complete [Conitzer
and Sandholm  2004]. We note here that it is well-known that randomization can increase revenue in
CAs  but we focus on deterministic CAs in this work because in many applications  randomization is
not palatable and very few  if any  randomized CAs are used in practice.
In recent years  a novel approach known as automated mechanism design (AMD) has been adopted
to attack the revenue-maximizing auction design problem [Conitzer and Sandholm  2002  Sandholm 
2003]. In the most scalable strand of AMD  algorithms have been developed which take samples
from the bidders’ valuation distributions as input  optimize over a rich class of auctions  and return an
auction which is high-performing over the sample [Likhodedov and Sandholm  2004  2005  Sandholm
and Likhodedov  2015]. AMD algorithms have yielded deterministic mechanisms with the highest
known revenues in the contexts used for empirical evaluations [Sandholm and Likhodedov  2015].
This approach relaxes the unrealistic assumption that the mechanism designer has perfect information
about the bidders’ valuation distribution.
However  until now  there was no formal characterization of the number of samples required to
guarantee that the empirical revenue of the designed mechanism on the samples is close to its
expected revenue on the underlying  unknown distribution over bidder valuations. In this paper 
we provide that missing link. We present tight sample complexity guarantees over an extensive
hierarchy of expressive CA families. These are the most commonly used auction families in AMD.
The classes in the hierarchy are based on the classic VCG mechanism  which is a generalization of
the well-known second-price  or Vickrey  single-item auction. The auctions we consider achieve
signiﬁcantly higher revenue than the VCG baseline by weighting bidders (multiplicatively increasing
all of their bids) and boosting outcomes (additively increasing the liklihood that a particular outcome
will be the result of the auction).
A major strength of our results is their applicability to any algorithm that determines the optimal
auction over the sample  a nearly optimal approximation  or any other black box procedure. Therefore 
they apply to any automated mechanism design algorithm  optimal or not. One of the key challenges
in deriving these general sample complexity bounds is that to do so  we must develop deep insights
into how changes to the auction parameters (the bidder weights and allocation boosts) effect the
outcome of the auction (who wins which items and how much each bidder pays) and thereby the
revenue of the auction. In our context  we show that the functions which determine the outcome of an
auction are highly complex  consisting of multi-stage optimization procedures.
Therefore  the function classes we consider are much more challenging than those commonly found
in machine learning contexts. Typically  for well-understood classes of functions used in machine
learning  such as linear separators or other smooth curves in Euclidean spaces  there is a simple
mapping from the parameters of a speciﬁc hypothesis to its prediction on a given example and a
close connection between the distance in the parameter space between two parameter vectors and the
distance in function space between their associated hypotheses. Roughly speaking  it is necessary to
understand this connection in order to determine how many signiﬁcantly different hypotheses there
are over the full range of parameters. In our context  due to the inherent complexity of the classes we
consider  connecting the parameter space to the space of revenue functions requires a much more
delicate analysis. The key technical part of our work involves understanding this connection from a
learning theoretic perspective. For the more general classes in the hierarchy  we use Rademacher
complexity to derive our bounds  and for the auction classes with more combinatorial structure  we
exploit that structure to prove pseudo-dimension bounds. This work is both of practical importance
since we ﬁll a fundamental gap in AMD  and of learning theoretical interest  as our sample complexity
analysis requires a deep understanding of the structure of the revenue function classes we consider.
Related Work. In prior research  the sample complexity of revenue maximization has been studied
primarily in the single-item or the more general single-dimensional settings [Elkind  2007  Cole and
Roughgarden  2014  Huang et al.  2015  Medina and Mohri  2014  Morgenstern and Roughgarden 
2015  Roughgarden and Schrijvers  2016  Devanur et al.  2016]  as well as some multi-dimensional
settings which are reducible to the single-bidder setting [Morgenstern and Roughgarden  2016]. In
contrast  the combinatorial settings that we study are much more complex since the revenue functions
consist of multi-stage optimization procedures that cannot be reduced to a single-bidder setting. The
complexity intrinsic to the multi-item setting is explored in [Dughmi et al.  2014]  who show that

2

for a single unit-demand bidder  when the bidder’s values for the items may be correlated  Ω(2m)
samples are required to determine a constant-factor approximation to the optimal auction.
Learning theory tools such as pseudo-dimension and Rademacher complexity were used to prove
strong guarantees in [Medina and Mohri  2014  Morgenstern and Roughgarden  2015  2016]  which
analyze piecewise linear revenue functions and show that few samples are needed to learn over the
revenue function classes in question. In a similar direction  bounds on the sample complexity of
welfare-optimal item pricings have been developed [Feldman et al.  2015  Hsu et al.  2016]. Earlier
work of Balcan et al. [2008] addressed sample complexity results for revenue maximization in
unrestricted supply settings. In that context  the revenue function decomposes additively among
bidders and does not apply to our combinatorial setting.
Despite the inherent complexity of designing high-revenue CAs  Morgenstern and Roughgarden
use linear separability as a tool to prove that certain simple classes of multi-parameter auctions
have small sample complexity. The auctions they study are sequential auctions with item and grand
bundle pricings  as well as second-price item auctions with item reserve prices [Morgenstern and
Roughgarden  2016].
In the item pricing auctions  the bidders show up one at a time and the
seller offers each item that remains at some price. Each buyer then chooses the subset of goods
that maximizes her utility. In the grand bundle pricing auctions  the bidders are each offered the
grand bundle in some ﬁxed order  and the ﬁrst bidder to have a value greater than the price buys it.
They show that bounding the sample complexity of these sequential auctions can be reduced to the
single-buyer setting.
In contrast  the auctions we study are more versatile than item pricing auctions  as they give the
mechanism designer many more degrees of freedom than the number of items. This level of
expressiveness allows the designer to increase competition between bidders  much like Myerson’s
optimal auction  and thus boost revenue.
It is easy to construct examples where even simple
AMAs achieve signiﬁcantly greater revenue than sequential auctions with item and grand bundle
prices. Moreover  even the simpler auction classes we consider pose a unique challenge because the
parameters deﬁning the auctions inﬂuence the multi-stage allocation procedure and resulting revenue
in non-intuitive ways. This is unlike item and grand bundle pricing auctions  as well as second-price
item auctions  which are simple by design. Our function classes therefore require us to understand
the speciﬁc form of the weighted VCG payment rule and its interaction with the parameter space.
Thus  our context and techniques diverge from those in [Morgenstern and Roughgarden  2016].
Finally  there is a wealth of work on characterizing the optimal CA for restricted settings and designing
mechanisms which achieve high  if not optimal revenue in speciﬁc contexts. Due to space constraints 
in Section A of the supplementary materials  we describe these results as well as what is known
theoretically about the classes in the hierarchy of deterministic CAs we study.

2 Preliminaries  notation  and the combinatorial auction hierarchy

In the following section  we explain the basic mechanism design problem  ﬁx notation  and then
describe the hierarchy of combinatorial auction families we study.
Mechanism Design Preliminaries. We consider the problem of selling m heterogeneous goods to
n bidders. This means that there are 2m different bundles of goods  B = {b1  . . .   b2m}. Each bidder
i ∈ [n] is associated with a set-wise valuation function over the bundles  vi : B → R. We assume
that the bidders’ valuations are drawn from a distribution D.
Every auction is deﬁned by an allocation function and a payment function. The allocation function
determines which bidders receive which items based on their bids and the payment function determines
how much the bidders need to pay based on their bids and the allocation. It is up to the mechanism
designer to determine which allocation and payment functions should be used. In our context  the
two functions are ﬁxed based on the samples from D before the bidders submit their bids.
Each auction family that we consider has a design based on the classic Vickrey-Clarke-Groves
mechanism (VCG). The VCG mechanism  which we describe below  is the canonical strategy-proof
mechanism  which means that every bidder’s dominant strategy is to bid truthfully. In other words 
for every Bidder i  no matter the bids made by the other bidders  Bidder i maximizes her expected
utility (her value for her allocation minus the price she pays) by bidding her true value. Therefore  we
describe the VCG mechanism assuming that the bids equal the bidders’ true valuations.

3

j

j(cid:54)=i vj

j

j

j(cid:54)=i vj

(cid:2)vj

1  . . .   b∗

(cid:0)b−i

(cid:0)b−i
(cid:1)(cid:105)

1   . . .   b−i
j(cid:54)=i

(cid:1) be the disjoint
(cid:0)b−i
(cid:1)(cid:3) =
(cid:0)b∗
(cid:1) − vj

i ). Meanwhile  let(cid:0)b−i
(cid:1). Then Bidder i must pay(cid:80)

The VCG mechanism allocates the items such that the social welfare of the bidders  that is  the
sum of each bidder’s value for the items she wins  is maximized. Intuitively  each winning bid-
der then pays her bid minus a “rebate” equal to the increase in welfare attributable to Bidder i’s
presence in the auction. This form of the payment function is crucial to ensuring that the auction
is strategy-proof. More concretely  the allocation of the VCG mechanism is the disjoint set of
subsets (b∗

n) ⊆ B that maximizes(cid:80) vi (b∗
set of subsets that maximizes(cid:80)
i ) −(cid:104)(cid:80) vj
(cid:1) −(cid:80)
(cid:0)b∗

j
vi (b∗
. In the special case where there is one item for sale  the
VCG mechanism is known as the second price  or Vickrey  auction  where the highest bidder wins
the item and pays the second highest bid. We note that every auction in the classes we study is
strategy-proof  so we may assume that the bids equal the bidders’ valuations.
Notation. We study auctions with n bidders and m items. We refer to the bundle of all m items
as the grand bundle. In total  there are (n + 1)m possible allocations  which we denote as the
oi j = b(cid:96) ∈ B denotes the bundle of items allocated to Bidder j in allocation (cid:126)oi. We use the
notation (cid:126)v1 = (v1 (b1)   . . .   v1 (b2m)) and (cid:126)v = ((cid:126)v1  . . .   (cid:126)vn) to denote a vector of bidder valuation
functions. We say that revA((cid:126)v) is the revenue of an auction A on the valuation vector (cid:126)v. Denoting
the payment of any one bidder under auction A given valuation vector (cid:126)v as pi A ((cid:126)v)  we have that
i=1 pi A ((cid:126)v). Finally  U is an upper bound on the revenue achievable for any auction

vectors O =(cid:8)(cid:126)o1  . . .   (cid:126)o(n+1)m
revA((cid:126)v) =(cid:80)n

(cid:9) . Each allocation vector (cid:126)oi can be written as (oi 1  . . .   oi n)  where

n

j

over the support of the bidders’ valuation distribution.

(cid:111)

(cid:111)

(cid:110)(cid:80)

Auction Classes. We now give formal deﬁnitions of the CA families in the hierarchy we study. See
Figure 1 for the hierarchical organization of the auction classes  together with the papers which
introduced each family.
Afﬁne maximizer auctions (AMAs).

bidder (w1  . . .   wn) ⊂ R>0 and boosts per allocation (cid:0)λ ((cid:126)o1)   . . .   λ(cid:0)(cid:126)o(n+1)m
(cid:0)w1  . . .   wn  λ ((cid:126)o1)   . . .   λ(cid:0)(cid:126)o(n+1)m

(cid:1)(cid:1) ⊂ R.
(cid:1)(cid:1). To simplify notation  we write λi = λ ((cid:126)oi) interchange-

An auction A uniquely corresponds to a set of these parameters  so we write A =

An AMA A is deﬁned by a set of weights per

(cid:96)(cid:54)=j w(cid:96)v(cid:96) (o∗

(cid:96)(cid:54)=j w(cid:96)v(cid:96) (oi (cid:96)) + λ ((cid:126)oi)

j=1 wjvj (oi j) + λ ((cid:126)oi)

(cid:105)
(cid:96) ) − λ ((cid:126)o∗)

(cid:110)(cid:80)n
(cid:104)(cid:80)
(cid:96)(cid:54)=j w(cid:96)v(cid:96) (o−j (cid:96)) + λ ((cid:126)o−j) −(cid:80)

ably. These parameters allow the mechanism designer to multiplicatively boost any bidder’s bids
by their corresponding weight and to increase the likelihood that any one allocation is returned
as the output of an auction. More concretely  the allocation (cid:126)o∗ of an AMA A is the one which
maximizes the weighted social welfare  i.e. (cid:126)o∗ = argmax(cid:126)oi∈O
. The
payment function of A has the same form as the VCG payment rule  with the parameters fac-
In particular  for all j ∈ [n]  the
tored in to ensure that the auction remains strategy-proof.
payments are pj A ((cid:126)v) = 1
  where
wj
(cid:126)o−j = argmax(cid:126)oi∈O
We assume that Hw ≤ wi ≤ Hw  λi ≤ Hλ  and vi (b(cid:96)) ≤ Hv for some Hw  Hw  Hλ  Hv ∈ R≥0.
It is typical to assume an upper bound (here  Hv) on the bidders’ valuation for any bundle. This is
related to the fact that an upper bound on a target function’s range is always assumed in standard
machine learning sample complexity bounds. Intuitively  generalizability depends on how much any
one sample can skew the empirical average of a hypothesis  or in this case  auction. The bounds on
the AMA parameters are closely related to the bound on the bidders’ valuations Hv. For example  it
is a simple exercise to see that we need not search for a lambda value which is greater than Hv.
Virtual valuation combinatorial auctions (VVCAs). VVCAs are a subset of AMAs. The deﬁning
i=1 λi ((cid:126)oj)
where λi ((cid:126)oj) = ci b for all allocations (cid:126)oj that give Bidder i exactly bundle b ∈ B.
λ-auctions. λ-auctions are the subclass of AMAs where wi = 1 for all i ∈ [n].
Mixed bundling auctions (MBAs). The class of MBAs is parameterized by a constant c ≥ 0 which
can be seen as a discount for any bidder who receives the grand bundle. Formally  the c-MBA is the
λ-auction with λ((cid:126)o) = c if some bidder receives the grand bundle in allocation (cid:126)o and 0 otherwise.
Mixed bundling auctions with reserve prices (MBARPs). MBARPs are identical to MBAs though
with reserve prices. In a single-item VCG auction (i.e. second price auction) with a reserve price  the

characteristic of a VVCA is that each λ ((cid:126)oj) is split into n terms such that λ ((cid:126)oj) =(cid:80)n

.

4

item is only sold if the highest bidder’s bid exceeds the reserve price  and the winner must pay the
maximum of the second highest bid and the reserve price. We describe how this intuition generalizes
to MBAs in Section 3.
Generalization bounds. In order to derive sample complexity bounds which apply to any algorithm
that determines the optimal auction over the sample  a nearly optimal approximation  or any other
black-box procedure  we derive uniform convergence sample complexity bounds with respect to the
auction classes we examine. Formally  we deﬁne the sample complexity of uniform convergence over
an auction class A as follows.
Deﬁnition 1 (Sample complexity of uniform convergence over A). We say that N (  δ A) is the
a sample of size N ≥ N (  δ A) drawn at random from D  with probability at least 1 − δ  for all
auctions A ∈ A 

sample complexity of uniform convergence over A if for any   δ ∈ (0  1)  if S =(cid:8)(cid:126)v1  . . .   (cid:126)vN(cid:9) is

(cid:12)(cid:12)(cid:12) ≤ .
(cid:0)(cid:126)vi(cid:1) − E(cid:126)v∼D [revA((cid:126)v)]

(cid:80)N

i=1 revA

(cid:12)(cid:12)(cid:12) 1

N

3 Sample complexity bounds over the hierarchy of auction classes

In this section  we provide an overview of our sample complexity guarantees over the hierarchy of
auction classes we consider (Section 3.1 and 3.2). We show that more structured classes require
drastically fewer samples to learn over. We conclude with a note about sample complexity guarantees
for algorithms that ﬁnd an approximately optimal mechanism over a sample  as opposed to the
optimal mechanism. All omitted proofs are presented in full in the supplementary material.

3.1 The sample complexity of AMA  VVCA  and λ-auction revenue maximization

We begin by analyzing the most general families in the CA hierarchy — AMAs  VVCAs  and
λ-auctions — proving a general upper bound and class-speciﬁc lower bounds.
Theorem 1. The sample complexity of uniform convergence over the classes of n-bidder  m-item
. Moreover  for λ-Auctions 

AMAs  VVCAs  and λ-Auctions is N = (cid:101)O

m(cid:0)U + nm/2(cid:1) /(cid:3)2(cid:17)

(cid:16)(cid:2)U nm√

N = Ω (nm) and for VVCAs  N = Ω (2m).

We derive the upper bound by analyzing the Rademacher complexity of the class of n-bidder  m-item
AMA revenue functions. For a family of functions G and a ﬁnite sample S = {x1  . . .   xN} of size
σ = (σ1  . . .   σN )  with σis independent uniform random variables taking values in {−1  1}. The

N  the empirical Rademacher complexity is deﬁned as (cid:98)RS (G) = Eσ[supg∈G
Rademacher complexity of G is deﬁned as RN (G) = ES∼DN [(cid:98)RS (G)].

(cid:80) σig(xi)]  where

1
N

The AMA revenue function  deﬁned in Section 2  can be summarized as a multi-stage optimization
procedure: determine the weighted-optimal allocation and then compute the n different payments 
each of which requires a separate optimization procedure. Luckily  we are able to decompose the
revenue functions into small components  each of which is easier to analyze on its own  and then
combine our results to prove the following theorem about this class of revenue functions as a whole.
Theorem 2. Let F be the set of n-bidder  m-item AMA revenue functions revA such that A =

(cid:1)   Hw ≤ |wi| ≤ Hw |λi| ≤ Hλ. Then

(cid:0)w1  . . .   wn  λ1  . . .   λ(n+1)m

RN (F) = O

nm+2 (HwHv + Hλ)

Hw

m log n

N

n ˆHv (nHw + Hλ)

Hw

where ˆHv = max{Hv  1}.

Proof sketch. First  we describe how we split each revenue function into smaller  easier to analyze
atoms  which together allow us to bound the Rademacher complexity of the class of AMA revenue
functions. To this end  it is well-known (e.g. [Mohri et al.  2012]) that if every function f in a class
F can be written as the summation of two functions g and h from classes G and H  respectively  then
RN (F) ≤ RN (G) + RN (H). Therefore  we split each revenue function into n + 1 components
such that the sum of these components equals the revenue function.

5

(cid:32)

(cid:114)

(cid:32)

+(cid:112)nm log N

(cid:33)(cid:33)

 

Afﬁne maximizer auctions [Roberts  1979]

∪

∪

Virtual valuation CAs [Likhodedov and Sandholm  2004]

∪

λ-auctions [Jehiel et al.  2007]

∪

Mixed bundling auctions with reserve prices [Tang and Sandholm  2012]

∪

Mixed bundling auctions [Jehiel et al.  2007]

Figure 1: The hierarchy of deterministic CA families. Generality increases upward in the hierarchy.

A = argmax(cid:126)oi∈O

With this objective in mind  let (cid:126)o∗
A((cid:126)v) be the outcome of the AMA A on the bidding instance (cid:126)v 
i.e. (cid:126)o∗
and let φA −j((cid:126)v) be the weighted social welfare
of the welfare-maximizing outcome without Bidder j’s participation. In other words  φA −j((cid:126)v) =
max(cid:126)oi∈O

j=1 wjvj (oi j) + λi

. Then we can write

(cid:110)(cid:80)

(cid:96)(cid:54)=j w(cid:96)v(cid:96) (oi (cid:96)) + λi

(cid:111)

 1(cid:126)oi=(cid:126)o∗
 1(cid:126)oi=(cid:126)o∗

(cid:110)(cid:80)n

n(cid:88)

j=1

(cid:111)
 n(cid:88)
(cid:88)

j=1

1
wj

(cid:88)

(cid:96)(cid:54)=j

1
wj

i=1

(n+1)m(cid:88)
 n(cid:88)

(n+1)m(cid:88)

revA((cid:126)v) =

φA −j((cid:126)v) −

1
wj

w(cid:96)v(cid:96)(oi (cid:96)) + λi

A((cid:126)v).

We can now split revA into n + 1 simpler functions: revA j((cid:126)v) = 1
wj

φA −j((cid:126)v) for j ∈ [n] and

revA n+1((cid:126)v) = −

i=1

j=1

(cid:96)(cid:54)=j

A((cid:126)v) 

w(cid:96)v(cid:96) (oi (cid:96)) + λi

so revA((cid:126)v) =(cid:80)n+1
(cid:8)revA j | (cid:0)w1  . . .   wn  λ1  . . .   λ(n+1)m
(cid:1)   Hw ≤ |wi| ≤ Hw |λi| ≤ Hλ
of all n-bidder  m-item AMA revenue functions  then RN (F) ≤(cid:80)n+1

j=1 revA j((cid:126)v). Intuitively  for j ∈ [n]  revA j is a weighted version of what the
social welfare would be if Bidder j had not participated in the auction  whereas revA n+1((cid:126)v) measures
the amount of revenue subtracted to ensure that the resulting auction is strategy-proof.
As to be expected  bounding the Rademacher complexity of each smaller class of functions Lj =
than bounding the Rademacher complexity the class of revenue functions itself  and if F is the set
j=1 RN (Lj). In Lemma 2 and
Lemma 3 of Section B.1 in the supplementary materials  we obtain bounds on RN (Lj) for j ∈ [n+1]
which lead us to our bound on RN (F).

(cid:9) for j ∈ [n+1] is simpler

3.2 The sample complexity of MBA revenue maximization

Fortunately  these negative sample complexity results are not the end of the story. We do achieve
polynomial sample complexity upper bounds for the important classes of mixed bundling auctions
(MBAs) and mixed bundling auctions with reserve prices (MBARPs). We derive these sample
complexity bounds by analyzing the pseudo-dimensions of these classes of auctions. In this section 
we present our results in increasing complexity  beginning with the class of n-bidder  m-item MBAs 
which we show has a pseudo-dimension of 2. We build on the proof of this result to show that the

class of n-bidder  m-item MBARPs has a pseudo-dimension of O(cid:0)m3 log n(cid:1).

We note that when we analyze the class of MBARPs  we assume additive reserve prices  rather than
bundle reserve prices. In other words  each item has its own reserve price  and the reserve price of a
bundle is the sum of its components’ reserve prices  as opposed to each bundle having its own reserve
price. We have good reason to make this restriction; in Section C.1  we prove that an exponential
number of samples are required to learn over the class of MBARPs with bundle reserve prices.
Before we prove our sample complexity results  we ﬁx some notation. For any c-MBA  let revc ((cid:126)v)
be its revenue on (cid:126)v  which is determined in the exact same way as the general AMA revenue function
with the λ terms set as described in Section 2. Similarly  let rev(cid:126)v(cid:96)(c) be the revenue of the c-MBA
on (cid:126)v(cid:96) as a function of c. We will use the following result regarding the structure of revc ((cid:126)v) in order
to derive our pseudo-dimension results. The proof is in Section C of the supplementary materials.

6

Figure 2: Example of rev(cid:126)v(cid:96)(c).

Lemma 1. There exists c∗ ∈ [0 ∞) such that rev(cid:126)v(c) is non-decreasing on the interval [0  c∗] and
non-increasing on the interval (c∗ ∞).
The form of rev(cid:126)v(c) as described in Lemma 1 is depicted in Figure 2. The full proof of the following
pseudo-dimension bound can be found in Section C of the supplementary materials.
Theorem 3. The pseudo-dimension of the class of n-bidder  m-item MBAs is 2.

Proof sketch. First  we recall what we must show in order to prove that the pseudo-dimension of this
class is 2 (for more on pseudo-dimension  see  for example  [Mohri et al.  2012]). The proof structure
is similar to those involved in VC dimension derivations. To begin with  we must provide a set of
This means that there exist two targets z1  z2 ∈ R with the property that for any T ⊆ S  there exists
a cT ∈ C such that if (cid:126)vi ∈ T   then revcT
words  S can be labeled in every possible way by MBA revenue functions (whether or not revc
is greater than its target zj). We must also prove that no set of three valuation vectors is shatterable.

two valuation vectors S =(cid:8)(cid:126)v1  (cid:126)v2(cid:9) that can be shattered by the class of MBA revenue functions.
(cid:0)(cid:126)vi(cid:1) > zi. In other
(cid:0)(cid:126)vj(cid:1)
Our construction of the set S =(cid:8)(cid:126)v1  (cid:126)v2(cid:9) that can be shattered by the set of MBAs can be found in

(cid:0)(cid:126)vi(cid:1) ≤ zi and if (cid:126)vi (cid:54)∈ T   then revcT

the full proof of this theorem in Section C of the supplementary materials. We now show that no set
of size N ≥ 3 can be shattered by the class of MBAs. Fix one sample (cid:126)vi ∈ S and consider rev(cid:126)vi (c).
i ∈ [0 ∞)  such that rev(cid:126)vi(c) is non-decreasing on
From Lemma 1  we know that there exists c∗
i  ∞). Therefore  there exist two thresholds
the interval [0  c∗
i ] and non-increasing on the interval (c∗
i ∈ [0  c∗
i ∈ (c∗
i )  above
i ] and t2
t1
its threshold for c ∈ (t1
i  ∞). Now  merge these thresholds
for all N samples on the real line and consider the interval (t1  t2) between two adjacent thresholds.
The binary labeling of the samples in S on this interval is ﬁxed. In other words  for any sample
(cid:126)vj ∈ S  rev(cid:126)vj (c) is either at least zj or strictly less than zj for all c ∈ (t1  t2). There are at most
2N + 1 intervals between adjacent thresholds  so at most 2N + 1 different binary labelings of S.
Since we assumed S is shatterable  it must be that 2N ≤ 2N + 1  so N ≤ 2.

i  ∞) ∪ {∞} such that rev(cid:126)vi(c) is below its threshold for c ∈ [0  t1
i   t2

i )  and below its threshold for c ∈ (t2

This result allows us to prove the following sample complexity guarantee.
Theorem 4. The sample complexity of uniform convergence over the class of n-bidder  m-item MBAs
is N = O

(U/)2 (log(U/) + log(1/δ))

.

(cid:17)

(cid:16)

Mixed bundling auctions with reserve prices (MBARPs). MBARPs are a variation on MBAs 
with the addition of reserve prices. Reserve prices in the single-item case  as described in Section 2 
can be generalized to the multi-item case as follows. We enlarge the set of agents to include the seller 
who is now Bidder 0 and whose valuation for a set of items is the set’s reserve price. Working in this
expanded set of agents  the bidder weights are all 1 and the λ terms are the same as in the standard
MBA setup. Importantly  the seller makes no payments  no matter her allocation. More formally  given
i=0 vi (oi) + λ ((cid:126)o) .
For each i ∈ {1  . . .   n}  Bidder i’s payment is

a vector of valuation functions (cid:126)v  the MBARP allocation is (cid:126)o∗ = argmax(cid:126)o∈O(cid:80)n
(cid:0)o∗

vj (o−i j) + λ ((cid:126)o−i) − (cid:88)

(cid:1) − λ ((cid:126)o∗)  

(cid:88)

pA i((cid:126)v) =

vj

j

j∈{0 ... n}\{i}

j∈{0 ... n}\{i}

where

(cid:126)o−i = argmax

(cid:126)o∈O

vj (oj) + λ ((cid:126)o) .

(cid:88)

j∈{0 ... n}\{i}

7

the ith good.

As mentioned  we restrict our attention to item-speciﬁc reserve prices. In this case  the the reserve
price of a bundle is the sum of the reserve prices of the items in the bundle.
Each MBARP is therefore parameterized by m + 1 values (c  r1  . . .   rm)  where ri
is the reserve price for
For a ﬁxed valuation function vector (cid:126)v =
(v1 (b1)   . . .   v1 (b2m)   . . .   vn (b1)   . . .   vn (b2m))  we can analyze the MBARP revenue function
on (cid:126)v as a mapping rev(cid:126)v : Rm+1 → R  where rev(cid:126)v (c  r1  . . .   rm) is the revenue of the MBARP
parameterized by (c  r1  . . .   rm) on (cid:126)v.
Theorem 5. The psuedo-dimension of the class of n-bidder  m-item MBARPs with item-speciﬁc

reserve prices is O(cid:0)m3 log n(cid:1).
Proof sketch. Let S =(cid:8)(cid:126)v1  . . .   (cid:126)vN(cid:9) of size N be a set of n-bidder valuation function samples that

can be shattered by a set C of 2N MBARPs. This means that there exist N targets z1  . . .   zN such
that each MBARP in C induces a binary labeling of the samples (cid:126)vj in S (whether the revenue of the
MBARP on (cid:126)vj is greater than or less than zj). Since S is shatterable  we can thus label S in every
possible way using MBARPs in C.
This proof is similar to the proof of Theorem 3  where we split the real line into a set of intervals
I such that for any I ∈ I  the binary labeling of S by the c-MBA revenue function was ﬁxed for
all c ∈ I. In the case of MBARPs  however  the domain is Rm+1  so we cannot split the domain
into intervals in the same way. Instead  we show that we can split the domain into cells such that
the binary labeling of S by the MBARP revenue function is a ﬁxed linear function as we range over

parameters in a single cell. In this way  we show that N = O(cid:0)m3 log n(cid:1).

This is enough to prove the following guarantee.
Theorem 6. The sample complexity of uniform convergence over the class of n-bidder  m-item
MBARPs with item-speciﬁc reserve prices is N = O
.

(U/)2(cid:0)m3 log n log (U/) + log (1/δ)(cid:1)(cid:17)

(cid:16)

3.3 Sample complexity bounds for approximation algorithms
It may not always be computationally feasible to solve for the best auction over S for the given
auction family. Rather  we may only be able to determine an auction A that has average revenue
over S that is within a (1 + α) multiplicative factor of the revenue-maximizing auction over S
within the family. Nonetheless  in Theorem 11 of the supplementary materials  we prove that with
slightly more samples  we can ensure that the expected revenue of A is close to being with a (1 + α)
multiplicative factor of the expected revenue of the optimal auction within the family with respect to
the real distribution D. We prove a similar bound for an additive factor approximation as well.

4 Conclusion

In this paper  we proved strong bounds on the sample complexity of uniform convergence for the
well-studied and standard auction families that constitute the hierarchy of deterministic combinatorial
auctions. We thereby answered a crucial question in the study of (automated) mechanism design:
how to relate the performance of the mechanisms in the search space over the input samples to
their expectation over the underlying—unknown—distribution. Speciﬁcally  for a ﬁxed class of
auctions  we determine the sample complexity necessary to ensure that with high probability  for
any auction in that class  the average revenue over the sample is close to the expected revenue with
respect to the underlying  unknown distribution over bidders’ valuations. Our bounds apply to any
algorithm that ﬁnds an optimal or approximately optimal auction over an input sample  and therefore
to any automated mechanism design algorithm. Moreover  our results and analyses are of interest
from a learning theoretic perspective because the function classes which make up the hierarchy of
deterministic combinatorial auctions diverge signiﬁcantly from well-understood hypothesis classes
typically found in machine learning.
Acknowledgments. This work was supported in part by NSF grants CCF-1535967  CCF-1451177 
CCF-1422910  IIS-1618714  IIS-1617590  IIS-1320620  IIS-1546752  ARO award W911NF-16-
1-0061  a Sloan Research Fellowship  a Microsoft Research Faculty Fellowship  an NSF Graduate
Research Fellowship  and a Microsoft Research Women’s Fellowship.

8

References
Maria-Florina Balcan  Avrim Blum  Jason Hartline  and Yishay Mansour. Reducing mechanism design to

algorithm design via machine learning. Journal of Computer and System Sciences  74:78–89  2008.

Richard Cole and Tim Roughgarden. The sample complexity of revenue maximization. In Proceedings of the

Annual Symposium on Theory of Computing (STOC)  pages 243–252  2014.

Vincent Conitzer and Tuomas Sandholm. Complexity of mechanism design. In Proceedings of the 18th Annual

Conference on Uncertainty in Artiﬁcial Intelligence (UAI)  pages 103–110  2002.

Vincent Conitzer and Tuomas Sandholm. Self-interested automated mechanism design and implications for
optimal combinatorial auctions. In Proceedings of the ACM Conference on Electronic Commerce (ACM-EC) 
pages 132–141  New York  NY  2004.

Nikhil R Devanur  Zhiyi Huang  and Christos-Alexandros Psomas. The sample complexity of auctions with side

information. In Proceedings of the Annual Symposium on Theory of Computing (STOC)  2016.

Shaddin Dughmi  Li Han  and Noam Nisam. Sampling and representation complexity of revenue maximization.

In International Workshop On Internet And Network Economics (WINE)  pages 277–291  2014.

Edith Elkind. Designing and learning optimal ﬁnite support auctions. In Annual ACM-SIAM Symposium on

Discrete Algorithms (SODA)  pages 736–745  2007.

Michal Feldman  Nick Gravin  and Brendan Lucier. Combinatorial auctions via posted prices. In Annual

ACM-SIAM Symposium on Discrete Algorithms (SODA)  2015.

Justin Hsu  Jamie Morgenstern  Ryan Rogers  Aaron Roth  and Rakesh Vohra. Do prices coordinate markets?

Proceedings of the Annual Symposium on Theory of Computing (STOC)  2016.

Zhiyi Huang  Yishay Mansour  and Tim Roughgarden. Making the most of your samples. In Proceedings of the

ACM Conference on Economics and Computation (EC)  pages 45–60  2015.

Philippe Jehiel  Moritz Meyer-Ter-Vehn  and Benny Moldovanu. Mixed bundling auctions. Journal of Economic

Theory  127(1):494–512  2007.

Anton Likhodedov and Tuomas Sandholm. Methods for boosting revenue in combinatorial auctions.

Proceedings of the National Conference on Artiﬁcial Intelligence (AAAI)  pages 232–237  2004.

In

Anton Likhodedov and Tuomas Sandholm. Approximating revenue-maximizing combinatorial auctions. In

Proceedings of the National Conference on Artiﬁcial Intelligence (AAAI)  2005.

Andres Munoz Medina and Mehryar Mohri. Learning theory and algorithms for revenue optimization in second
price auctions with reserve. In International Conference on Machine Learning (ICML)  pages 262–270  2014.

Mehryar Mohri  Afshin Rostamizadeh  and Ameet Talwalkar. Foundations of Machine Learning. MIT Press 

2012.

Jamie Morgenstern and Tim Roughgarden. On the pseudo-dimension of nearly optimal auctions. In Proceedings

of the Annual Conference on Neural Information Processing Systems (NIPS)  pages 136–144  2015.

Jamie Morgenstern and Tim Roughgarden. Learning simple auctions. In Conference on Learning Theory

(COLT)  2016.

Roger Myerson. Optimal auction design. Mathematics of Operation Research  6:58–73  1981.

Kevin Roberts. The characterization of implementable social choice rules. In J-J Laffont  editor  Aggregation

and Revelation of Preferences. North-Holland Publishing Company  1979.

Tim Roughgarden and Okke Schrijvers. Ironing in the dark. Proceedings of the ACM Conference on Economics

and Computation (EC)  2016.

Tuomas Sandholm. Automated mechanism design: A new application area for search algorithms. In International

Conference on Principles and Practice of Constraint Programming (CP)  pages 19–36  2003.

Tuomas Sandholm and Anton Likhodedov. Automated design of revenue-maximizing combinatorial auctions.

Operations Research  63(5):1000–1025  2015.

Pingzhong Tang and Tuomas Sandholm. Mixed-bundling auctions with reserve prices.

Conference on Autonomous Agents and Multi-Agent Systems (AAMAS)  2012.

In International

9

,Maria-Florina Balcan
Tuomas Sandholm
Ellen Vitercik