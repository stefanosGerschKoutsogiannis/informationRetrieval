2012,CPRL -- An Extension of Compressive Sensing to the Phase Retrieval Problem,While compressive sensing (CS) has been one of the most vibrant and active research fields in the past few years  most development only applies to linear models. This limits its application and excludes many areas where CS ideas could make a difference. This paper presents a novel extension of CS to the phase retrieval problem  where intensity measurements of a linear system are used to recover a complex sparse signal. We propose a novel solution using a lifting technique -- CPRL  which relaxes the NP-hard problem to a nonsmooth semidefinite program. Our analysis shows that CPRL inherits many desirable properties from CS  such as guarantees for exact recovery. We further provide scalable numerical solvers to accelerate its implementation. The source code of our algorithms will be provided to the public.,CPRL – An Extension of Compressive Sensing to the

Phase Retrieval Problem

Division of Automatic Control  Department of Electrical Engineering 

Link¨oping University  Sweden.

Henrik Ohlsson

Department of Electrical Engineering and Computer Sciences

University of California at Berkeley  CA  USA

ohlsson@eecs.berkeley.edu

Allen Y. Yang

Department of Electrical Engineering and Computer Sciences

University of California at Berkeley  CA  USA

Department of Electrical Engineering and Computer Sciences

University of California at Berkeley  CA  USA

Roy Dong

S. Shankar Sastry

Department of Electrical Engineering and Computer Sciences

University of California at Berkeley  CA  USA

Abstract

While compressive sensing (CS) has been one of the most vibrant research ﬁelds in
the past few years  most development only applies to linear models. This limits its
application in many areas where CS could make a difference. This paper presents
a novel extension of CS to the phase retrieval problem  where intensity measure-
ments of a linear system are used to recover a complex sparse signal. We propose
a novel solution using a lifting technique – CPRL  which relaxes the NP-hard
problem to a nonsmooth semideﬁnite program. Our analysis shows that CPRL
inherits many desirable properties from CS  such as guarantees for exact recovery.
We further provide scalable numerical solvers to accelerate its implementation.

1

Introduction

In the area of X-ray imaging  phase retrieval (PR) refers to the problem of recovering a complex
multivariate signal from the squared magnitude of its Fourier transform. Existing sensor devices for
collecting X-ray images are only sensitive to signal intensities but not the phases. However  it is
very important to be able to recover the missing phase information as it reveals ﬁner structures of
the subjects than using the intensities alone. The PR problem also has broader applications and has
been studied extensively in biology  physics  chemistry  astronomy  and more recent nanosciences
[29  20  18  24  23].
Mathematically  PR can be formulated using a linear system y = Ax ∈ CN   where the matrix
A may represent the Fourier transform or other more general linear transforms.
If the complex
measurements y are available and the matrix A is assumed given  it is well known that the least-
squares (LS) solution recovers the model parameter x that minimizes the squared estimation error:

1

(cid:107)y − Ax(cid:107)2
magnitude of the output is observed:

2. In PR  we assume that the phase of the coefﬁcients of y is omitted and only the squared

bi = |yi|2 = |(cid:104)x  ai(cid:105)|2 

i = 1 ···   N 

(1)
where AH = [a1 ···   aN ] ∈ Cn×N   yT = [y1 ···   yN ] ∈ CN   and AH denotes the Hermitian
transpose of A.
Inspired by the emerging theory of compressive sensing [17  8] and a lifting technique recently
proposed for PR [13  10]  we study the PR problem with a more restricted assumption that the
model parameter x is sparse and the number of observations N are too few for (1) to have a unique
solution  and in some cases even fewer measurements than the number of unknowns n. The problem
is known as compressive phase retrieval (CPR) [25  27  28]. In many X-ray imaging applications 
for instance  if the complex source signal is indeed sparse under a proper basis  CPR provides a
viable solution to exactly recover the signal while collecting much fewer measurements than the
traditional non-compressive solutions.
Clearly  the PR problem and its CPR extension are much more challenging than the LS problem  as
the phase of y is lost while only its squared magnitude is available. For starters  it is important to note
that the setup naturally leads to ambiguous solutions regardless whether the original linear model is
overdetermined or not. For example  if x0 ∈ Cn is a solution to y = Ax  then any multiplication of
x and a scalar c ∈ C  |c| = 1  leads to the same squared output b. As mentioned in [10]  when the
dictionary A represents the unitary discrete Fourier transform (DFT)  the ambiguities may represent
time-reversed or time-shifted solutions of the ground-truth signal. Hence  these global ambiguities
are considered acceptable in PR applications. In this paper  when we talk about a unique solution to
PR  it is indeed a representative of a family of solutions up to a global phase ambiguity.

1.1 Contributions

The main contribution of the paper is a convex formulation of the CPR problem. Using the lift-
ing technique  the NP-hard problem is relaxed as a semideﬁnite program (SDP). We will brieﬂy
summarize several theoretical bounds for guaranteed recovery of the complex input signal  which
is presented in full detail in our technical report [26]. Built on the assurance of the guaranteed
recovery  we will focus on the development of a novel scalable implementation of CPR based on
the alternating direction method of multipliers (ADMM) approach. The ADMM implementation
provides a means to apply CS ideas to PR applications e.g.  high-impact nanoscale X-ray imaging.
In the experiment  we will present a comprehensive comparison of the new algorithm with the tra-
ditional interior-point method  other state-of-the-art sparse optimization techniques  and a greedy
algorithm proposed in [26]. In high-dimensional complex domain  the ADMM algorithm demon-
strates superior performance in our simulated examples and real images. Finally  the paper also
provides practical guidelines to practitioners at large working on other similar nonsmooth SDP ap-
plications. To aid peer evaluation  the source code of all the algorithms have been made available at:
http://www.rt.isy.liu.se/˜ohlsson/.

2 Compressive Phase Retrieval via Lifting (CPRL)
Since (1) is nonlinear in the unknown x  N (cid:29) n measurements are in general needed for a unique
solution. When the number of measurements N are fewer than necessary for such a unique solution 
additional assumptions are needed as regularization to select one of the solutions. In classical CS  the
ability to ﬁnd the sparsest solution to a linear equation system enables reconstruction of signals from
far fewer measurements than previously thought possible. Classical CS is however only applicable
to systems with linear relations between measurements and unknowns. To extend classical CS to the
nonlinear PR problem  we seek the sparsest solution satisfying (1):

(cid:107)x(cid:107)0 

min

(2)
with the square acting element-wise and b = [b1 ···   bN ]T ∈ RN . As the counting norm (cid:107) · (cid:107)0 is
not a convex function  following the (cid:96)1-norm relaxation in CS  (2) can be relaxed as

x

subj. to b = |Ax|2 = {aH

i xxH ai}1≤i≤N  

(cid:107)x(cid:107)1 

subj. to b = |Ax|2 = {aH

i xxH ai}1≤i≤N .

min

x

(3)

2

Note that (3) is still not a convex program  as its equality constraint is not a linear equation. In the
literature  a lifting technique has been extensively used to reframe problems such as (3) to a standard
form in SDP  such as in Sparse PCA [15]. More speciﬁcally  given the ground-truth signal x0 ∈ Cn 
0 ∈ Cn×n be an induced rank-1 semideﬁnite matrix. Then (3) can be reformulated
let X0 (cid:44) x0xH
into1

minX(cid:23)0 (cid:107)X(cid:107)1 

i Xai  i = 1 ···   N.

subj. to

(4)
This is of course still a nonconvex problem due to the rank constraint. The lifting approach addresses
this issue by replacing rank(X) with Tr(X). For a positive-semideﬁnite matrix  Tr(X) is equal to
the sum of the eigenvalues of X (or the (cid:96)1-norm on a vector containing all eigenvalues of X). This
leads to the nonsmooth SDP

rank(X) = 1  bi = aH

minX(cid:23)0 Tr(X) + λ(cid:107)X(cid:107)1 

subj. to bi = Tr(ΦiX)  i = 1 ···   N 

(5)
i ∈ Cn×n and λ ≥ 0 is a design parameter. Finally  the estimate
where we further denote Φi (cid:44) aiaH
of x can be found by computing the rank-1 decomposition of X via singular value decomposition.
We refer to the approach as compressive phase retrieval via lifting (CPRL).
Consider now the case that the measurements are contaminated by data noise. In a linear model 
bounded random noise typically affects the output of the system as y = Ax + e  where e ∈ CN is a
noise term with bounded (cid:96)2-norm: (cid:107)e(cid:107)2 ≤ . However  in phase retrieval  we follow closely a more
special noise model used in [13]:
(6)
This nonstandard model avoids the need to calculate the squared magnitude output |y|2 with the
added noise term. More importantly  in most practical phase retrieval applications  measurement
noise is introduced when the squared magnitudes or intensities of the linear system are measured on
the sensing device  but not y itself. Accordingly  we denote a linear operator B of X as

bi = |(cid:104)x  ai(cid:105)|2 + ei.

B : X ∈ Cn×n (cid:55)→ {Tr(ΦiX)}1≤i≤N ∈ RN  

(7)
which measures the noise-free squared output. Then the approximate CPR problem with bounded
(cid:96)2-norm error model can be solved by the following nonsmooth SDP program:
subj. to (cid:107)B(X) − b(cid:107)2 ≤ ε.

(8)
Due to the machine rounding error  in general a nonzero ε should be always assumed and in its
termination condition during the optimization. The estimate of x  just as in noise free case  can
ﬁnally be found by computing the rank-1 decomposition of X via singular value decomposition.
We refer to the method as approximate CPRL.

minX(cid:23)0 Tr(X) + λ(cid:107)X(cid:107)1 

3 Theoretical Analysis

This section highlights some of the analysis results derived for CPRL. The proofs of these results are
available in the technical report [26]. The analysis follows that of CS and is inspired by derivations
given in [13  12  16  9  3  7]. In order to state some theoretical properties for CPRL  we need a
generalization of the restricted isometry property (RIP).
Deﬁnition 1 (RIP) A linear operator B(·) as deﬁned in (7) is (  k)-RIP if | (cid:107)B(X)(cid:107)2
(cid:107)X(cid:107)0 ≤ k and X (cid:54)= 0.
We can now state the following theorem:
Theorem 2 (Recoverability/Uniqueness) Let B(·) be a (  2(cid:107)X∗(cid:107)0)-RIP linear operator with  <
1 and let ¯x be the sparsest solution to (1). If X∗ satisﬁes b = B(X∗)  X∗ (cid:23) 0  rank{X∗} = 1 
then X∗ is unique and X∗ = ¯x¯xH.
We can also give a bound on the sparsity of ¯x:
Theorem 3 (Bound on (cid:107)¯x¯xH(cid:107)0 from above) Let ¯x be the sparsest solution to (1) and let ˜X be the
solution of CPRL (5). If ˜X has rank 1 then (cid:107) ˜X(cid:107)0 ≥ (cid:107)¯x¯xH(cid:107)0.
The following result now holds trivially:

− 1| <  for all

1In this paper  (cid:107)X(cid:107)1 for a matrix X denotes the entry-wise (cid:96)1-norm  and (cid:107)X(cid:107)2 denotes the Frobenius norm.

(cid:107)X(cid:107)2
2

2

3

k

√

1+

2
(1−ρ)

√

k

2/(1 − ).

(cid:107)X∗ − Xs(cid:107)1 

(1 − ( 2
√
1−ρ + 1) 1

λ )(cid:107) ˜X − X∗(cid:107)1 ≤

Corollary 4 (Guaranteed recovery using RIP) Let ¯x be the sparsest solution to (1). The solution
of CPRL ˜X is equal to ¯x¯xH if it has rank 1 and B(·) is (  2(cid:107) ˜X(cid:107)0)-RIP with  < 1.
If ¯x¯xH = ˜X can not be guaranteed  the following bound becomes useful:
Theorem 5 (Bound on (cid:107)X∗ − ˜X(cid:107)1) Let  < 1
2 and assume B(·) to be a (  2k)-RIP linear
operator. Let X∗ be any matrix (sparse or dense) satisfying b = B(X∗)  X∗ (cid:23) 0  rank{X∗} = 1 
let ˜X be the CPRL solution  (5)  and form Xs from X∗ by setting all but the k largest elements to
zero. Then 
√

with ρ =
Given the RIP analysis  it may be the case that the linear operator B(·) does not well satisfy the RIP
property deﬁned in Deﬁnition 1  as pointed out in [13]. In these cases  RIP-1 maybe considered:
Deﬁnition 6 (RIP-1) A linear operator B(·) is (  k)-RIP-1 if | (cid:107)B(X)(cid:107)1
− 1| <  for all matrices
(cid:107)X(cid:107)1
X (cid:54)= 0 and (cid:107)X(cid:107)0 ≤ k.
Theorems 2–3 and Corollary 4 all hold with RIP replaced by RIP-1 and are not restated in detail
here. Instead we summarize the most important property in the following theorem:
Theorem 7 (Upper bound & recoverability through (cid:96)1) Let ¯x be the sparsest solution to (1). The
solution of CPRL (5)  ˜X  is equal to ¯x¯xH if it has rank 1 and B(·) is (  2(cid:107) ˜X(cid:107)0)-RIP-1 with  < 1.
The RIP type of argument may be difﬁcult to check for a given matrix and are more useful for
claiming results for classes of matrices/linear operators. For instance  it has been shown that ran-
dom Gaussian matrices satisfy the RIP with high probability. However  given realization of a ran-
dom Gaussian matrix  it is indeed difﬁcult to check if it actually satisﬁes the RIP. Two alternative
arguments are spark [14] and mutual coherence [17  11]. The spark condition usually gives tighter
bounds but is known to be difﬁcult to compute as well. On the other hand  mutual coherence may
give less tight bounds  but is more tractable. We will focus on mutual coherence  which is deﬁned as:

(9)

.

|aH

i aj|

(cid:107)ai(cid:107)2(cid:107)aj(cid:107)2

Deﬁnition 8 (Mutual coherence) For a matrix A  deﬁne the mutual coherence as µ(A) =
max1≤i j≤n i(cid:54)=j
By an abuse of notation  let B be the matrix satisfying b = BX s with X s being the vectorized
version of X. We are now ready to state the following theorem:
Theorem 9 (Recovery using mutual coherence) Let ¯x be the sparsest solution to (1). The solution
of CPRL (5)  ˜X  is equal to ¯x¯xH if it has rank 1 and (cid:107) ˜X(cid:107)0 < 0.5(1 + 1/µ(B)).

4 Numerical Implementation via ADMM

In addition to the above analysis of guaranteed recovery properties  a critical issue for practitioners is
the availability of efﬁcient numerical solvers. Several numerical solvers used in CS may be applied
to solve nonsmooth SDPs  which include interior-point methods (e.g.  used in CVX [19])  gradient
projection methods [4]  and augmented Lagrangian methods (ALM) [4]. However  interior-point
methods are known to scale badly to moderate-sized convex problems in general. Gradient projec-
tion methods also fail to meaningfully accelerate the CPRL implementation due to the complexity
of the projection operator. Alternatively  nonsmooth SDPs can be solved by ALM. However  the
augmented primal and dual objective functions are still complex SDPs  which are equally expensive
to solve in each iteration. In summary  as we will demonstrate in Section 5  CPRL as a nonsmooth
complex SDP is categorically more expensive to solve compared to the linear programs underlying
CS  and the task exceeds the capability of many popular sparse optimization techniques.
In this paper  we propose a novel solver to the nonsmooth SDP underlying CPRL via the alternating
directions method of multipliers (ADMM  see for instance [6] and [5  Sec. 3.4]) technique. The
motivation to use ADMM are two-fold: 1. It scales well to large data sets. 2. It is known for its fast
convergence. There are also a number of strong convergence results [6] which further motivates the
choice.
To set the stage for ADMM  rewrite (5) to the equivalent SDP

minX1 X2 Z f1(X1) + f2(X2) + g(Z) 

subj. to X1 − Z = 0  X2 − Z = 0 

(10)

4

where
f1(X)(cid:44)

(cid:26)Tr(X)

∞

if bi = T r(ΦiX)  i = 1  . . .   N
otherwise

  f2(X)(cid:44)

(cid:26)0
∞ otherwise  g(Z)(cid:44) λ(cid:107)Z(cid:107)1.

if X (cid:23) 0

The update rules of ADMM now lead to the following:
= arg minX fi(X) + Tr(Y l
i − Z l+1) 

Z l+1 = arg minZ g(Z) +(cid:80)2

i + ρ(X l+1

= Y l

Y l+1
i

X l+1

i

i (X − Z l)) + ρ
i Z) + ρ

i=1 −Tr(Y l

2(cid:107)X − Z l(cid:107)2
2 
2(cid:107)X l+1
i − Z(cid:107)2
2 

(11)

where Xi  Yi  Z are constrained to stay in the domain of Hermitian matrices. Each of these steps has
a tractable calculation. However  the Xi  Yi  and Z variables are complex-valued  and  as most of
the optimization literature deals with real-valued vectors and symmetric matrices  we will emphasize
differences between the real case and complex case. After some simple manipulations  we have:

1

ρ

1

ρ

i=1

i=1

)(cid:107)2 

1 = argminX (cid:107)X − (Z l − I+Y l
X l+1

subj. to bi = Tr(ΦiX)  i = 1 ···   N.

(12)
Assuming that a feasible solution exists  and deﬁning ΠA as the projection onto the convex set given
1 = ΠA(Z l − I+Y l
by the linear constraints  the solution is: X l+1
). This optimization problem has a
closed-form solution; converting the matrix optimization problem in (12) into an equivalent vector
optimization problem yields a problem of the form: minx ||x−z||2
subj. to b = Ax. The answer
is given by the pseudo-inverse of A  which can be precomputed. This complex-valued problem can
be solved by converting the linear constraint in Hermitian matrices into an equivalent constraint on
real-valued vectors. This conversion is done by noting that for n × n Hermitian matrices A  B:
j=i+1 AijBij + AijBij

j=1 AijBij =(cid:80)n
(cid:104)A  B(cid:105) = Tr(AB) =(cid:80)n
(cid:80)n
i=1 AiiBii +(cid:80)n
(cid:80)n

i=1 AiiBii +(cid:80)n

j=i+1 2 real(Aij) real(Bij) + 2 imag(Aij) imag(Bij)

= (cid:80)n

So if we deﬁne the vector Av as an n2 vector such that its elements are Aii for i = 1 ···   n 
√
2 real(Aij) for i = 1 ···   n  j = i + 1 ···   n  and
2 imag(Aij) for i = 1 ···   n  j = i +
1 ···   n  and similarly deﬁne Bv  then we can see that (cid:104)A  B(cid:105) = (cid:104)Av  Bv(cid:105). This turns the constraint
1 ··· Φv
bi = Tr(ΦiX)  i = 1 ···   N  into one of the form: b = [Φv
i is in Rn2.
Thus  for this subproblem  the memory usage scales linearly with N  the number of measurements 
ρ )(cid:107)2 =
2 = argminX(cid:23)0 (cid:107)X−(Z l− Y l
and quadratically with n  the dimension of the data. Next  X l+1
ΠP SD(Z l − Y l
ρ )  where ΠP SD denotes the projection onto the positive-semideﬁnite cone  which
can easily be obtained via eigenvalue decomposition. This holds for real-valued and complex-valued
l. Then  the Z update rule
Hermitian matrices. Finally  let X
can be written:

N ]T X v  where each Φv

i=1 X l+1

(cid:80)n

Z l+1 = argminZ λ(cid:107)Z(cid:107)1 + 2ρ

(13)
We note that the soft operator in the complex domain must be coded with care. One does not simply
check the sign of the difference  as in the real case  but rather the magnitude of the complex number:

2 = soft(X

and similarly Y
ρ )(cid:107)2

(cid:80)2
= 1
2
2 (cid:107)Z − (X
(cid:40)

ρ   λ

+ Y l

+ Y l

2ρ ).

√

i=1

i

l+1

l+1

l+1

2

2

soft(x  q) =

if |x| ≤ q 
0
|x|−q
|x| x otherwise 

where q is a positive real number. Setting l = 0  the Hermitian matrices X l
i can now be
iteratively computed using the ADMM iterations (11). The stopping criterion of the algorithm is
given by:

i  Y l

i   Z l

(cid:107)rl(cid:107)2 ≤ nabs + rel max((cid:107)X

(15)
where abs  rel are algorithm parameters set to 10−3 and rl and sl are the primal and dual residuals
2 − Z l)  sl = −ρ(Z l − Z l−1  Z l − Z l−1). We also update ρ according
1 − Z l  X l
given by: rl = (X l
to the rule discussed in [6]:

(cid:107)sl(cid:107)2 ≤ nabs + rel(cid:107)Y

l(cid:107)2 (cid:107)Z l(cid:107)2) 

l(cid:107)2 

τincrρl

ρl/τdecr
ρl

if (cid:107)rl(cid:107)2 > µ(cid:107)sl(cid:107)2 
if (cid:107)sl(cid:107)2 > µ(cid:107)rl(cid:107)2 
otherwise 

ρl+1 =

where τincr  τdecr  and µ are algorithm parameters. Values commonly used are µ = 10 and τincr =
τdecr = 2.

5

(14)

(16)

5 Experiment

The experiments in this section are chosen to illustrate the computational performance and scalabil-
ity of CPRL. Being one of the ﬁrst papers addressing the CPR problem  existing methods available
for comparison are limited. For the CPR problem  to the authors’ best knowledge  the only methods
developed are the greedy algorithms presented in [25  27  28]  and GCPRL [26]. The method pro-
posed in [25] handles CPR but is only tailored to random 2D Fourier samples from a 2D array and it
is extremely sensitive to initialization. In fact  it would fail to converge in our scenarios of interest.
[27] formulates the CPR problem as a nonconvex optimization problem that can be solved by solv-
ing a series of convex problems. [28] proposes to alternate between ﬁt the estimate to measurements
and thresholding. GCPRL  which stands for greedy CPRL  is a new greedy approximate algorithm
tailored to the lifting technique in (5). The algorithm draws inspiration from the matching-pursuit al-
gorithm [22  1]. In each iteration  the algorithm adds a new nonzero component of x that minimizes
the CPRL objective function the most. We have observed that if the number of nonzero elements in
x is expected to be low  the algorithm can successfully recover the ground-truth sparse signal while
consuming less time compared to interior-point methods for the original SDP.2 In general  greedy
algorithms for solving CPR problems work well when a good guess for the true solution is available 
are often computationally efﬁcient but lack theoretical recovery guarantees. We also want to point
out that CPRL becomes a special case in a more general framework that extends CS to nonlinear
systems (see [1]). In general  nonlinear CS can be solved locally by greedy simplex pursuit algo-
rithms. Its instantiation in PR is the GCPRL algorithm. However  the key beneﬁt of developing the
SDP solution for PR in this paper is that the global convergence can be guaranteed.
In this section  we will compare implementations of CPRL using the interior-point method used by
CVX [19] and ADMM with the design parameter choice recommended in [6] (τincr = τdecr = 2).
λ = 10 will be used in all experiments. We will also compare the results to GCPRL and the PR
algorithm PhaseLift [13]. The former is a greedy approximate solution  while the latter does not
enforce sparsity and is obtained by setting λ = 0 in CPRL.
In terms of the scale of the problem  the largest problem we have tested is on a 30× 30 image and is
100-sparse in the Fourier domain with 2400 measurements. Our experiment is conducted on an IBM
x3558 M3 server with two Xeon X5690 processors  6 cores each at 3.46GHz  12MB L3 cache  and
96GB of RAM. The execution for recovering one instance takes approximately 36 hours to ﬁnish in
MATLAB environment  comprising of several tens of thousands of iterations. The average memory
usage is 3.5 GB.

5.1 A simple simulation

In this example we consider a simple CPR problem to illustrate the differences between CPRL 
GCPRL  and PhaseLift. We also compare computational speed for solving the CPR problem and
illustrate the theoretical bounds derived in Section 3. Let x ∈ C64 be a 2-sparse complex signal 
A (cid:44) RF where F ∈ C64×64 is the Fourier transform matrix and R ∈ C32×64 a random projection
matrix (generated by sampling a unit complex Gaussian)  and let the measurements b satisfy the
PR relation (1). The left plot of Figure 1 gives the recovered signal x using CPRL  GCPRL and
PhaseLift. As seen  CPRL and GCPRL correctly identify the two nonzero elements in x while
PhaseLift fails to identify the true signal and gives a dense estimate. These results are rather typical
(see the MCMC simulation in [26]). For very sparse examples  like this one  CPRL and GCPRL
often both succeed in ﬁnding the ground truth (even though we have twice as many unknowns
as measurements). PhaseLift  on the other side  does not favor sparse solutions and would need
considerably more measurements to recover the 2-sparse signal. The middle plot of Figure 1 shows
the computational time needed to solve the nonsmooth SDP of CPRL using CVX  ADMM  and
GCPRL. It shows that ADMM is the fastest and that GCPRL outperforms CVX. The right plot of
Figure 1 shows the mutual coherence bound 0.5(1 + 1/µ(B)) for a number of different N’s and
n’s  A (cid:44) RF   F ∈ Cn×n the Fourier transform matrix and R ∈ CN×n a random projection
matrix. This is of interest since Theorem 9 states that when the CRPL solution ˜X satisﬁes (cid:107) ˜X(cid:107)0 <
0.5(1 + 1/µ(B)) and has rank 1  then ˜X = ¯x¯xH  where ¯x is the sparsest solution to (1). From

2We have also tested an off-the-shelf toolbox that solves convex cone problems  called TFOCS [2]. Unfor-

tunately  TFOCS cannot be applied directly to solving the nonsmooth SDP in CPRL.

6

the plot it can be concluded that if the CPRL solution ˜X has rank 1 and only a single nonzero
component for a choice of 125 ≥ n  N ≥ 5  Theorem 9 guarantees that ˜X = ¯x¯xH. We also
observe that Theorem 9 is conservative  since we previously saw that 2 nonzero components could
be recovered correctly for n = 64 and N = 32. In fact  numerical simulation can be used to show
that N = 30 sufﬁces to recover the ground truth in 95 out of 100 runs [26].

Figure 1: Left: The magnitude of the estimated signal provided by CPRL  GCPRL and PhaseLift.
Middle: The residual (cid:107)¯x¯xH − ˜X(cid:107)2 plotted against time for ADMM (gray line)  GCPRL (solid
black line) and CVX (dashed black line). Right: A contour plot of the quantity 0.5(1 + 1/µ(B)). µ
is taken as the average over 10 realizations of the data.

5.2 Compressive sampling and PR

One of the motivations of presented work and CPRL is that it enables compressive sensing for PR
problems. To illustrate this  consider the 20 × 20 complex image in Figure 2 Left. To measure the
image  we could measure each pixel one-by-one. This would require us to sample 400 times. What
CS proposes is to measure linear combinations of samples rather than individual pixels. It has been
shown that the original image can be recovered from far fewer samples than the total number of
pixels in the image. The gain using CS is hence that fewer samples are needed. However  traditional
CS only discuss linear relations between measurements and unknowns.
To extend CS to PR applications  consider again the complex image in Figure 2 Left and assume that
we only can measure intensities or intensities of linear combinations of pixels. Let R ∈ CN×400
capture how intensity measurements b are formed from linear combinations of pixels in the image 
b = |Rz|2 (z is a vectorized version of the image). An essential part in CS is also to ﬁnd a dictionary
(possibly overcomplete) in which the image can be represented using only a few basis images. For
classical CS applications  dictionaries have been derived. For applying CS to the PR applications 
dictionaries are needed and a topic for future research. We will use a 2D inverse Fourier transform
dictionary in our example and arrange the basis vectors as columns in F ∈ C400×400.
If we choose N = 400 and generate R by sampling from a unit Gaussian distribution and set
A = RF   CPRL recovers exactly the true image. This is rather remarkable since the PR relation
(1) is nonlinear in the unknown x and N (cid:29) n measurements are in general needed for a unique
solution. If we instead sample the intensity of each pixel  one-by-one  neither CPRL or PhaseLift
recover the true image. If we set A = R and do not care about ﬁnding a dictionary  we can use
a classical PR algorithm to recover the true image. If PhaseLift is used  N = 1600 measurements
are sufﬁcient to recover the true image. The main reasons for the low number of samples needed in
CPRL is that we managed to ﬁnd a good dictionary (20 basis images were needed to recover the true
image) and CPRL’s ability to recover the sparsest solution. In fact  setting A = RF   PhaseLift still
needs 1600 measurements to recover the true solution.

5.3 The Shepp-Logan phantom

In this last example  we again consider the recovery of complex valued images from random sam-
ples. The motivation is twofold: Firstly  it illustrates the scalability of the ADMM implementation.
In fact  ADMM has to be used in this experiment as CVX cannot handle the CPRL problem in this
scale. Secondly  it illustrates that CPRL can provide approximate solutions that are visually close
to the ground-truth images. Consider now the image in Figure 2 Middle Left. This 30 × 30 Shepp-
Logan phantom has a 2D Fourier transform with 100 nonzero coefﬁcients. We generate N linear
combinations of pixels as in the previous example and square the measurements  and then apply

7

010203040506000.10.20.30.40.50.60.70.80.91i|xi|  PhaseLiftCPRL/GCPRL020406080100012345678910time [s]|| xxH − X ||  ~__CPRL (CVX)GCPRLCPRL (ADMM)nN  406080100120304050607080901001101201.081.11.121.141.161.181.21.221.24CPRL and PhaseLift with a 2D Fourier dictionary. The middel image in Figure 2 shows the recov-
ered result using PhaseLift with N = 2400  the second image from the right shows the recovered
result using CPRL with the same number N = 2400 and the right image is the recovered result using
CPRL with N = 1500. The number of measurements with respect to the sparsity in x is too low for
both CPRL and PhaseLift to perfectly recover z. However  CPRL provides a much better approx-
imation and outperforms PhaseLift visually even though it uses considerably fewer measurements.

Figure 2: Left: Absolute value of the 2D inverse Fourier transform of x  |F x|  used in the ex-
periment in Section 5.2. Middle Left: Ground truth for the experiment in Section 5.3. Middle:
Recovered result using PhaseLift with N = 2400. Middle Right: CPRL with N = 2400. Right:
CPRL with N = 1500.

6 Future Directions

The SDP underlying CPRL scales badly with the number of unknowns or basis vectors in the dictio-
nary. Therefore  learning a suitable dictionary for a speciﬁc application becomes even more critical
than that in traditional linear CS setting. We also want to point out that when classical CS was ﬁrst
studied  many of today’s accelerated numerical algorithms were not available. We are very excited
about the new problem to improve the speed of SDP algorithms in sparse optimization  and hope
our paper would foster the community’s interest to address this challenge collaboratively. One inter-
esting direction might be to use ADMM to solve the dual of (5)  see for instance [30  31]. Another
possible direction is the outer approximation methods [21].

7 Acknowledgement

Ohlsson is partially supported by the Swedish foundation for strategic research in the center MOVIII 
the Swedish Research Council in the Linnaeus center CADICS  the European Research Council
under the advanced grant LEARN  contract 267381  and a postdoctoral grant from the Sweden-
America Foundation  donated by ASEA’s Fellowship Fund  and by a postdoctoral grant from the
Swedish Research Council. Yang is supported by ARO 63092-MA-II. Dong is supported by the
NSF Graduate Research Fellowship under grant DGE 1106400  and by the Team for Research in
Ubiquitous Secure Technology (TRUST)  which receives support from NSF (award number CCF-
0424422). The authors also want to acknowledge useful input from Stephen Boyd and Yonina Eldar.

References

[1] A. Beck and Y. C. Eldar. Sparsity constrained nonlinear optimization: Optimality conditions and algo-

rithms. Technical Report arXiv:1203.4580  2012.

[2] S. Becker  E. Cand`es  and M. Grant. Templates for convex cone problems with applications to sparse

signal recovery. Mathematical Programming Computation  3(3)  2011.

[3] R. Berinde  A. Gilbert  P. Indyk  H. Karloff  and M. Strauss. Combining geometry and combinatorics:
A uniﬁed approach to sparse signal recovery. In Communication  Control  and Computing  2008 46th
Annual Allerton Conference on  pages 798–805  September 2008.
[4] D. P. Bertsekas. Nonlinear Programming. Athena Scientiﬁc  1999.
[5] D. P. Bertsekas and J. N. Tsitsiklis. Parallel and Distributed Computation: Numerical Methods. Athena

Scientiﬁc  1997.

[6] S. Boyd  N. Parikh  E. Chu  B. Peleato  and J. Eckstein. Distributed optimization and statistical learning
via the alternating direction method of multipliers. Foundations and Trends in Machine Learning  2011.
[7] A. Bruckstein  D. Donoho  and M. Elad. From sparse solutions of systems of equations to sparse modeling

of signals and images. SIAM Review  51(1):34–81  2009.

8

246810121416182024681012141618205101520253051015202530510152025305101520253051015202530510152025305101520253051015202530[8] E. Cand`es. Compressive sampling.

In Proceedings of the International Congress of Mathematicians 

volume 3  pages 1433–1452  Madrid  Spain  2006.

[9] E. Cand`es. The restricted isometry property and its implications for compressed sensing. Comptes Rendus

Mathematique  346(9–10):589–592  2008.

[10] E. Cand`es  Y. Eldar  T. Strohmer  and V. Voroninski. Phase retrieval via matrix completion. Technical

Report arXiv:1109.0573  Stanford University  September 2011.

[11] E. Cand`es  X. Li  Y. Ma  and J. Wright. Robust Principal Component Analysis? Journal of the ACM 

58(3)  2011.

[12] E. Cand`es  J. Romberg  and T. Tao. Robust uncertainty principles: Exact signal reconstruction from highly
IEEE Transactions on Information Theory  52:489–509  February

incomplete frequency information.
2006.

[13] E. Cand`es  T. Strohmer  and V. Voroninski. PhaseLift: Exact and stable signal recovery from magni-
tude measurements via convex programming. Technical Report arXiv:1109.4499  Stanford University 
September 2011.

[14] S. Chen  D. Donoho  and M. Saunders. Atomic decomposition by basis pursuit. SIAM Journal on

Scientiﬁc Computing  20(1):33–61  1998.

[15] A. d’Aspremont  L. El Ghaoui  M. Jordan  and G. Lanckriet. A direct formulation for Sparse PCA using

semideﬁnite programming. SIAM Review  49(3):434–448  2007.

[16] D. Donoho. Compressed sensing. IEEE Transactions on Information Theory  52(4):1289–1306  April

2006.

[17] D. Donoho and M. Elad. Optimally sparse representation in general (nonorthogonal) dictionaries via

(cid:96)1-minimization. PNAS  100(5):2197–2202  March 2003.

[18] J. Fienup. Reconstruction of a complex-valued object from the modulus of its Fourier transform using a

support constraint. Journal of Optical Society of America A  4(1):118–123  1987.

[19] M. Grant and S. Boyd. CVX: Matlab software for disciplined convex programming  version 1.21. http:

//cvxr.com/cvx  August 2010.

[20] D. Kohler and L. Mandel. Source reconstruction from the modulus of the correlation function: a practical
approach to the phase problem of optical coherence theory. Journal of the Optical Society of America 
63(2):126–134  1973.

[21] H. Konno  J. Gotoh  T. Uno  and A. Yuki. A cutting plane algorithm for semi-deﬁnite programming
problems with applications to failure discriminant analysis. Journal of Computational and Applied Math-
ematics  146(1):141–154  2002.

[22] S. Mallat and Z. Zhang. Matching pursuits with time-frequency dictionaries. IEEE Transactions on Signal

Processing  41(12):3397–3415  December 1993.

[23] S. Marchesini. Phase retrieval and saddle-point optimization. Journal of the Optical Society of America

A  24(10):3289–3296  2007.

[24] R. Millane. Phase retrieval in crystallography and optics. Journal of the Optical Society of America A 

7:394–411  1990.

[25] M. Moravec  J. Romberg  and R. Baraniuk. Compressive phase retrieval. In SPIE International Sympo-

sium on Optical Science and Technology  2007.

[26] H. Ohlsson  A. Y. Yang  R. Dong  and S. Sastry. Compressive Phase Retrieval From Squared Output Mea-
surements Via Semideﬁnite Programming. Technical Report arXiv:1111.6323  University of California 
Berkeley  November 2011.

[27] Y. Shechtman  Y. C. Eldar  A. Szameit  and M. Segev. Sparsity based sub-wavelength imaging with
partially incoherent light via quadratic compressed sensing. Opt. Express  19(16):14807–14822  Aug
2011.

[28] A. Szameit  Y. Shechtman  E. Osherovich  E. Bullkich  P. Sidorenko  H. Dana  S. Steiner  E. B. Kley 
S. Gazit  T. Cohen-Hyams  S. Shoham  M. Zibulevsky  I. Yavneh  Y. C. Eldar  O. Cohen  and M. Segev.
Sparsity-based single-shot subwavelength coherent diffractive imaging. Nature Materials  11(5):455–
459  May 2012.

[29] A. Walther. The question of phase retrieval in optics. Optica Acta  10:41–49  1963.
[30] Z. Wen  D. Goldfarb  and W. Yin. Alternating direction augmented lagrangian methods for semideﬁnite

programming. Mathematical Programming Computation  2:203–230  2010.

[31] Z. Wen  C. Yang  X. Liu  and S. Marchesini. Alternating direction methods for classical and ptychographic

phase retrieval. Inverse Problems  28(11):115010  2012.

9

,Jun Zhu
Junhua Mao
Alan Yuille
Chengguang Xu
Ehsan Elhamifar