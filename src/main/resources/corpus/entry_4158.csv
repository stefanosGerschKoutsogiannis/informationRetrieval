2014,Optimizing Energy Production Using Policy Search and Predictive State Representations,We consider the challenging practical problem of optimizing the power production of a complex of hydroelectric power plants  which involves control over three continuous action variables  uncertainty in the amount of water inflows and a variety of constraints that need to be satisfied. We propose a policy-search-based approach coupled with predictive modelling to address this problem. This approach has some key advantages compared to other alternatives  such as dynamic programming: the policy representation and search algorithm can conveniently incorporate domain knowledge; the resulting policies are easy to interpret  and the algorithm is naturally parallelizable. Our algorithm obtains a policy which outperforms the solution found by dynamic programming both quantitatively and qualitatively.,Optimizing Energy Production Using Policy Search

and Predictive State Representations

Yuri Grinberg

Doina Precup

School of Computer Science  McGill University

Montreal  QC  Canada

{ygrinb dprecup}@cs.mcgill.ca

Michel Gendreau∗

´Ecole Polytechnique de Montr´eal

Montreal  QC  Canada

michel.gendreau@cirrelt.ca

Abstract

We consider the challenging practical problem of optimizing the power produc-
tion of a complex of hydroelectric power plants  which involves control over three
continuous action variables  uncertainty in the amount of water inﬂows and a va-
riety of constraints that need to be satisﬁed. We propose a policy-search-based
approach coupled with predictive modelling to address this problem. This ap-
proach has some key advantages compared to other alternatives  such as dynamic
programming: the policy representation and search algorithm can conveniently
incorporate domain knowledge; the resulting policies are easy to interpret  and
the algorithm is naturally parallelizable. Our algorithm obtains a policy which
outperforms the solution found by dynamic programming both quantitatively and
qualitatively.

1

Introduction

The efﬁcient harnessing of renewable energy has become paramount in an era characterized by
decreasing natural resources and increasing pollution. While some efforts are aimed towards the
development of new technologies for energy production  it is equally important to maximize the ef-
ﬁciency of existing sustainable energy production methods [5]  such as hydroelectric power plants.
In this paper  we consider an instance of this problem  speciﬁcally the optimization of one of a com-
plex of hydroelectric power plants operated by Hydro-Qu´ebec  the largest hydroelectricity producer
in Canada [17].
The problem of optimizing hydroelectric power plants  also known as the reservoir management
problem  has been extensively studied for several decades and a variety of computational methods
have been applied to solve it (see e.g. [3  4] a for literature review). The most common approach is
based on dynamic programming (DP) [13]. However  one of the major obstacles of this approach lies
in the difﬁculty of incorporating different forms of domain knowledge  which are key to obtaining
solutions that are practically relevant. For example  the optimization is subject to constraints on
water levels which might span several time-steps  making them difﬁcult to integrate into typical DP-
based algorithms. Moreover  human decision makers in charge of the power plants are reluctant to
rely on black-box closed loop policies that are hard to understand. This has led to continued use in
the industry of deterministic optimization methods that provide long-term open loop policies; such
policies are then further adjusted by experts [2]. Finally  despite the different measures taken to
relieve the curse of dimensionality in DP-style approaches  it remains a big concern for large scale
problems.
In this paper  we develop and evaluate a variation of simulation–based optimization [16]  a special
case of policy search [6]  which combines some aspects of stochastic gradient descent and block
∗NSERC/Hydro-Qu´ebec Industrial Research Chair on the Stochastic Optimization of Electricity Genera-
tion  CIRRELT and D´epartement de Math´ematiques et de G´enie Industriel  ´Ecole Polytechnique de Montr´eal.

1

coordinate descent [14]. We compare our solution to a DP-based solution developed by Hydro-
Qu´ebec based on historical inﬂow data  and show both quantitative and qualitative improvement.
We demonstrate how domain knowledge can be naturally incorporated into an easy-to-interpret pol-
icy representation  as well as used to guide the policy search algorithm. We use a type of predictive
state representations [9  10] to learn a model for the water inﬂows. The policy representation fur-
ther leverages the future inﬂow predictions obtained from this model. The approach is very easy
to parallelize  and therefore easily scalable to larger problems  due to the availability of low-cost
computing resources. Although much effort in this paper goes to analyzing and solving one spe-
ciﬁc problem  the proposed approach is general and could be applied to any sequential optimization
problems involving constraints. At the end of the paper  we summarize the utility of this approach
from a domain–independent perspective.
The paper is organized as follows. Sec. 2 provides information about the hydroelectric power plant
complex (needed to implement the simulator used in the policy search procedure) and describes the
generative model used by Hydro-Qu´ebec to generate inﬂow data with similar statistical properties
as inﬂows observed historically. Sec. 3 describes the learning algorithm that produces a predic-
tive model for the inﬂows  based on recent advances in predictive state representations. In Sec. 4
we present the policy representation and the search algorithm. Sec. 5 presents a quantitative and
qualitative analysis of the results  and Sec. 6 concludes the paper.

2 Problem speciﬁcation

We consider a hydroelectric power plant system consisting of four sites  R1  . . .  R4 operating on the
same course of water. Although each site has a group of turbines  we treat this group as a single
large turbine whose speed is to be controlled. R4 is the topmost site  and water turbined at reservoir
Ri ﬂows to Ri−1 (where it gets added to any other naturally incoming ﬂows). The topmost three
sites (R2 R3 R4) have their own reservoirs  in which water accumulates before being pushed through
a number of turbines which generate the electricity. However  some amount of water might not be
useful for producing electricity because it is spilled (e.g.  to prevent reservoir overﬂow). Typically 
policies that manage to reduce spillage produce more power.
The amount of water in each reservoir changes as a function of the water turbined/spilled from the
upstream site  the water inﬂow coming from the ground  and the amount of water turbined/spilled at
the current site  as follows:

V4(t + 1) = V4(t) + I4(t) − X4(t) − Y4(t) 
Vi(t + 1) = Vi(t) + Xi+1(t) + Yi+1(t) + Ii(t) − Xi(t) − Yi(t)  i = 2  3

where Vi(t) is the volume of water at reservoir Ri at time t  Xi(t) is the amount of water turbined
at Ri at time t  Yi(t) is the amount of water spilled at site Ri at time t  and Ii(t) is water inﬂow to
site Ri at time t. Since R1 does not have a reservoir  all the incoming water is used to operate the
turbine  and the extra water is spilled. At the other sites  the water spillage mechanism is used only
as a means to prevent reservoir overﬂow.
The control problem that needs to be solved is to determine the amount of water to turbine during
each period t  in order to maximize power production  while also satisfying constraints on the water
level. We are interested in a problem considered of intermediate temporal resolution  in which
a control action at each of the 3 topmost sites is chosen weekly  after observing the state of the
reservoirs and the inﬂows of the previous week.

Power production model
The amount of power produced is a function of the current water level (headwater) at the reservoir
and the total speed of the turbines (m3/s). It is not a linear function  but it is well approximated by
a piece-wise linear function for a ﬁxed value of the headwater (see Fig. A.1 in the supplementary
material) . The following equation is used to obtain the power production curve for other values of
the headwater [18]:

(cid:19)1.5 · Pref

(cid:32)(cid:20) h

(cid:18) h

href

(cid:33)

(cid:21)−0.5 · x

href

P (x  h) =

 

(1)

where x is the ﬂow  h is the current headwater level  href is the reference headwater  and Pref is
the production curve of the reference headwater. Note that Eq. 1 implies that the maximum total

2

x should not
speed of the turbines also changes as the headwater changes; speciﬁcally 
exceed the maximum total speed of the turbines  given in the appendix ﬁgures. For completeness 
Figure A.2 (supplementary material) can be used to convert the amount of water in the reservoir to
the headwater value.

href

(cid:104) h

(cid:105)−0.5

Constraints

Several constraints must be satisﬁed while operating the plant  which are ecological in nature.

1. Minimum turbine speed at R1 (M IN F LOW (w)  w ∈ {1  ...  52}):

This sufﬁcient ﬂow needs to be maintained to allow for easy passage for the ﬁsh living in
the river.

2. Stable turbine speed throughout weeks 43-45 (ﬂuctuations of up to BU F F ER = 35 m3/s
between weeks are acceptable). Nearly constant water ﬂow at this time of the year ensures
that the area is favorable for ﬁsh spawning.

3. The amount of water in reservoir R2 should not go below M IN V OL = 1360 hm3.
Due to the depth of the reservoir  the top and bottom water temperatures differ. Turbin-
ing warmer water (at reservoir’s top) is preferrable for the ﬁsh  but this constraint is less
important than the previous two.

Water inﬂow process

The operation of the hydroelectric power plant is almost entirely dependent on the inﬂows at each
site. Historical data suggests that it is safe to assume that the inﬂows at different sites in the same
period t are just scaled values of each other. However  there is relatively little data available to
optimize the problem through simulation: there are only 54 years of inﬂow data  which translates
into 2808 values (one value per week - see Fig. 1). Hydro-Quebec use this data to learn a generative
model for inﬂows. It is a periodic autoregressive model of ﬁrst order  PAR(1)  whose structure is
well aligned with the hydrological description of the inﬂows [1]. The model generates data using
the following equation:
where ξ(t) ∼ N (0  νt mod N ) i.i.d.  x(0) = ξ(0)  and N = 52 in our setting.
As the weekly historical data is not necessarily normally distributed  transformations are used to
normalize the data before learning the parameters of the PAR(1) model. The transformations used
here are either logarithmic  ln(X + a)  where a is a parameter  or gamma  based on Wilson Hilferty
transformation [15]. Hence  to generate synthetic data  the reverse of these transformations are
applied to the output produced by the PAR(1) process1.

x(t + 1) = αt mod N · x(t) + ξ(t) 

Figure 1: Historical inﬂow data.

1The parameters of the PAR(1) process  as well as the transformations and their parameters (in the logarith-

mic case) are estimated using the SAMS software [11].

3

3 Predictive modeling of the inﬂows

It is intuitively clear that predicting future inﬂows well could lead to better control policies. In this
section  we describe the model that lets us compute the predictions of future inﬂows  which are used
as an input to policies. We use a recently developed time series modelling framework based on pre-
dictive state representations (PSRs) [9  10]  called mixed-observable PSRs (MO-PSR) [8]. Although
one could estimate future inﬂows based on knowledge that the generative process is PAR(1)  our ob-
jective is to use a general modelling tool that does not rely on this assumption  for two reasons. First 
decoupling the generative model from the predictive model allows us to replace the current gener-
ative model with more complex alternatives later on  with little effort. Moreover  more complex
models do not necessary have a clear way to estimate a sufﬁcient statistic from a given history (see
e.g. temporal disaggregation models [12]). Second  we want to test the ability of predictive state
representations  which are a fairly recent approach  to produce a model that is useful in a real-world
control problem. We now describe the models and learning algorithms used.

3.1 Predictive state representations

(Linear) PSRs were introduced as a means to represent a partially observable environment without
explicitly modelling latent states  with the goal of developing efﬁcient learning algorithms [9  10]. A
predictive representation is only required to keep some form of sufﬁcient statistic of the past  which
is used to predict the probability of future sequences of observations generated by the underlying
stochastic process.
Let O be a discrete observation space. With probability P(o1  ...  ok)  the process outputs a sequence
of observations o1  ...  ok ∈ O. Then  for some n ∈ N  the set of parameters

{m∗ ∈ Rn {Mo ∈ Rn×n}o∈O  p0 ∈ Rn}

deﬁnes a n-dimensional linear PSR that represents this process if the following holds:

∀k ∈ N  oi ∈ O : P(o1  ...  ok) = m(cid:62)

∗ Mok ··· Mo1p0 

where p0 is the initial state of the PSR [7]. Let p(h) be the PSR state corresponding to a history h.
Then  for any o ∈ O  it is possible to track a sufﬁcient statistic of the history  which can be used to
make any future predictions  using the equation:

p(ho) (cid:44) Mop(h)
m(cid:62)∗ Mop(h)

.

Because PSRs are very general  learning can be difﬁcult without exploiting some structure of the
problem domain. In our problem  knowing the week of the year gives signiﬁcant information to the
predictive model  but the model does not need to learn the dynamics of this variable. This turns
out to be a special case of the so-called mixed observable PSR model [8]  in which an observation
variable can be used to decompose the problem into several  typically much smaller  problems.

3.2 Mixed-observable PSR for inﬂow process
We deﬁne the discrete observation space O by
discretizing the space of inﬂows into 20 bins 
then follow [8] to estimate a MO-PSR represen-
tation from 3 × 105 trajectories obtained from
the generative model. This procedure is a gen-
eralization of the spectral learning algorithm
developed for PSRs [7]  which is a consistent
estimator.
Speciﬁcally  let the set of all observed tuples of
sequences of length 3 be denoted by H and T
simultaneously. We then split the set H into 52
subsets  each corresponding to a different week
of the year  and obtain a collection {Hw}w∈W 
where W = {1  ...  52}. Then  we estimate a
collection of the following vectors and matrices
from data:

Figure 2: Prediction accuracy of the mean pre-
dictor (blue)  MO-PSR predictor (black)  and the
predictions calculated from a true model (red).

4

• {PHw}w∈W - a set of |Hw|-dimensional vectors with entries equal to
P(h ∈ Hw|h occured right before week w) 
• {PT  Hw}w∈W - a set of |T | × |Hw|-dimensional matrices with entries equal to
P(h  t|h ∈ Hw  t ∈ T   h occured right before week w) 
• {PT  o Hw}w∈W o∈O - a set of |T | × |Hw|-dimensional matrices with entries equal to
P(h  o  t|h ∈ Hw  o ∈ O  t ∈ T   h occured right before week w).

Finally  we perform Singular Value Decomposition (SVD) on the estimated matrices {PT  Hw}w∈W
and use their corresponding low rank matrices of left singular vectors {Uw}w∈W to compute the
MO-PSR parameters as follows:
• ∀o ∈ O  w ∈ W : Bw
• ∀w ∈ W : bw
0 = U(cid:62)
• ∀w ∈ W : bw∗ = (P(cid:62)

o = U(cid:62)
wPT  Hw 1 
T  Hw

Uw)†PHw 

w−1PT  o Hw (U(cid:62)

wPT  Hw )† 

where w − 1 is the week before w  and † denotes the Moore–Penrose pseudoinverse. The above
parameters can be used to estimate probability of any sequence of future observations  given starting
week w  as:

P(o1  ...  ot) = bw+t(cid:62)

∗

Bw+t−1

ot

··· Bw

o1

bw
0  

where w + i represents the i-th week after w.
Figure 2 shows the prediction accuracy of the learnt MO-PSR model at different horizons  compared
to two baselines: the weekly average  and the true PAR(1) model that knows the hidden state (oracle
predictor).

4 Policy search

The objective is to maximize the expected return  E(R)  over each year  given by the amount of
power produced that year minus the penalty for constraint violations. Speciﬁcally 

52(cid:88)

(cid:34)
P (w) − 3(cid:88)

w=1

i=1

(cid:35)

R =

αiCi(w)

 

where P (w) is the amount of power produced during week w  and Ci(w) is the penalty for violating
the i-th constraint  deﬁned as:

C1(w) = min{M IN F LOW (w) − R1f low(w)  0}2

(cid:26) min{|R1f low(w) − meanR1f low| − BU F F ER  0}2

if w ∈ {43  44  45}
otherwise

C2(w) =
C3(w) = min{M IN V OL − R2vol(w)  0}3/2

0

where R1f low(w) is the water ﬂow (turbined + spilled) at R1 during week w  R2vol(w) is the water
volume at R2 at the end of week w  and meanR1f low is the average water ﬂow at site R1 during
weeks 43-45. There are three variables to control: the speed of turbines R2 R3 R4. As discussed 
the speed of the turbine at site R1 is entirely controlled by the amount of incoming water.
The approach we take belongs to a general class of policy search methods [6]. This technique is
based on the ability to simulate policies  and the algorithm will typically output the policy that has
achieved the highest reward during the simulation.
The policy for each turbine takes the parametric form of a truncated linear combination of features:

min

max

xj · θj  M AX SP EEDRi

  0

 

where M AX SP EEDRi is the maximum speed of the turbine at Ri  xj are the features and θj are
the parameters. For each site  the features include the current amount of water in the reservoir  the
total amount of water in downstream reservoirs  and a constant. For the policy that uses the predictive

i=1

5

(cid:34)

(cid:32) k(cid:88)

(cid:33)

(cid:35)

model we include one more feature per site: the expected amount of inﬂow for the following week.
Hence  there are 8 and 11 features for the policies without/with predictions respectively (as there are
no downstream reservoirs for R2).
Using this policy representation results in reasonable performance  but a closer look at constraint 2
during simulation reveals that the reservoirs should not be too full; otherwise  there is a high chance
of spillage  preventing the ability to set a stable ﬂow during the three consecutive weeks critical for
ﬁsh spawning. To address this concern  we use a different set of parameters during weeks 41-43  to
ensure that the desired state of the reservoirs is reached before the constrained period sets in. Note
that the policy search framework allows us to make such an adjustment very easily.
Finally  we also use the structure of the policy to comply as much as possible with constraint 2 
by setting the speed of the turbine at site R2 during weeks 44-45 to be equal to the previous water
ﬂow at site R1. For the policy that uses the predictive model  we further reﬁne this by subtracting
the expected predicted amount of inﬂow at site R1. This brings the number of parameters used for
the policies to 16 and 22 respectively. As the policies are simply (truncated) linear combinations of
features  they are easy to inspect and interpret.
Our algorithm is based on a random local search around the current solution  by perturbing different
blocks of parameters while keeping others ﬁxed  as in block coordinate descent [14]. Each time a
signiﬁcantly better solution than the current one is found  line search is performed in the direction
of improvement. The pseudo-code is shown in Alg. 1. The algorithm itself  like the policy represen-
tation  exploits problem structure by also searching the parameters of a single turbine as part of the
overall search procedure.

Algorithm 1 Policy search algorithm
Parameters:
N− maximum number of interations
θ = {θR2  θR3  θR4} = {θ1  ...  θm} ∈ Rm - initial parameter vector
n− number of parallel policy evaluations
T hreshold− signiﬁcance threshold
γ− sampling variance
Output: θ

θ = SEARCHWITHINBLOCK(θ  all indexes)

(cid:46) searching over entire parameter space

(cid:46) searching over parameters of each turbine separately

θ = SEARCHWITHINBLOCK(θ  parameter indexes of turbine Rj)

(cid:46) searching over each parameter separately

θ = SEARCHWITHINBLOCK(θ  index j)

Stage 1:

Stage 2:

Stage 3:

for j ← 1  m do

for all reservoirs Rj do

1: repeat
2:
3:
4:
5:
6:
7:
8:
9:
10: until no improvement at any stage
11:
12: procedure SEARCHWITHINBLOCK(θ I)
13:
14:
15:
16:
17:
18:
19:
20:

repeat

(cid:46) I I c - an index set and its complement

Obtain n samples {∆i ∼ N (0  γI)}i∈{1 ... n}
Evaluate policies deﬁned by parameters {{θIc  θI + ∆i}}i∈{1 ... n} (in parallel)
if ˆE(R{θIc  θI +∆i}) > ˆE(Rθ) + T hreshold then

Find α∗ = arg maxα ˆE(R{θIc  θI +α∆i}) using a line search
θ ← {θIc   θI + α∗∆i}

until no improvement for N consecutive iterations
return θ

The estimate of the expected reward of a policy is calculated by running the simulator on a single
2000-year-long trajectory obtained from the generative model described in Sec. 2. Since the algo-

6

(a)

(c)

(e)

(b)

(d)

(f)

Figure 3: Qualitative comparison between DP and PS with pred solutions evaluated on the historical data.
Left - DP  right - PS with pred. Plots (a)-(b) show the amount of water turbined at site R4; plots (c)-(d) show
the water ﬂow at site R1; plots (e)-(f) show the change in the volume of reservoir R2. Dashed horizontal lines
in plots (c)-(f) represent the constraints  dotted vertical lines in plots (c)-(d) mark weeks 43-45.

rithm depends on the initialization of the parameter vector  we sample the initial parameter vector
uniformly at random and repeat the search 50 times. The best solution is reported.

Mean-prod

R1 v.% R1 43-45 v.% R1 43-45 v. mean R2 v.%

DP

PS no pred
PS with pred

8 251GW 0%
8 286GW 0%
8 290GW 0%

22%
28%
3.7%

11
2.6
0.5

0%
1.8%
1.8%

Table 1: Comparison between solutions found by dynamic programming (DP)  policy search without predic-
tive model (PS no pred) and policy search using the predictive model (PS with pred). Mean-prod represents the
average annual electricity production; R1 v.% is the percentage of years in which constraint 1 is violated; R2
v.% is the percentage of years in which constraint 3 is violated; R1 43-45 v.% is the percentage of years in which
constraint 2 is violated; R1 43-45 v. mean represents the average amount by which constraint 2 is violated.

5 Experimental results

We compare the solutions obtained using the proposed policy search with (PS with pred) and with-
out predictive model (PS no pred) to a solution based on dynamic programming (DP)  developed by
Hydro-Qu´ebec. The state space of DP is deﬁned by: week  water volume at each reservoir  and pre-
vious total inﬂow. All the continuous variables are discretized  and the transition matrix is calculated
based on the PAR(1) generative model of the inﬂow process presented earlier. The discretization was

7

optimized to obtain best results. During the evaluation  the solution provided by DP is adjusted to
avoid obviously wrong decisions  like unnecessary water spilling. All solutions are evaluated on the
original historical data. The constraints in DP are handled in the same way as in both PS solutions 
with penalties for violations taking the same form as shown previously. The only exception is the
constraint 2  which requires keeping the ﬂow roughly equal throughout several time steps. Since it
is not possible to incorporate this constraint into DP as is  it is handled by enforcing a turbine ﬂow
between 265 m3/s (the minimum required by constraint 1) and 290 m3/s.
Table 1 shows the quantitative comparison between the solutions obtained by three methods. PS
solutions are able to produce more power  with the best value improving by nearly half of a percent
- a sizeable improvement in the ﬁeld of energy production. All solutions ensure that constraint 1
is satisﬁed (column R1 v.%)  but constraint 2 is more difﬁcult. Although PS no pred violates this
constraint slightly more often then DP (column R1 43-45 v.%)  the amount by which the constraint
is violated is signiﬁcantly smaller (column R1 43-45 v. mean). As expected  PS with pred performs
much better  because it explicitly incorporates inﬂow predictions. Finally  although both PS solu-
tions violate constraint 3 during one out of 54 years (see Fig. 3(f))  such occasional violations are
acceptable as long as they help satisfy other constraints. Overall  it is clear that PS with pred is a
noticeable improvement over DP based on the quantitative comparison alone.
Practitioners are also often interested to assess the applicability of the simulated solution by other
criteria that are not always captured in the problem formulation. Fig. 3 provides different plots that
allow such a comparison between the DP and PS with pred solutions. Plots (a)-(b) show that the
solution provided by PS with pred offers a signiﬁcantly smoother policy compared to the DP solution
(see also Fig. A.3 in supplementary material). This smoothness is due to the policy parametrization 
while the DP roughness is the result of the discretization of the input/output spaces. Unless there
are signiﬁcant changes in the amount of inﬂows within consecutive weeks  major ﬂuctuations in
turbine speeds are undesirable  and their presence cannot be easily explained to the operator. The
only ﬂuctuations in the solution of PS with pred that are not the result of large inﬂows are cases in
which the reservoir is empty (see e.g. rapid drops around 10-th week at plot (b))  or a signiﬁcant
increase in turbine speed around weeks 41-45 due to the change in policy parameters. This also
affects the smoothness of the change in the water volume trajectory  which can be observed at plots
(e)-(f) for reservoir R2 for example. The period of weeks 43-45 is a reasonable exception due to the
change in policy parameters that require turbining at faster speeds to satisfy constraint 2.
6 Discussion
We considered the problem of optimizing energy production of a hydroelectric power plant com-
plex under several constraints. The proposed approach is based on a problem-adapted policy search
whose features include predictions obtained from a predictive state representation model. The re-
sulting solution is superior to a well-established alternative  both quantitatively and qualitatively.
It is important to point out that the proposed approach is not  in fact  speciﬁc to this problem or
this domain alone. Often  real-world sequential decision problems have several decision variables 
a variety of constraints of different priorities  uncertainty  etc. Incorporating all available domain
knowledge into the optimization framework is often the key to obtaining acceptable solutions. This
is where the policy search approach is very useful  because it is typically easy to incorporate many
types of domain knowledge naturally within this framework. First  the policy space can rely on
features that are deemed useful for the problem  have an interpretable structure and adhere to the
constraints of the problem. Second  policy search can explore the most likely directions of im-
provement ﬁrst  as considered by experts. Third  the policy can be evaluated directly based on its
performance (regardless of the complexity of the reward function). Forth  it is usually easy to im-
plement the policy search and parallelize parts of the policy search procedure. Finally  the use of
PSRs allows us to produce good features for the policy by providing reliable predictions of future
system behavior. For future work  the main objective is to evaluate the proposed approach on other
realistic complex problems  in particular in domains where solutions obtained from other advanced
techniques are not practically relevant.
Acknowledgments
We thank Gr´egory Emiel and Laura Fagherazzi of Hydro-Qu´ebec for many helpful discussions and for pro-
viding access to the simulator and their DP results  and Kamran Nagiyev for porting an initial version of the
simulator to Java. This research was supported by the NSERC/Hydro-Qu´ebec Industrial Research Chair on the
Stochastic Optimization of Electricity Generation  and by the NSERC Discovery Program.

8

References
[1] Salas  J. D. (1980). Applied modeling of hydrologic time series. Water Resources Publication.
[2] Carpentier  P. L.  Gendreau  M.  Bastin  F. (2013). Long-term management of a hydroelec-
tric multireservoir system under uncertainty using the progressive hedging algorithm. Water
Resources Research  49(5)  2812-2827.

[3] Rani  D.  Moreira  M.M. (2010). Simulation-optimization modeling: a survey and potential

application in reservoir systems operation. Water resources management  24(6)  1107-1138.

[4] Labadie  J.W. (2004). Optimal operation of multireservoir systems: State-of-the-art review.

Journal of Water Resources Planning and Management  130(2)  93-111.

[5] Ba˜nos  R.  Manzano-Agugliaro  F.  Montoya  F. G.  Gil  C.  Alcayde  A.  G´omez  J. (2011).
Optimization methods applied to renewable and sustainable energy: A review. Renewable and
Sustainable Energy Reviews  15(4)  1753-1766.

[6] Deisenroth  M.P.  Neumann  G.  Peters  J. (2013). A Survey on Policy Search for Robotics.

Foundations and Trends in Robotics  21  pp.388-403.

[7] Boots  B.  Siddiqi  S.  Gordon  G. (2010). Closing the learning-planning loop with predictive

state representations. In Proc. of Robotics: Science and Systems VI.

[8] Ong  S.  Grinberg  Y.  Pineau  J. (2013). Mixed Observability Predictive State Representations.

In Proc. of 27th AAAI Conference on Artiﬁcial Intelligence.

[9] Littman  M.  Sutton  R.  Singh  S. (2002). Predictive representations of state. Advances in

Neural Information Processing Systems (NIPS).

[10] Singh  S.  James  M.  Rudary  M. (2004). Predictive state representations: A new theory for
modeling dynamical systems. In Proc. of 20th Conference on Uncertainty in Artiﬁcial Intelli-
gence.

[11] Sveinsson  O.G.B.  Salas  J.D.  Lane  W.L.  Frevert  D.K. (2007). Stochastic Analisys Modeling

and Simulation (SAMS-2007). URL: http://www.sams.colostate.edu.

[12] J.B.  Marco  R.  Harboe  J.D.  Salas (Eds.) (1993). Stochastic hydrology and its use in water

resources systems simulation and optimization  237. Springer.

[13] Bellman  R. (1954). Dynamic Programming. Princeton University Press.
[14] Tseng  P. (2001). Convergence of a block coordinate descent method for nondifferentiable

minimization. Journal of optimization theory and applications  109(3)  475-494.

[15] Loucks  D.P.  J.R. Stedinger  D.A. Haith (1981). Water Resources Systems Planning and Anal-

ysis. Prentice-Hall  Englewood Cliffs  N.J..

[16] Gosavi  A. (2003). Simulation-based optimization: parametric optimization techniques and

reinforcement learning  25. Springer.

[17] Fortin  P. (2008). Canadian clean: Clean  renewable hydropower leads electricity generation

in Canada. IEEE Power Energy Mag.  July/August  41-46.

[18] Breton  M.  Hachem  S.  Hammadia  A. (2002). A decomposition approach for the solution of

the unit loading problem in hydroplants. Automatica  38(3)  477-485.

9

,Yuri Grinberg
Doina Precup
Michel Gendreau
Christopher De Sa
Ce Zhang
Kunle Olukotun
Christopher Ré