2017,Tomography of the London Underground: a Scalable Model for Origin-Destination Data,The paper addresses the classical network tomography problem of inferring local traffic given origin-destination observations. Focussing on large complex public transportation systems  we build a scalable model that exploits input-output information to estimate the unobserved link/station loads and the users path preferences. Based on the reconstruction of the users' travel time distribution  the model is flexible enough to capture possible different path-choice strategies and correlations between users travelling on similar paths at similar times. The corresponding likelihood function is intractable for medium or large-scale networks and we propose two distinct strategies  namely the exact maximum-likelihood inference of an approximate but tractable model and the variational inference of the original intractable model. As an application of our approach  we consider the emblematic case of the London Underground network  where a tap-in/tap-out system tracks the start/exit time and location of all journeys in a day. A set of synthetic simulations and real data provided by Transport For London are used to validate and test the model on the predictions of observable and unobservable quantities.,Tomography of the London Underground:
a Scalable Model for Origin-Destination Data

Nicolò Colombo

Department of Statistical Science

University College London

nicolo.colombo@ucl.ac.uk

Ricardo Silva

The Alan Turing Institute and

Department of Statistical Science

University College London
ricardo.silva@ucl.ac.uk

Soong Kang

School of Management

University College London

smkang@ucl.ac.uk

Abstract

The paper addresses the classical network tomography problem of inferring local
trafﬁc given origin-destination observations. Focusing on large complex public
transportation systems  we build a scalable model that exploits input-output infor-
mation to estimate the unobserved link/station loads and the users’ path preferences.
Based on the reconstruction of the users’ travel time distribution  the model is
ﬂexible enough to capture possible different path-choice strategies and correlations
between users travelling on similar paths at similar times. The corresponding
likelihood function is intractable for medium or large-scale networks and we pro-
pose two distinct strategies  namely the exact maximum-likelihood inference of
an approximate but tractable model and the variational inference of the original
intractable model. As an application of our approach  we consider the emblematic
case of the London underground network  where a tap-in/tap-out system tracks
the starting/exit time and location of all journeys in a day. A set of synthetic
simulations and real data provided by Transport For London are used to validate
and test the model on the predictions of observable and unobservable quantities.

1

Introduction

In the last decades  networks have been playing an increasingly important role in our all-day lives
[1  2  3  4  5  6]. Most of the time  networks cannot be inspected directly and their properties should be
reconstructed form end-point or partial and local observations [7  8]. The problem has been referred
to as network ‘tomography’  a medical word to denote clinical techniques that produce detailed
images of the interior of the body from external signals [9  10]. Nowadays the concept of tomography
has gained wider meanings and the idea applies  in different forms  to many kinds of communication
and transportation networks [11  12  13]. In particular  as the availability of huge amounts of data has
grown exponentially  network tomography has become an important branch of statistical modelling
[14  15  16  17  8]. However  due to the complexity of the task  existing methods are usually only
designed for small-size networks and become intractable for most real-world applications (see [7  18]
for a discussion on this point). The case of large public transportation networks has attracted special
attention since massive datasets of input-output single-user data have been produced by tap-in and
tap-out systems installed in big city as London  Singapore and Beijing [19  20  18  21].

31st Conference on Neural Information Processing Systems (NIPS 2017)  Long Beach  CA  USA.

Depending on the available measurements  two complementary formulations of network tomography
have been considered: (i) the reconstruction of origin-destination distributions from local and partial
trafﬁc observations [11  14  9  15  16] and (ii) the estimation of the link and node loads from input-
output information [22  23  24]. In practice  the knowledge of the unobserved quantities may help
design structural improvements of the network or be used to predict the system’s behaviour in case of
disruptions [25  26  13  27  28]. Focusing on the second (also referred to as ‘dual’) formulation of
the tomography problem  this paper addresses the challenging case where both the amount of data
and the size of the network are large. When only aggregated data are observable  trafﬁc ﬂows over
a given network can also be analysed by methods such as collective graphical models for diffusion
dynamics [29  30].
An important real-world application of dual network tomography is reconstructing the trafﬁc of bits
sent from a source node to a destination node in a network of servers  terminals and routers. The usual
assumption  in those cases  is the tree structure of the network and models infer the bits trajectories
from a series of local delays  i.e. loss functions deﬁned at each location in the network [22  23  24].
The posterior of the travel time distribution at each intermediate position along the path is then used
to reconstruct the unobserved local loads  i.e. the number of packets at a given node and time. We
extend and apply this general idea to urban public transportation systems. The trafﬁc to be estimated
is the ﬂow of people travelling across the system during a day  i.e. the number of people at a given
location and time (station/link load). The nodes of the network are (> 100) underground stations 
connected via (∼ 10) partially overlapping underground ‘lines’  which can be look at as interacting
‘layers’ of connectivity [31]. The observations are single-user records with information about the
origin  destination  starting time and exit time of each journey. Two key unobserved quantities to be
estimated are (i) the users’ path preferences for a given origin-destination pair [32  28] and (ii) the
station/link loads [33  34  35]. Put together  a model for the users’ path preferences and a precise
estimation of the local train loads can help detect network anomalies or predict the behaviour of the
system in case of previously unobserved disruptions [18  27  21].
Respect to the classical communication network case  modelling a complex transportation system
requires three challenging extensions: (i) the network structure is a multi-layer (loopy) network 
where users are allowed to ‘change line’ on those nodes that are shared by different layers; (ii) the
user’s choice between many feasible paths follows rules that can go far beyond simple length-related
schemes; (iii) harder physical constraints (the train time schedule for example) may create high
correlations between users travelling on the same path at similar times. Taking into a account such
peculiar features of transportation networks  while keeping the model scalable respect to both the
size of the network and the dataset  is the main contribution of this work.

Model outline We represent the transportation system by a sparse graph  where each node is
associated with an underground station and each edge with a physical connection between two
stations. The full network is the sum of simple sub-graphs (lines) connected by sets of shared nodes
(where the users are allowed to change line) [31]. For a given origin-destination pair  there may exist
a ﬁnite number of possible simple (non redundant) trajectories  corresponding to distinct line-change
strategies. The unobserved user’s choice is treated as a latent variable taking values over the set of all
feasible paths between the origin and destination. The corresponding probability distribution may
depend on the length of the path  i.e. the number of nodes crossed by the path  or any other arbitrary
feature of the path. In our multi-layers setup  for example  it is natural to include a ‘depth’ parameter
taking into account the number of layers visited  i.e. the number of lines changes.
For any feasible path γ = [γ1  . . .   γ(cid:96)]  the travel time at the intermediate stations is deﬁned by the
recursive relation

t(γi) ∼ t(γi−1) + Poisson(a(γi−1  so + t(γi−1)  γ))

(1)
where t(x) the is travel time at location x ∈ {γ1  . . .   γ(cid:96)}  so is the starting time  a = a(x  so+t(x)  γ)
are local delays that depend on the location  x  the absolute time so + t(x) and the path γ. The choice
of the Poisson distribution is convenient 1 in this framework due to its simple single-parameter form
and the fact that t(x) is an integer in the dataset that motivates this work (travel time is recorded in
minutes). The dependence on γ allows including global path-related features  such as  for example 
an extra delay associated to each line change along the path or the time spent by the user while
walking through the origin and destination stations. The dependence on so and t(x) is what ensures

i = 1  . . .   (cid:96)

1Other options include negative binomial and shifted geometric distributions

2

the scalability of the model because all users can be treated independently given their starting time.
The likelihood associated with all journeys in a day has a factorised form

N(cid:89)

p(t(n)

d |s(n)
o )

(2)

p(t(1)

d   . . .   t(N )

d

|s(1)
o   . . .   s(N )

o

) =

n=1

where t(n)
is the total travel time of the nth user and N the total number of users in a day and each
d
d |s(n)
p(t(n)
o ) depends only locally on the model parameters  i.e. on the delay functions associated
with the nodes crossed by the corresponding path. The drawback is that an exact computation of (2)
is intractable and one needs approximate inference methods to identify the model parameters from
the data.
We address the inference problem in two complementary ways. The ﬁrst one is a model-approximation
method  where we perform the exact inference of the approximate (tractable) model

t(γi) ∼ t(γi−1) + Poisson(a(γi−1  so + ¯ti−1  γ))

i = 1  . . .   (cid:96)

(3)

where ¯ti−1 is a deterministic function of the model parameters that is deﬁned by the difference
equation

¯ti = ¯ti−1 + a(γi−1  so + ¯ti−1  γ)

i = 1  . . .   (cid:96)

(4)

The second one is a variational inference approach where we maximise a lower bound of the
intractable likelihood associated with (1). In both cases  we use stochastic gradient updates to solve
iteratively the corresponding non-convex optimization. Since the closed form solution of (4) is in
general not available  the gradients of the objective functions cannot be computed explicitly. At each
iteration  they are obtained recursively from a set of difference equations derived from (4)  following
a scheme that can be seen as a simple version of the back-propagation method used to train neural
networks. Finally  we initialize the iterative algorithms by means of a method of moments estimation
of the time-independent part of the delay functions. Choosing a random distribution over the feasible
paths  this is obtained from the empirical moments of the travel time distribution (of the approximate
model (10)) by solving a convex optimization problem.

London underground experiments The predictive power of our model is tested via a series of
synthetic and real-world experiments based on the London underground network. All details of the
multi-layer structure of the network can be found in [36]. In the training step we use input-output data
that contain the origin  the destination  the starting time and the exit time of each (pseudonymised) user
of the system. This kind of data are produced nowadays by tap-in/tap-out smart card systems such as
the Oyster Card systems in London [19]. The trained models can then used to predict the unobserved
number of people travelling through a given station at a given time in the day  as well as the user’s
path preferences for given origin-destination pair. In the synthetic experiments  we compared the
model estimations with the values produced by the ‘ground-truth’ (a set of random parameters used
to generate the synthetic data) and test the performance of the two proposed inference methods. In
the real-world experiment  we used original pseudonymised data provided by Transport for London.
The dataset consisted of more than 500000 origin destination records  from journeys realised in a
single day on the busiest part of the London underground network (Zone 1 and 2  see [36])  and a
subset of NetMIS records [37] from the same day. NetMIS data contain realtime information about
the trains transiting through a given station and  for an handful of major underground stations (all of
them on the Victoria line)  include quantitative estimation of the realtime train weights. The latter
can be interpreted as a proxy of the realtime (unobserved) number of people travelling through the
corresponding nodes of the network and used to evaluate the model’s predictions in a quantitative
way. The model has also been tested on a out-of-sample Oyster-card dataset by comparing expected
and observed travel time between a selection of station pairs. Unfortunately  we are not aware of any
existing algorithm that could be applicable for a fair comparison on similar settings.

2 Travel time model

Let o  d and so be the origin  the destination and the starting time of a user travelling through the
system. Let Γod be the set of all feasible paths between o and d. Then the probability of observing a

3

travel time td is a mixture of probability distributions

p(td) =

ppath(γ)p(td|γ)

ppath(γ) =

(cid:88)

γ∈Γod

(cid:80)

e−L(γ)
γ∈Γod

e−L(γ)

(5)

where the conditional p(td|γ) can be interpreted as the travel time probability over a particular path 
ppath(γ) is the probability of choosing that particular path and L(γ) is some arbitrary ‘effective length’
of the path γ. According to (1)  the conditional probabilities p(td|γ) are complicated convolutions of
Poisson distributions. An equivalent but more intuitive formulation is

td =

ri

ri ∼ Poisson(a(γi−1  so +

rk  γ))

γ ∼ Ppath(L(γ))

(6)

where the travel time td is explicitly expressed as the sum of the local delays  ri = t(γi) − t(γi−1) 
along a feasible path γ ∈ Γod. Since the time at the intermediate positions  i.e. t(γi) for i (cid:54)= 1  (cid:96)  is not
observed  the local delays r2  . . .   r(cid:96)(γ) are treated as hidden variables. Letting ¯(cid:96) = maxγ∈Γod (cid:96)(γ) 
the complete likelihood is

(cid:96)(cid:88)

k=2

(cid:96)(γ)(cid:88)

i=2

¯(cid:96)(cid:89)

i=1

e−λiλri

i

p(r1  . . .   r¯(cid:96)|γ) =

p(r1  . . .   r¯(cid:96)  γ) = p(r1  . . .   r¯(cid:96)|γ)ppath(γ)

where λi = a(γi−1  so +(cid:80)i−1
k=2 rk  γ) if i ≤ (cid:96)(γ) and λi = 0 if i > (cid:96)(γ). Marginalizing over
all hidden variables one obtains the explicit form of the conditional probability distributions in the
∞(cid:88)
mixture (5)  i.e.

∞(cid:88)

¯(cid:96)(cid:88)

e−λiλri

¯(cid:96)(cid:89)

(7)

ri!

p(td|γ) =

···

δ(td −

(8)

ri)

r2=0

r¯(cid:96)=0

i=2

i=2

i

ri!

Since λi = λi(ri−1  . . .   r2) for each i = 2  . . .   (cid:96)  the evaluation of each conditional probabilities
requires performing a ((cid:96) − 1)-dimensional inﬁnite sum  which is numerically intractable and makes
an exact maximum likelihood approach infeasible. 2

3

Inference

An exact maximum likelihood estimation of the model parameters in a(x  s  γ) and L(γ) is infeasible
due to the intractability of the evidence (8). One possibility is to use a Monte Carlo approximation
of the exact evidence (8) by sampling from the nested Poisson distributions. In this section we
propose two alternative methods that do not require sampling from the target distribution. The ﬁrst
method is based on the exact inference of an approximate but tractable model. The latter depends
on the same parameters as the original one (the ‘reference’ model (6)) but is such that the local
delays become independent given the path and the starting time. The second approach consists of an
approximate variational inference of (6) with the variational posterior distribution deﬁned in terms of
the deterministic model (4).

3.1 Exact inference of an approximate model

We consider the approximation of the reference model (6) deﬁned by

ri ∼ Poisson(a(γi−1  so + ¯ti−1  γ))
¯(cid:96)(cid:88)
∞(cid:88)

(cid:88)

∞(cid:88)

tn p(t) =

ppath(γ)

∞(cid:88)

γ ∼ Ppath(L(γ))
¯(cid:96)(cid:89)

e−λi λri

i

···

(
r¯(cid:96)=0

ri)n

i=2

i=2

ri!

(10)

(9)

2An exact evaluation of the moments

(cid:104)tn
d(cid:105) =

is also intractable.

t=0

γ∈Γod

r2=0

4

(cid:96)(γ)(cid:88)

i=2

td =

ri

where the ¯ti are obtained recursively from (4). In this case  the (cid:96)(γ) − 1 local delays ri are decoupled
and the complete likelihood is given by

p(r1  . . .   r¯(cid:96)  γ) = p(r1  . . .   r¯(cid:96)|γ)ppath(γ)
(cid:88)
¯(cid:96)(cid:88)

(11)
where λi = a(γi−1  so + ¯ti−1(γ)  γ) if i ≤ (cid:96)(γ) and λi = 0 if i > (cid:96)(γ). Noting that td is the sum of
independent Poisson random variables  we have
δ(td −

p(r1  . . .   r¯(cid:96)|γ) =
(cid:88)
¯(cid:96)(cid:89)

e−¯t¯(cid:96) ¯ttd
¯(cid:96)

td(cid:88)

td(cid:88)

e−λiλri

ppath(γ)

p(td) =

(12)

. . .  

ri)

ri!

i=1

=

i

i

r¯(cid:96)=0

r2=0
i=2 λi = ¯t¯(cid:96). The parameters in the model function a and L can then be

i=2

i=2

ri!

γ∈Γod

td!

ppath(γ)

where we have used(cid:80)¯(cid:96)

γ∈Γod

identiﬁed with the solution of the following non-convex maximization problem

¯(cid:96)(cid:89)

e−λiλri

D(cid:88)

D(cid:88)

T−1(cid:88)

T(cid:88)

maxa L

N (o  d  so  sd) log p(sd − so)

(13)

where N (o  d  so  sd) is the number of users travelling from o to d with enter and exit time so and sd
respectively.

o=1

d=1

so=0

sd=so

3.2 Variational inference of model the original model

We deﬁne the approximate posterior distribution

(cid:80)

e− ˜L(γ td)
γ∈Γode− ˜L(γ td )

q(γ) =

q(r  γ) = q(r|γ)qpath(γ)

q(r|γ) = pmulti(r; td  η)
¯ti−¯ti−1

pmulti(r; td  η) = δ(td −(cid:80)¯(cid:96)

(14)
  with ¯ti = ¯ti−1 for all (cid:96)(γ) < i ≤ ¯(cid:96) 
where we have deﬁned r = [r2  . . .   r¯(cid:96)]  ηi =
ηri
ri! and the function ˜L(γ  td) depends on the path  γ 
i
and the observed travel time  td. Except for the corrected length ˜L(γ  td)  the variational distribution
(14) share the same parameters over all data points and can be used directly to evaluate the likelihood
lower bound (ELBO) L = Eq(log p(td)) − Eq(log q) 3. One has
ppath(γ)
qpath(γ)

L(o  d  so  td) = − log td! +

(cid:88)

¯(cid:96)(cid:88)

qpath(γ) log

Li(γ)

qpath(γ)

i=2

+

¯t¯(cid:96)

i=2

i=2 ri)td!(cid:81)¯(cid:96)
(cid:88)
td(cid:88)

γ∈Γod

. . .  

r¯(cid:96)=1

td(cid:88)
with λi = a(γi−1  so +(cid:80)i−1

Li(γ) =

r2=1

¯(cid:96)(cid:88)

i=2

γ∈Γod
(−λi + ri log

λi
ηi

pmulti(r; td  η)

)

(15)

if i ≤ (cid:96)(γ) and λi = 0 = ηi if i > (cid:96)(γ).
The exact evaluation of each Li(γ) is still intractable due to the multidimensional sum. However 
since for any γ and i = 2  . . .   (cid:96)  λi depends only on the ‘previous’ delays and we can deﬁne

k=2 rk) and ηi = a(γi−1 so+¯ti−1)

¯t¯(cid:96)

¯ti−1
¯t¯(cid:96)

ηpast =

(16)
where rpast = r2 + ··· + ri−1 and rfuture = ri+1 + ··· + r¯(cid:96)  and by the grouping property of the
multinomial distribution we obtain

λi = a(γi−1  so + rpast)

ηfuture =

Li(γ) =

pmulti(r(i)  td  η(i))(−λi + ri log

(17)
where r(i) = [rpast  ri  rfuture] and η(i) = [ηfuture  ηi  ηpast]. Every Li(γ) can now be computed in
d) operations and the model parameter identiﬁed with the solution of the following non-convex
O(t3
optimization problem

rfuture=1

λi
ηi

ri=1

)

td(cid:88)

td(cid:88)

¯t¯(cid:96) − ¯ti
¯t¯(cid:96)

N (o  d  so  sd)L(o  d  so  sd − so)

(18)

o=1

d=1

so=0

sd=so

3Similar ‘amortised’ approaches have been used elsewhere to make the approximate inference scalable

[38  39]

5

D(cid:88)

D(cid:88)

T−1(cid:88)

T(cid:88)

maxa L  ˜L

Figure 1: On the left  stochastic iterative solution of (18) (VI) and (13) (ML) for the synthetic dataset. At
each iteration  the prediction error is obtained on a small out-of-sample dataset. On the right  distance from
the ground-truth of the uniform distribution (x-axis) and the models’ path probability (y-axis) for various
origin-destination pairs. In the legend box  total distance from the ground-truth.

γ∈Γod

Stochastic gradient descent Both (13) and (18) consist of O(D2T 2) terms and the estimation
of the exact gradient at each iteration can be expansive for large networks D >> 1 or ﬁne time
resolutions T >> 1. A common practice in this case is to use a stochastic approximation of the
gradient where only a random selection of origin-destination pairs and starting times are used. Note
that each L(o  d  so  td) depends on a(x  s  γ) only if the location x is crossed by at least one of the
feasible paths between o and d.

td=1 tdp(td) =
ppath(γ)¯t(cid:96)(γ)  can be used to obtain a partial initialization of the iterative algorithms via a
simple moment-matching technique. We assume that  averaging over all possible starting time  the
system behaves like a simple communication network with constant delays at each nodes or  equiva-
s=0 V (x  s  γ) = 0. In this case an initialization

Initialization The analytic form of the ﬁrst moments of (12)  (cid:104)td(cid:105)so = (cid:80)∞
(cid:80)
lently  that a(x  s  γ) = α(x) + V (x  s  γ)  with(cid:80)T
D(cid:88)
(tod − (cid:88)
N (o  d  so  sd)(sd − so)  with Z =(cid:80)T−1

of α(x) is obtained by solving

(cid:80)T−1

(cid:96)(γ)−1(cid:88)

where tod = 1
N (o  d  so  sd) 
Z
is the ‘averaged’ empirical moments computed from the data. Note that (19) is convex for any ﬁxed
choice of ppath(γ).

sd=so

sd=so

so=0

so=0

(cid:80)T

minα

(cid:80)T

D(cid:88)

ppath(γ)

α(γk))2

γ∈Γod

(19)

o=1

d=1

k=1

Total derivatives All terms in (13) and (18) are in the form g = g(ξ  ¯ti)  where ξ denotes the
model parameters and ¯ti = ¯ti(ξ) is deﬁned by the difference equation (4). Since ¯ti is not available as
an explicit function of ξ it is not possible to write g = g(ξ) or compute directly its gradient ∇ξg. A
way out is to compute the total derivative of the function g with respect to ξ  i.e.

dg(ξ  ¯ti)

dξ

=

∂g(ξ  ¯ti)

∂ξ

+

∂g(ξ  ¯ti)

d¯ti
dξ

(20)

where d¯ti

dξ   for i = 1  . . .   (cid:96)  can be obtained from the iterative integration of

∂¯ti

(cid:12)(cid:12)(cid:12)(cid:12)s=¯ti−1

d¯ti−1
dξ

i = 1  . . .   (cid:96)

(21)

d¯ti
dξ

=

d¯ti−1
dξ

+

∂a(x  s  γ))

∂ξ

+

∂a(x  s  γ))

∂s

which is implied by (4).

4 Experiments

The method described in the previous sections is completely general and  except for the initialization
step  no special form of the model functions is assumed. In order to captures few key features of

6

012345678910log(runtime)0.150.20.250.30.350.40.450.5prediction erroroptimizationVIML00.10.20.30.40.50.60.70.8|uniform-ptrue|00.10.20.30.40.50.60.70.8|popt-ptrue|path choice probability1.96.9771Figure 2: On the left  travel time predicted by the VI model (in blue) and the ML model (in red) of Figure
1 and the ground-truth model (in green) plotted against the starting time for a selection of origin-destination
pairs. In the legend box  normalised total distance ((cid:107)vexp − vtrue(cid:107)/(cid:107)vtrue(cid:107)) between model’s and ground-truth’s
predictions. On the right  station loads predicted by the ground-truth (in green) and the VI model (in blue) and
ML model (in red) of Figure 1. The three models and a reduced dataset of N = 10000 true origin  destination
and starting time records has been used to simulate the trajectories of N synthetic users. For each model  the N
simulated trajectories give the users expected positions at all times (the position is set to 0 if the users is not yet
into the system or has ﬁnished his journey) that have been used to compute the total number of people being
at a given station at a given time. The reported score is the total distance between model’s and ground-truth’s
normalised predictions. For station x  the normalised load vector is vx/1T vx where vx(s) is the number of
people being at station x at time s.

a large transportation system and apply the model to the tomography of the London underground 
we have chosen the speciﬁc parametrization of the function L(γ) and a(x  s  γ) given in Section
4.1. The parametrised model has then been trained and tested on a series of synthetic and real-world
datasets as described in Section 4.2.

4.1 Parametrization

length ˜L(γ  td) in (14) was deﬁned as

For each origin o and the destination d  we have reduced the set of all feasible paths  Γod  to a small
set including the shortest path and few perturbations of the shortest path (by forcing different choices
at the line-change points). Let C(γ) ∈ {0  1}(cid:96) such that C(γi) = 1 if the user changes line at γi and
zero otherwise. To parametrize the path probability (5) we chose L(γ) = β1(cid:96)(γ) + β2c(γ) where
i C(γi) and β1  β2 ∈ R are free parameters. The posterior-corrected effective

(cid:96)(γ) = |γ|  c(γ) =(cid:80)
where td is the observed travel time  ˆtd =(cid:80)
and j = 1  2  3  are extra free parameters. A regularization term λ((cid:107)β(cid:107)2 +(cid:80)

i = (cid:96)  c (22)
N (o  d  so  sd)(sd − so) and θij ∈ R  i = (cid:96)  c
i=(cid:96) c (cid:107)θi(cid:107)2)  with
λ = 1/80  has been added to help the convergence of the stochastic algorithm. We let the local
time-dependent delay at location x and time s be a(x  s  γ) = softplus(α(x) + V (x  s) + W (x  γ))
with

˜βi = θi1 + θi2u + θi3u−1

u = ˆt−2

d (td − ˆtd)2

˜L(γ) = ˜β(cid:96)(cid:96)(γ) + ˜βcc(γ)

o d so sd

(cid:96)(cid:88)

Nω(cid:88)

Nφ(cid:88)

V =

σij(x) cos (ωis + φj)

W =

ρ(x)δx γiC(γi) + η(x) (δx γ1 + δx γ(cid:96))

(23)

i=1

j=1

i=1

where α(x)  ρ(x)  η(x) ∈ R and σ(x) ∈ RNω×Nφ are free parameters and {ω1  . . . ωNω} and
{φ1  . . . φNφ} two sets of library frequencies and phases. In the synthetic simulation  we have
restricted the London underground network [36] to Zone 1 (63 stations)  chosen Nω = 5 = Nψ and
set W = 0. For the real-data experiments we have considered Zone 1 and 2 (131 stations)  Nω = 10 
Nψ = 5 and W (cid:54)= 0.

7

020040060080010001200starting time05101520253035exp travel timeKings Cross LU to Oxford Circustrue0.29910.2376020040060080010001200starting time05101520253035404550exp travel timeOxford Circus to Waterloo LUtrue0.091520.09095020040060080010001200starting time01020304050607080exp travel timeWaterloo LU to Paddington LUtrue0.11920.1131020040060080010001200starting time05101520253035404550exp travel timePaddington LU to Kings Cross LUtrue0.17150.1486020040060080010001200time01020304050# of peopleKings Cross LU020040060080010001200time01020304050# of people0.0165020040060080010001200time01020304050# of people0.01263020040060080010001200time01020304050# of peopleOxford Circus020040060080010001200time01020304050# of people0.0151020040060080010001200time01020304050# of people0.01293020040060080010001200time01020304050# of peoplePaddington LU020040060080010001200time01020304050# of people0.01355020040060080010001200time01020304050# of people0.013411Figure 3: Travel times predicted by a random model (top)  the initialization model (middle) obtained from (19)
and the ML model (bottom) are scattered against the observed travel times of an out-of-sample test dataset (real
data). The plots in the ﬁrst three columns show the prediction-error of each model on three subsets of the test
sample  Sshort (ﬁrst column)  Smedium (second column) and Slong (third column)  consisting respectively of
short  medium-length and long journeys. The plots in the last column show the prediction error of each model
on the whole test dataset Sall = Sshort + Smedium + Slong The reported score is the relative prediction error for
the corresponding model and subset of journeys deﬁned as (cid:107)vexp − vtrue(cid:107)/(cid:107)vtrue(cid:107)  with vexp(n) and vtrue(n)
being the expected and observed travel times for the nth journey in Si  i ∈ {short  medium  long  all}.

Figure 4: Station loads obtained from NetMIS data (in blue) and predicted by the model (in red). NetMIS
data contain information about the time period during which a train was at the station and an approximate
weight-score of the train. At time s  a proxy of the load at a given station is obtained by summing the score of
all trains present at that station at time s. To make the weight scores and the model predictions comparable we
have divided both quantities by the area under the corresponding plots (proportional to the number of people
travelling through the selected stations during the day). The reported score is the relative prediction error
(cid:107)vexp − vtrue(cid:107)/(cid:107)vtrue(cid:107)  with vexp(s) being the (normalised) expected number of people being at the station at
time s and vtrue(s) the (normalised) weight-score obtained from the NetMIS data.

8

01020304050607080true travel time01020304050607080predicted travel time1.087301020304050607080true travel time020406080100120predicted travel time0.904301020304050607080true travel time020406080100120predicted travel time0.5966101020304050607080true travel time020406080100120predicted travel time0.89801020304050607080true travel time01020304050607080predicted travel time0.2869301020304050607080true travel time01020304050607080predicted travel time0.2248801020304050607080true travel time01020304050607080predicted travel time0.3517301020304050607080true travel time01020304050607080predicted travel time0.263401020304050607080true travel time01020304050607080predicted travel time0.2054401020304050607080true travel time01020304050607080predicted travel time0.1885501020304050607080true travel time01020304050607080predicted travel time0.3599901020304050607080true travel time01020304050607080predicted travel time0.23084006008001000120014001600time02468observed load#10-4Euston LU4006008001000120014001600time02468predicted load#10-40.69864006008001000120014001600time02468observed load#10-4Finsbury Park4006008001000120014001600time02468predicted load#10-40.79824006008001000120014001600time02468observed load#10-4Green Park4006008001000120014001600time02468predicted load#10-40.93114006008001000120014001600time02468observed load#10-4Kings Cross LU4006008001000120014001600time02468predicted load#10-40.59594006008001000120014001600time02468observed load#10-4Oxford Circus4006008001000120014001600time02468predicted load#10-40.63114006008001000120014001600time02468observed load#10-4Stockwell4006008001000120014001600time02468predicted load#10-41.4534006008001000120014001600time02468observed load#10-4Victoria LU4006008001000120014001600time02468predicted load#10-40.58594006008001000120014001600time02468observed load#10-4Warren Street4006008001000120014001600time02468predicted load#10-40.71614006008001000120014001600time02468observed load#10-4Pimlico4006008001000120014001600time02468predicted load#10-40.6774006008001000120014001600time02468observed load#10-4Vauxhall LU4006008001000120014001600time02468predicted load#10-40.61724.2 Methods and discussion

Synthetic and real-world numerical experiments have been performed to: (i) understand how reliable
is the proposed approximation method compared to more standard approach (variational inference) 
(ii) provide quantitative tests of our inference algorithm on the prediction of key unobservable
quantities from a ground-truth model and (iii) assess the scalability and applicability of our method
by modelling the trafﬁc of a large-scale real-world system. Both synthetic and real-world experiments
were are based on the London underground network [36]. Synthetic data were generated from the true
origins  destinations and starting times by simulating the trajectories with the ground-truth (random)
model described in Section 4.1. On such dataset  we have compared the training performance of the
variational inference and the maximum likelihood approaches by measuring the prediction error on
an out-of-sample dataset at each stochastic iteration (Figure 1  right). The two trained models have
then been tested against the ground-truth on predicting (i) the total travel time (Figure 2  left)  (ii) the
shape of the users’ path preferences (Figure 1  right) and (iii) the local loads (Figure 2  right). In the
real-world experiments  we have trained the model on a dataset of smart-card origin-destination data
(pseudonymised Oyster Card records from 21st October 2013 provided by Transport for London4 )
and then tested the prediction of the total travel time on a small out-of-sample set of journeys (Figure
3) . In this case we have compared the model prediction with its indirect estimation obtained from
NetMIS records of the same day (Figure 4). NetMIS data contain a partial reconstruction of the actual
position and weights of the trains and it is possible to combine them to estimate the load of a given
station an any given time in the day. Since full train information was recorded only on one of the 11
underground lines of the network (the Victoria Line)  we have restricted the comparison to a small set
of stations.
The two inference methods (VI for (18) and ML for (13)) have obtained good and statistically similar
scores on recovering the ground-truth model predictions (Figure 2). ML has been trained orders
of magnitude faster and was almost as accurate as VI on reproducing the users’ path preferences
(see Figure 1). Since the performance of ML and VI have shown to be statistically equivalent.
Only ML has been used in the real-data experiments. On the prediction of out-of-sample travel
times  ML outperformed both a random model and the constant model used for the initialization
(a(x  s  γ) = α(x) with α(x) obtained from (19) with uniform ppath). In particular  when all journeys
in the test dataset are considered  ML outperforms the baseline method with a 24% improvement.
The only sub-case where ML does worse ( 8% less accurate) is on the small subset of long journeys
(see Figure 3). These are journeys where i) something unusual happens to the user or ii) the user visits
lot of stations. In the latter case  a constant-delay model (as our initialization model) may perform
well because we can expect some averaging process between the time variability of all visited stations.
Figure 4 shows that ML was able to reproduce the shape and relative magnitude of the ‘true’ time
distributions obtained from the NetMIS data. For a more quantitative comparison  we have computed
the normalised distance (reported on the top of the red plots in Figure 4) between observed and
predicted loads over the day.

5 Conclusions

We have proposed a new scalable method for the tomography of large-scale networks from input
output data. Based on the prediction of the users’ travel time  the model allows an estimation of
the unobserved path preferences and station loads. Since the original model is intractable  we have
proposed and compared two different approximate inference schemes. The model hes been tested on
both synthetic and real data from the London underground. On synthetic data  we have trained two
distinct models with the proposed approximate inference techniques and compare their performance
against the ground-truth. Both of them could successfully reproduce the outputs of the ground-truth
on observable and unobservable quantities. Trained on real data via stochastic gradient descent 
the model outperforms a simple constant-delay model on predicting out-of-sample travel times and
produces reasonable estimation of the unobserved station loads. In general  the training step could be
made more efﬁcient by a careful design of the mini-batches used in the stochastic optimization. More
precisely  since each term in (13) or (18) involves only a very restricted set of parameters (depending
on the set feasible paths between the corresponding origin and destination)  the inference could be
radically improved by stratiﬁed sampling techniques as described for example in [40  41  42].

4 The data shown in Figure 3 and 4 are not publicly available  but a reduced database containing similar

records can be downloaded from [19]

9

Acknowledgments

We thank Transport for London for kindly providing access to data. This work has been funded by a
EPSRC grant EP/N020723/1. RS also acknowledges support by The Alan Turing Institute under the
EPSRC grant EP/N510129/1 and the Alan Turing Institute-Lloyd’s Register Foundation programme
on Data-Centric Engineering.

References
[1] Everett M Rogers and D Lawrence Kincaid. Communication networks: toward a new paradigm

for research. 1981.

[2] Stanley Wasserman and Katherine Faust. Social network analysis: Methods and applications 

volume 8. Cambridge university press  1994.

[3] Michael GH Bell and Yasunori Iida. Transportation network analysis. 1997.

[4] Mark EJ Newman. The structure and function of complex networks. SIAM review  45(2):167–

256  2003.

[5] Mark Newman  Albert-Laszlo Barabasi  and Duncan J Watts. The structure and dynamics of

networks. Princeton University Press  2011.

[6] Nicholas A Christakis and James H Fowler. Social contagion theory: examining dynamic social

networks and human behavior. Statistics in medicine  32(4):556–577  2013.

[7] Mark Coates  Alfred Hero  Robert Nowak  and Bin Yu. Large scale inference and tomography

for network monitoring and diagnosis. IEEE Signal Processing Magazine  2001.

[8] Edoardo M Airoldi and Alexander W Blocker. Estimating latent processes on a network from
indirect measurements. Journal of the American Statistical Association  108(501):149–164 
2013.

[9] Yehuda Vardi. Network tomography: Estimating source-destination trafﬁc intensities from link

data. Journal of the American statistical association  91(433):365–377  1996.

[10] Rui Castro  Mark Coates  Gang Liang  Robert Nowak  and Bin Yu. Network tomography:

Recent developments. Statistical science  pages 499–517  2004.

[11] Luis G Willumsen. Estimation of an od matrix from trafﬁc counts–a review. 1978.

[12] Nathan Eagle  Alex Sandy Pentland  and David Lazer. Inferring friendship network structure
by using mobile phone data. Proceedings of the national academy of sciences  106(36):15274–
15278  2009.

[13] Yu Zheng  Licia Capra  Ouri Wolfson  and Hai Yang. Urban computing: concepts  method-
ologies  and applications. ACM Transactions on Intelligent Systems and Technology (TIST) 
5(3):38  2014.

[14] Robert J Vanderbei and James Iannone. An em approach to od matrix estimation. Technical

report  Technical Report SOR 94-04  Princeton University  1994.

[15] Claudia Tebaldi and Mike West. Bayesian inference on network trafﬁc using link count data.

Journal of the American Statistical Association  93(442):557–573  1998.

[16] Jin Cao  Drew Davis  Scott Vander Wiel  and Bin Yu. Time-varying network tomography:

router link data. Journal of the American statistical association  95(452):1063–1075  2000.

[17] Yolanda Tsang  Mark Coates  and Robert Nowak. Nonparametric internet tomography. In
Acoustics  Speech  and Signal Processing (ICASSP)  2002 IEEE International Conference on 
volume 2  pages II–2045. IEEE  2002.

[18] Ricardo Silva  Soong Moon Kang  and Edoardo M Airoldi. Predicting trafﬁc volumes and
estimating the effects of shocks in massive transportation systems. Proceedings of the National
Academy of Sciences  112(18):5643–5648  2015.

10

[19] Transport For London. Ofﬁcial website. https://tﬂ.gov.uk/.

[20] Camille Roth  Soong Moon Kang  Michael Batty  and Marc Barthélemy. Structure of urban
movements: polycentric activity and entangled hierarchical ﬂows. PloS one  6(1):e15923  2011.

[21] Chen Zhong  Michael Batty  Ed Manley  Jiaqiu Wang  Zijia Wang  Feng Chen  and Gerhard
Schmitt. Variability in regularity: Mining temporal mobility patterns in london  singapore and
beijing using smart-card data. PloS one  11(2):e0149222  2016.

[22] Ramón Cáceres  Nick G Dufﬁeld  Joseph Horowitz  and Donald F Towsley. Multicast-based
inference of network-internal loss characteristics. IEEE Transactions on Information theory 
45(7):2462–2480  1999.

[23] Mark J Coates and Robert David Nowak. Network loss inference using unicast end-to-end
measurement. In ITC Conference on IP Trafﬁc  Modeling and Management  pages 28–1  2000.

[24] F Lo Presti  Nick G Dufﬁeld  Joseph Horowitz  and Don Towsley. Multicast-based inference of
network-internal delay distributions. IEEE/ACM Transactions On Networking  10(6):761–775 
2002.

[25] Llewellyn Michael Kraus Boelter and Melville Campbell Branch. Urban planning  transporta-
tion  and systems analysis. Proceedings of the National Academy of Sciences  46(6):824–831 
1960.

[26] Jayanth R Banavar  Amos Maritan  and Andrea Rinaldo. Size and form in efﬁcient transportation

networks. Nature  399(6732):130–132  1999.

[27] Haodong Yin  Baoming Han  Dewei Li  Jianjun Wu  and Huijun Sun. Modeling and simulating
passenger behavior for a station closure in a rail transit network. PLoS one  11(12):e0167126 
2016.

[28] Junbo Zhang  Yu Zheng  and Dekang Qi. Deep spatio-temporal residual networks for citywide

crowd ﬂows prediction. arXiv preprint arXiv:1610.00081  2016.

[29] Akshat Kumar  Daniel Sheldon  and Biplav Srivastava. Collective diffusion over networks:

Models and inference. arXiv preprint arXiv:1309.6841  2013.

[30] Jiali Du  Akshat Kumar  and Pradeep Varakantham. On understanding diffusion dynamics of
patrons at a theme park. In Proceedings of the 2014 international conference on Autonomous
agents and multi-agent systems  pages 1501–1502. International Foundation for Autonomous
Agents and Multiagent Systems  2014.

[31] Maciej Kurant and Patrick Thiran. Layered complex networks. Physical review letters 

96(13):138701  2006.

[32] Yu Zheng and Xiaofang Zhou. Computing with spatial trajectories. Springer Science and

Business Media  2011.

[33] A Nuzzolo  U Crisalli  L Rosati  and A Ibeas. Stop: a short term transit occupancy prediction
tool for aptis and real time transit management systems. In Intelligent Transportation Systems-
(ITSC)  2013 16th International IEEE Conference on  pages 1894–1899. IEEE  2013.

[34] Bo Friis Nielsen  Laura Frølich  Otto Anker Nielsen  and Dorte Filges. Estimating passenger
numbers in trains using existing weighing capabilities. Transportmetrica A: Transport Science 
10(6):502–517  2014.

[35] Gilles Vandewiele  Pieter Colpaert  Olivier Janssens  Joachim Van Herwegen  Ruben Verborgh 
Erik Mannens  Femke Ongenae  and Filip De Turck. Predicting train occupancies based on
query logs and external data sources. In Proceedings of the 26th International Conference on
World Wide Web Companion  pages 1469–1474. International World Wide Web Conferences
Steering Committee  2017.

[36] Transport For London. Tube map. https://tﬂ.gov.uk/cdn/static/cms/documents/standard-tube-

map.pdf.

11

[37] Transport For London. Netmis dataset.

http://lu.uat.cds.co.uk/Ops_maintenance/Library_tools/Apps_tools/696.html.

[38] Diederik P Kingma and Max Welling. Auto-encoding variational bayes. arXiv preprint

arXiv:1312.6114  2013.

[39] Samuel Gershman and Noah Goodman. Amortized inference in probabilistic reasoning. In

CogSci  2014.

[40] Prem K Gopalan  Sean Gerrish  Michael Freedman  David M Blei  and David M Mimno.
Scalable inference of overlapping communities. In Advances in Neural Information Processing
Systems  pages 2249–2257  2012.

[41] Peilin Zhao and Tong Zhang. Stochastic optimization with importance sampling for regularized
loss minimization. In Proceedings of the 32nd International Conference on Machine Learning
(ICML-15)  pages 1–9  2015.

[42] Olivier Canévet  Cijo Jose  and Francois Fleuret. Importance sampling tree for large-scale
empirical expectation. In International Conference on Machine Learning  pages 1454–1462 
2016.

12

,Shubhendu Trivedi
David Mcallester
Greg Shakhnarovich
Nicolò Colombo
Ricardo Silva
Soong Moon Kang