2016,Learning and Forecasting Opinion Dynamics in Social Networks,Social media and social networking sites have become a global pinboard for exposition and discussion of news  topics  and ideas  where social media users often update their opinions about a particular topic by learning from the opinions shared by their friends. In this context  can we learn a data-driven model of opinion dynamics that is able to accurately forecast users' opinions? In this paper  we introduce SLANT  a probabilistic modeling framework of opinion dynamics  which represents users' opinions over time by means of marked jump  diffusion stochastic differential equations  and allows for efficient model simulation and parameter estimation from historical fine grained event data. We then leverage our framework to derive a set of efficient predictive formulas for opinion forecasting and identify conditions under which opinions converge to a steady state. Experiments on data gathered from Twitter show that our model provides a good fit to the data and our formulas achieve more accurate forecasting than alternatives.,Learning and Forecasting Opinion Dynamics in

Social Networks

Abir De∗

Isabel Valera†

Niloy Ganguly∗

Sourangshu Bhattacharya∗

Manuel Gomez-Rodriguez†

IIT Kharagpur∗

MPI for Software Systems†

{abir.de niloy sourangshu}@cse.iitkgp.ernet.in

{ivalera manuelgr}@mpi-sws.org

Abstract

Social media and social networking sites have become a global pinboard for ex-
position and discussion of news  topics  and ideas  where social media users often
update their opinions about a particular topic by learning from the opinions shared
by their friends. In this context  can we learn a data-driven model of opinion dy-
namics that is able to accurately forecast users’ opinions? In this paper  we intro-
duce SLANT  a probabilistic modeling framework of opinion dynamics  which
represents users’ opinions over time by means of marked jump diffusion stochas-
tic differential equations  and allows for efﬁcient model simulation and parameter
estimation from historical ﬁne grained event data. We then leverage our frame-
work to derive a set of efﬁcient predictive formulas for opinion forecasting and
identify conditions under which opinions converge to a steady state. Experiments
on data gathered from Twitter show that our model provides a good ﬁt to the data
and our formulas achieve more accurate forecasting than alternatives.

Introduction

1
Social media and social networking sites are increasingly used by people to express their opinions 
give their “hot takes”  on the latest breaking news  political issues  sports events  and new products.
As a consequence  there has been an increasing interest on leveraging social media and social net-
working sites to sense and forecast opinions  as well as understand opinion dynamics. For example 
political parties routinely use social media to sense people’s opinion about their political discourse1;
quantitative investment ﬁrms measure investor sentiment and trade using social media [18]; and 
corporations leverage brand sentiment  estimated from users’ posts  likes and shares in social media
and social networking sites  to design their marketing campaigns2. In this context  multiple methods
for sensing opinions  typically based on sentiment analysis [21]  have been proposed in recent years.
However  methods for accurately forecasting opinions are still scarce [7  8  19]  despite the extensive
literature on theoretical models of opinion dynamics [6  9].
In this paper  we develop a novel modeling framework of opinion dynamics in social media and so-
cial networking sites  SLANT3  which allows for accurate forecasting of individual users’ opinions.
The proposed framework is based on two simple intuitive ideas: i) users’ opinions are hidden until
they decide to share it with their friends (or neighbors); and  ii) users may update their opinions
about a particular topic by learning from the opinions shared by their friends. While the latter is one
of the main underlying premises used by many well-known theoretical models of opinion dynam-
ics [6  9  22]  the former has been ignored by models of opinion dynamics  despite its relevance on
closely related processes such as information diffusion [12].

1http://www.nytimes.com/2012/10/08/technology/campaigns-use-social-media-to-lure-younger-voters.html
2http://www.nytimes.com/2012/07/31/technology/facebook-twitter-and-foursquare-as-corporate-focus-groups.html
3Slant is a particular point of view from which something is seen or presented.

30th Conference on Neural Information Processing Systems (NIPS 2016)  Barcelona  Spain.

More in detail  our proposed model represents users’ latent opinions as continuous-time stochastic
processes driven by a set of marked jump stochastic differential equations (SDEs) [14]. Such con-
struction allows each user’s latent opinion to be modulated over time by the opinions asynchronously
expressed by her neighbors as sentiment messages. Here  every time a user expresses an opinion by
posting a sentiment message  she reveals a noisy estimate of her current latent opinion. Then  we
exploit a key property of our model  the Markov property  to develop:

I. An efﬁcient estimation procedure to ﬁnd the parameters that maximize the likelihood of a

set of (millions of) sentiment messages via convex programming.

II. A scalable simulation procedure to sample millions of sentiment messages from the pro-

posed model in a matter of minutes.

III. A set of novel predictive formulas for efﬁcient and accurate opinion forecasting  which
can also be used to identify conditions under which opinions converge to a steady state of
consensus or polarization.

Finally  we experiment on both synthetic and real data gathered from Twitter and show that our
model provides a good ﬁt to the data and our predictive formulas achieve more accurate opinion
forecasting than several alternatives [7  8  9  15  26].
Related work. There is an extensive line of work on theoretical models of opinion dynamics and
opinion formation [3  6  9  15  17  26]. However  previous models typically share the following
limitations: (i) they do not distinguish between latent opinion and sentiment (or expressed opin-
ion)  which is a noisy observation of the opinion (e.g.  thumbs up/down  text sentiment); (ii) they
consider users’ opinions to be updated synchronously in discrete time  however  opinions may be
updated asynchronously following complex temporal patterns [12]; (iii) the model parameters are
difﬁcult to learn from real ﬁne-grained data and instead are set arbitrarily  as a consequence  they
provide inaccurate ﬁne-grained predictions; and  (iv) they focus on analyzing only the steady state
of the users’ opinions  neglecting the transient behavior of real opinion dynamics which allows for
opinion forecasting methods. More recently  there have been some efforts on designing models that
overcome some of the above limitations and provide more accurate predictions [7  8]. However 
they do not distinguish between opinion and sentiment and still consider opinions to be updated
synchronously in discrete time. Our modeling framework addresses the above limitations and  by
doing so  achieves more accurate opinion forecasting than alternatives.
2 Proposed model
In this section  we ﬁrst formulate our model of opinion dynamics  starting from the data it is designed
for  and then introduce efﬁcient methods for model parameter estimation and model simulation.
Opinions data. Given a directed social network G = (V E)  we record each message as e :=
(u  m  t)  where the triplet means that the user u ∈ V posted a message with sentiment m at time
t. Given a collection of messages {e1 = (u1  m1  t1)  . . .   en = (un  mn  tn)}  the history Hu(t)
gathers all messages posted by user u up to but not including time t  i.e. 
(1)
Hu(t) = {ei = (ui  mi  ti)|ui = u and ti < t} 

and H(t) := ∪u∈VHu(t) denotes the entire history of messages up to but not including time t.
Generative process. We represent users’ latent opinions as a multidimensional stochastic process
x∗(t)  in which the u-th entry  x∗u(t) ∈ R  represents the opinion of user u at time t and the sign ∗
means that it may depend on the history H(t). Then  every time a user u posts a message at time t 
we draw its sentiment m from a sentiment distribution p(m|x∗u(t)). Here  we can also think of the
sentiment m of each message as samples from a noisy stochastic process mu(t) ∼ p(mu(t)|x∗u(t)).
Further  we represent the message times by a set of counting processes. In particular  we denote
the set of counting processes as a vector N (t)  in which the u-th entry  Nu(t) ∈ {0} ∪ Z+  counts
the number of sentiment messages user u posted up to but not including time t. Then  we can
characterize the message rate of the users using their corresponding conditional intensities as

E[dN (t)|H(t)] = λ∗(t) dt 
(2)
where dN (t) := ( dNu(t) )u∈V
denotes the number of messages per user in the window [t  t + dt)
and λ∗(t) := ( λ∗u(t) )u∈V denotes the associated user intensities  which may depend on the history
H(t). We denote the set of user that u follows by N (u). Next  we specify the the intensity functions
λ∗(t)  the dynamics of the users’ opinions x∗(t)  and the sentiment distribution p(m|x∗u(t)).

2

constant  i.e.  λ∗u(t) = µu.

Intensity for messages. There is a wide variety of message intensity functions one can choose from
to model the users’ intensity λ∗(t) [1]. In this work  we consider two of the most popular functional
forms used in the growing literature on social activity modeling using point processes [10  24  5]:
I. Poisson process. The intensity is assumed to be independent of the history H(t) and
II. Multivariate Hawkes processes. The intensity captures a mutual excitation pheno-
mena between message events and depends on the whole history of message events
∪v∈{u∪N (u)}Hv(t) before t:
λ∗u(t) = µu + (cid:88)v∈u∪N (u)

κ(t− ti) = µu + (cid:88)v∈u∪N (u)

bvu (cid:88)ei∈Hv(t)

bvu (κ(t) (cid:63) dNv(t))  (3)

where the ﬁrst term  µu (cid:62) 0  models the publication of messages by user u on her own
initiative  and the second term  with bvu (cid:62) 0  models the publication of additional messages
by user u due to the inﬂuence that previous messages posted by the users she follows have
on her intensity. Here  κ(t) = e−νt is an exponential triggering kernel modeling the decay
of inﬂuence of the past events over time and (cid:63) denotes the convolution operation.

In both cases  the couple (N (t)  λ∗(t)) is a Markov process  i.e.  future states of the process (condi-
tional on past and present states) depends only upon the present state  and we can express the users’
intensity more compactly using the following jump stochastic differential equation (SDE):

dλ∗(t) = ν(µ − λ∗(t))dt + BdN (t) 

avu (cid:88)ei∈Hv(t)

where the initial condition is λ∗(0) = µ. The Markov property will become important later.
Stochastic process for opinion. The opinion x∗u(t) of a user u at time t adopts the following form:
(4)

x∗u(t) = αu + (cid:88)v∈N (u)
where the ﬁrst term  αu ∈ R  models the original opinion a user u starts with  the second term 
with avu ∈ R  models updates in user u’s opinion due to the inﬂuence that previous messages with
opinions mi posted by the users that u follows has on her opinion. Here  g(t) = e−ωt (where
ω (cid:62) 0) denotes an exponential triggering kernel  which models the decay of inﬂuence over time.
The greater the value of ω  the greater the user’s tendency to retain her own opinion αu. Under this
form  the resulting opinion dynamics are Markovian and can be compactly represented by a set of
coupled marked jumped stochastic differential equations (proven in Appendix A):

mig(t − ti) = αu + (cid:88)v∈N (u)

avu (g(t) (cid:63) (mv(t)dNv(t))) 

Proposition 1 The tuple (x∗(t)  λ∗(t)  N (t)) is a Markov process  whose dynamics are deﬁned by
the following marked jumped stochastic differential equations (SDE):

  with mu(t) ∼ p(m|x∗u(t))  and the sign (cid:12) denotes pointwise product.

dx∗(t) = ω(α − x∗(t))dt + A(m(t) (cid:12) dN (t))
dλ∗(t) = ν(µ − λ∗(t))dt + B dN (t)

(5)
(6)
where the initial conditions are λ∗(0) = µ and x∗(0) = α  the marks are the sentiment messages
m(t) = ( mu(t) )u∈V
The above mentioned Markov property will be the key to the design of efﬁcient model parameter
estimation and model simulation algorithms.
Sentiment distribution. The particular choice of sentiment distribution p(m|x∗u(t)) depends on the
recorded marks. For example  one may consider:
I. Gaussian Distribution The sentiment is assumed to be a real random variable m ∈ R  i.e. 
p(m|xu(t)) = N (xu(t)  σu). This ﬁts well scenarios in which sentiment is extracted from
text using sentiment analysis [13].
II. Logistic. The sentiment is assumed to be a binary random variable m ∈ {−1  1}  i.e. 
p(m|xu(t)) = 1/(1 + exp(−m · xu(t))). This ﬁts well scenarios in which sentiment is
measured by means of up votes  down votes or likes.
Our model estimation method can be easily adapted to any log-concave sentiment distribution. How-
ever  in the remainder of the paper  we consider the Gaussian distribution since  in our experiments 
sentiment is extracted from text using sentiment analysis.

3

2.1 Model parameter estimation
Given a collection of messages H(T ) = {(ui  mi  ti)} recorded during a time period [0  T ) in
a social network G = (V E)  we can ﬁnd the optimal parameters α  µ  A and B by solving a
maximum likelihood estimation (MLE) problem4. To do so  it is easy to show that the log-likelihood
of the messages is given by
L(α  µ  A  B) = (cid:88)ei∈H(T )

log λ∗ui(ti) −(cid:88)u∈V(cid:90) T

λ∗u(τ ) dτ

0

.

(7)

(cid:124)

message sentiments

+ (cid:88)ei∈H(T )
(cid:124)

log p(mi|x∗ui(ti))
(cid:125)
(cid:123)(cid:122)
maximize
α µ≥0 A B≥0 L(α  µ  A  B).

Then  we can ﬁnd the optimal parameters (α  µ  A  B) using MLE as

message times

(cid:123)(cid:122)

(cid:125)

(8)

Note that  as long as the sentiment distributions are log-concave  the MLE problem above is con-
cave and thus can be solved efﬁciently. Moreover  the problem decomposes in 2|V| independent
subproblems  two per user u  since the ﬁrst term in Eq. 7 only depends on (α  A) whereas the last
two terms only depend on (µ  B)  and thus can be readily parallelized. Then  we ﬁnd (µ∗  B∗) us-
ing spectral projected gradient descent [4]  which works well in practice and achieves ε accuracy in
O(log(1/ε)) iterations  and ﬁnd (α∗  A∗) analytically  since  for Gaussian sentiment distributions 
the problem reduces to a least-square problem. Fortunately  in each subproblem  we can use the
Markov property from Proposition 1 to precompute the sums and integrals in (8) in linear time  i.e. 
O(|Hu(T )| + | ∪v∈N (u) Hv(T )|). Appendix H summarizes the overall estimation algorithm.
2.2 Model simulation
We leverage the efﬁcient sampling algorithm for multivariate Hawkes introduced by Farajtabar et
al. [11] to design a scalable algorithm to sample opinions from our model. The two key ideas that
allow us to adapt the procedure by Farajtabar et al. to our model of opinion dynamics  while keeping
its efﬁciency  are as follows: (i) the opinion dynamics  deﬁned by Eqs. 5 and 6  are Markovian and
thus we can update individual intensities and opinions in O(1) – let ti and ti+1 be two consecutive
events  then  we can compute λ∗(ti+1) as (λ∗(ti) − µ) exp(−ν(ti+1 − ti)) + µ and x∗(ti+1) as
(x∗(ti) − α) exp(−ω(ti+1 − ti)) + α  respectively; and  (ii) social networks are typically sparse
and thus both A and B are also sparse  then  whenever a node expresses its opinion  only a small
number of opinions and intensity functions in its local neighborhood will change. As a consequence 
we can reuse the majority of samples from the intensity functions and sentiment distributions for the
next new sample. Appendix I summarizes the overall simulation algorithm.

3 Opinion forecasting
Our goal here is developing efﬁcient methods that leverage our model to forecast a user u’s
In the context of our proba-
opinion xu(t) at time t given the history H(t0) up to time t0<t.
bilistic model  we will forecast this opinion by efﬁciently computing the conditional expectation
E
H(t)\H(t0)[x∗u(t)|H(t0)]  where H(t)\H(t0) denotes the average across histories from t0 to t 
while conditioning on the history up to H(t0).
To this aim  we will develop analytical and sampling based methods to compute the above con-
ditional expectation. Moreover  we will use the former to identify under which conditions users’
average opinion converges to a steady state and  if so  ﬁnd the steady state opinion. In this section 
we write Ht = H(t) to lighten the notation and denote the eigenvalues of a matrix X by ξ(X).
3.1 Analytical forecasting
In this section  we derive a set of formulas to compute the conditional expectation for both Poisson
and Hawkes messages intensities. However  since the derivation of such formulas for general mul-
tivariate Hawkes is difﬁcult  we focus here on the case when bvu = 0 for all v  u ∈ G  v (cid:54)= u  and
rely on the efﬁcient sampling based method for the general case.
I. Poisson intensity. Consider each user’s messages follow a Poisson process with rate µu. Then 
the conditional average opinion is given by (proven in Appendix C):

4Here  if one decides to model the message intensities with a Poisson process  B = 0.

4

E
Ht\Ht0

Theorem 2 Given a collection of messages Ht0 recorded during a time period [0  t0) and λ∗u(t) =
µu for all u ∈ G  then 
[x∗(t)|Ht0] = e(AΛ1−ωI)(t−t0)x(t0) + ω(AΛ1 − ωI)−1(cid:16)e(AΛ1−ωI)(t−t0) − I(cid:17) α 
where Λ1 := diag[µ] and (x(t0))u∈V = αu +(cid:80)v∈N (u) auv(cid:80)ti∈Hv(t0) e−ω(t0−ti)mv(ti).

Remarkably  we can efﬁciently compute both terms in Eq. 9 by using the iterative algorithm by Al-
Mohy et al. [2] for the matrix exponentials and the well-known GMRES method [23] for the matrix
inversion. Given this predictive formula  we can easily study the stability condition and  for stable
systems  ﬁnd the steady state conditional average opinion (proven in Appendix D):
Theorem 3 Given the conditions of Theorem 2  if Re[ξ(AΛ1)] < ω  then 

(9)

E
Ht\Ht0

lim
t→∞

[x∗(t)|Ht0] =(cid:18)I −

AΛ1

w (cid:19)−1

α.

(10)

The above results indicate that the conditional average opinions are nonlinearly related to the para-
meter matrix A  which depends on the network structure  and the message rates µ  which in this case
are assumed to be constant and independent on the network structure. Figure 1 provides empirical
evidence of these results.
II. Multivariate Hawkes Process. Consider each user’s messages follow a multivariate Hawkes
process  given by Eq. 3  and bvu = 0 for all v  u ∈ G  v (cid:54)= u. Then  the conditional average opinion
is given by (proven in Appendix E):
Theorem 4 Given a collection of messages Ht0 recorded during a time period [0  t0) and λ∗u(t) =
µu + buu(cid:80)ei∈Hu(t) e−ν(t−ti) for all u ∈ G  then  the conditional average satisﬁes the following
differential equation:

Ht\Ht0

[x∗(t)|Ht0 ] + ωα 

(11)

dE

Ht\Ht0

Ht\Ht0

[x∗(t)|Ht0]
dt
Λ(t) = diag(cid:16)E

= [−ωI + AΛ(t)]E
[λ∗(t)|Ht0 ](cid:17)  
buv (cid:88)ti∈Hv(t0)
B = diag(cid:0)[b11  . . .   b|V||V|](cid:62)(cid:1) .

[λ∗(t)|Ht0 ] = e(B−νI)(t−t0)η(t0) + ν(B − νI)−1(cid:16)e(B−νI)(t−t0) − I(cid:17) µ ∀t ≥ t0 
(η(t0))u∈V = µu + (cid:88)v∈N (u)

e−ν(t0−ti) 

Here  we can compute the conditional average by solving numerically the differential equation
above  which is not stochastic  where we can efﬁciently compute the vector E
Ht[λ∗(t)] by using
again the algorithm by Al-Mohy et al. [2] and the GMRES method [23].
In this case  the stability condition and the steady state conditional average opinion are given by
(proven in Appendix F):
Theorem 5 Given the conditions of Theorem 4  if the transition matrix Φ(t) associated to the time-
varying linear system described by Eq. 11 satisﬁes that ||Φ(t)|| ≤ γe−ct ∀t > 0  where γ  c > 0 
then 

E
Ht\Ht0

lim
t→∞

[x∗(t)|Ht0 ] =(cid:18)I −

AΛ2

w (cid:19)−1

α 

(12)

where

E
Ht\Ht0

where Λ2 := diag(cid:104)(cid:0)I − B

ν(cid:1)−1 µ(cid:105)

The above results indicate that the conditional average opinions are nonlinearly related to the pa-
rameter matrices A and B. This suggests that the effect of the temporal inﬂuence on the opinion
evolution  by means of the parameter matrix B of the multivariate Hawkes process  is non trivial.
We illustrate this result empirically in Figure 1.

5

Network G1

(cid:80)

P:

u∈V± E[xu (t)]

|V ±|

(cid:80)
u∈V± E[xu(t)]

|V ±|

H:

P: Temporal evolution

H: Temporal evolution

Network G2

(cid:80)

P:

u∈V E[xu (t)]

|V |

(cid:80)
u∈V E[xu (t)]

|V |

H:

P: Temporal evolution

H: Temporal evolution

Figure 1: Opinion dynamics on two 50-node networks G1 (top) and G2 (bottom) for Poisson (P)
and Hawkes (H) message intensities. The ﬁrst column visualizes the two networks and opinion of
each node at t = 0 (positive/negative opinions in red/blue). The second column shows the temporal
evolution of the theoretical and empirical average opinion for Poisson intensities. The third column
shows the temporal evolution of the empirical average opinion for Hawkes intensities  where we
compute the average separately for positive (+) and negative (−) opinions in the steady state. The
fourth and ﬁfth columns shows the polarity of average opinion per user over time.

3.2 Simulation based forecasting
Given the efﬁcient simulation procedure described in Section 2.2  we can readily derive a general
simulation based formula for opinion forecasting:

E
Ht\Ht0

[x∗(t)|Ht0] ≈ ˆx∗(t) =

1
n

n(cid:88)l=1

x∗l (t) 

(13)

where n is the number of times that we simulate the opinion dynamics and x∗l (t) gathers the users’
opinion at time t for the l-th simulation. Moreover  we have the following theoretical guarantee
(proven in Appendix G):
Theorem 6 Simulate the opinion dynamics up to time t > t0 the following number of times:

1
32 (6σ2

(14)

Ht\Ht0

Ht\Ht0

max + 4xmax) log(2/δ) 

max = maxu∈G σ2

[x∗u(t)|Ht0 ]| ≤  with probability at least 1 − δ.

n ≥
where σ2
(x∗u(t)|Ht0) is the maximum variance of the users’ opinions  which
we analyze in Appendix G  and xmax ≥ |xu(t)| ∀u ∈ G is an upper bound on the users’ (absolute)
opinions. Then  for each user u ∈ G  the error between her true and estimated average opinion
satisﬁes that |ˆx∗u(t) − E
4 Experiments
4.1 Experiments on synthetic data
We ﬁrst provide empirical evidence that our model is able to produce different types of opinion
dynamics  which may or may not converge to a steady state of consensus or polarization. Then  we
show that our model estimation and simulation algorithms as well as our predictive formulas scale
to networks with millions of users and events. Appendix J contains an evaluation of the accuracy of
our model parameter estimation method.
Different types of opinion dynamics. We ﬁrst simulate our model on two different small networks
using Poisson intensities  i.e.  λ∗u(t) = µu  µu ∼ U (0  1) ∀u  and then simulate our model on the
same networks while using Hawkes intensities with bvu ∼ U (0  1) on 5% of the nodes  chosen at
random  and the original Poisson intensities on the remaining nodes. Figure 1 summarizes the re-
sults  which show that (i) our model is able to produce opinion dynamics that converge to consensus
(second column) and polarization (third column); (ii) the opinion forecasting formulas described in
Section 3 closely match an simulation based estimation (second column); and  (iii) the evolution of

6

 TimeOpinion-Trajectory→ExperimentalTheoretical0.0050.010.0150.51.5001 TimeOpinion-Trajectory→Hawkes(-)Hawkes(+)0.0050.010.015-4-224000.010.0050.015001020304050TimeNode-ID0.0050.010.015Node-IDTime102030405000 TimeOpinion-Trajectory→ExperimentalTheoretical0.0050.010.015-1.5-0.5-2-100 TimeOpinion-Trajectory→Hawkes(-)Hawkes(+)0.0050.010.015-20-1010203040000.010.0050.015001020304050TimeNode-ID0.0050.010.015Node-IDTime102030405000(c) Forecast vs # nodes

(a) Estimation vs # nodes (b) Simulation vs # nodes
Figure 2: Panels (a) and (b) show running time of our estimation and simulation procedures against
number of nodes  where the average number of events per node is 10. Panels (c) and (d) show the
running time needed to compute our analytical formulas against number of nodes and time horizon
T = t− t0  where the number of nodes is 103. In Panel (c)  T = 6 hours. For all panels  the average
degree per node is 30. The experiments are carried out in a single machine with 24 cores and 64 GB
of main memory.

(d) Forecast vs T

the average opinion and whether opinions converge to a steady state of consensus or polarization
depend on the functional form of message intensity5.
Scalability. Figure 2 shows that our model estimation and simulation algorithms  described in Sec-
tions 2.1 and 2.2  and our analytical predictive formulas  described in Section 3.1  scale to networks
with millions of users and events. For example  our algorithm takes 20 minutes to estimate the
model parameters from 10 million events generated by one million nodes using a single machine
with 24 cores and 64 GB RAM.
4.2 Experiments on real data
We use real data gathered from Twitter to show that our model can forecast users’ opinions more
accurately than six state of the art methods [7  8  9  15  19  26] (see Appendix L).
Experimental Setup. We experimented with ﬁve Twitter datasets about current real-world events
(Politics  Movie  Fight  Bollywood and US)  in which  for each recorded message i  we compute its
sentiment value mi using a popular sentiment analysis toolbox  specially designed for Twitter [13].
Here  the sentiment takes values m ∈ (−1  1) and we consider the sentiment polarity to be simply
sign(m). Appendix K contains further details and statistics about these datasets.
Opinion forecasting. We ﬁrst evaluate the performance of our model at predicting sentiment (ex-
pressed opinion) at a message level. To do so  for each dataset  we ﬁrst estimate the parameters of
our model  SLANT  using messages from a training set containing the (chronologically) ﬁrst 90%
of the messages. Here  we set the decay parameters of the exponential triggering kernels κ(t) and
g(t) by cross-validation. Then  we evaluate the predictive performance of our opinion forecasting
formulas using the last 10% of the messages6. More speciﬁcally  we predict the sentiment value m
for each message posted by user u in the test set given the history up to T hours before the time
of the message as ˆm = EHt\Ht−T [x∗u(t)|Ht−T ]. We compare the performance of our model with
the asynchronous linear model (AsLM) [8]  DeGroot’s model [9]  the voter model [26]  the biased
voter model [7]  the ﬂocking model [15]  and the sentiment prediction method based on collabora-
tive ﬁltering by Kim et al. [19]  in terms of: (i) the mean squared error between the true (m) and the
estimated ( ˆm) sentiment value for all messages in the held-out set  i.e.  E[(m − ˆm)2]  and (ii) the
failure rate  deﬁned as the probability that the true and the estimated polarity do not coincide  i.e. 
P(sign(m) (cid:54)= sign( ˆm)). For the baselines algorithms  which work in discrete time  we simulate NT
rounds in (t − T  t)  where NT is the number of posts in time T . Figure 3 summarizes the results 
which show that: (i) our opinion forecasting formulas consistently outperform others both in terms
of MSE (often by an order of magnitude) and failure rate;7 (ii) its forecasting performance degrades
gracefully with respect to T   in contrast  competing methods often fail catastrophically; and  (iii) it
achieves an additional mileage by using Hawkes processes instead of Poisson processes. To some
extent  we believe SLANT’s superior performance is due to its ability to leverage historical data to
learn its model parameters and then simulate realistic temporal patterns.
Finally  we look at the forecasting results at a network level and show that our forecasting formulas
can also predict the evolution of opinions macroscopically (in terms of the average opinion across
users). Figure 4 summarizes the results for two real world datasets  which show that the forecasted

5For these particular networks  Poisson intensities lead to consensus while Hawkes intensities lead to polarization  however  we did ﬁnd

other examples in which Poisson intensities lead to polarization and Hawkes intensities lead to consensus.

6Here  we do not distinguish between analytical and sampling based forecasting since  in practice  they closely match each other.
7The failure rate is very close to zero for those datasets in which most users post messages with the same polarity.

7

 InformationalTemporalNodesTime(s)10110210310410510610−210−1100101102103104105NodesTime(s)10110210310410510610−210−1101101102103104105 PoissonHawkesNodesTime(s)10210310410510610710−210−1100101102103104105 024568101015PoissonHawkesForecast-Time[T(hr)]Time(s)(a) Politics

(b) Movie

(c) Fight

(d) Bollywood

(e) US

Figure 3: Sentiment prediction performance using a 10% held-out set for each real-world dataset.
Performance is measured in terms of mean squared error (MSE) on the sentiment value  E[(m −
ˆm)2]  and failure rate on the sentiment polarity  P(sign(m) (cid:54)= sign( ˆm)). For each message in the
held-out set  we predict the sentiment value m given the history up to T hours before the time of
the message  for different values of T . Nowcasting corresponds to T = 0 and forecasting to T > 0.
The sentiment value m ∈ (−1  1) and the sentiment polarity sign (m) ∈ {−1  1}.

(a) Tw: Movie (Hawkes)

(b) Tw: Movie (Poisson)

(c) Tw: US (Hawkes)

(d) Tw: US (Poisson)

Figure 4: Macroscopic sentiment prediction given by our model for two real-world datasets. The
panels show the observed sentiment ¯m(t) (in blue  running average)  inferred opinion ¯x(t) on the
training set (in red)  and forecasted opinion E
Ht\Ht−T [xu(t)|Ht−T ] for T = 1  3  and 5 hours on
the test set (in black  green and gray  respectively)  where the symbol ¯ denotes average across users.
opinions become less accurate as the time T becomes larger  since the average is computed on longer
time periods. As expected  our model is more accurate when the message intensities are modeled
using multivariate Hawkes. We found qualitatively similar results for the remaining datasets.
5 Conclusions
We proposed a modeling framework of opinion dynamics  whose key innovation is modeling users’
latent opinions as continuous-time stochastic processes driven by a set of marked jump stochastic
differential equations (SDEs) [14]. Such construction allows each user’s latent opinion to be modu-
lated over time by the opinions asynchronously expressed by her neighbors as sentiment messages.
We then exploited a key property of our model  the Markov property  to design efﬁcient parameter
estimation and simulation algorithms  which scale to networks with millions of nodes. Moreover  we
derived a set of novel predictive formulas for efﬁcient and accurate opinion forecasting and identiﬁed
conditions under which opinions converge to a steady state of consensus or polarization. Finally  we
experimented with real data gathered from Twitter and showed that our framework achieves more
accurate opinion forecasting than state-of-the-arts.
Our model opens up many interesting venues for future work. For example  in Eq. 4  our model
assumes a linear dependence between users’ opinions  however  in some scenarios  this may be a
coarse approximation. A natural follow-up to improve the opinion forecasting accuracy would be
considering nonlinear dependences between opinions. It would be interesting to augment our model
to jointly consider correlations between different topics. One could leverage our modeling frame-
work to design opinion shaping algorithms based on stochastic optimal control [14  25]. Finally  one
of the key modeling ideas is realizing that users’ expressed opinions (be it in the form of thumbs
up/down or text sentiment) can be viewed as noisy discrete samples of the users’ latent opinion lo-
calized in time. It would be very interesting to generalize this idea to any type of event data and
derive sampling theorems and conditions under which an underlying general continuous signal of
interest (be it user’s opinion or expertise) can be recovered from event data with provable guaran-
tees.
Acknowledgement: Abir De is partially supported by Google India under the Google India PhD Fellowship
Award  and Isabel Valera is supported by a Humboldt post-doctoral fellowship.

8

 Collab-FilterFlockingBiasedVoterLinearVoterDeGrootSLANT(P)SLANT(H)0246810T hoursMSE10−210−11001010246810T hours0246810T hours0246810T hours0246810T hours0012468100.20.40.60.8T hoursFailure-Rate0246810T hours0246810T hours0246810T hours0246810T hours 0.40.50.60.70.8¯m(t)¯x(t)T=1hT=3hT=5hTimeAverageOpinion→28April2May5May 0.40.50.60.70.8¯m(t)¯x(t)T=1hT=3hT=5hTimeAverageOpinion→28April2May5May -0.4-0.20.20.40.60.8¯m(t)¯x(t)T=1hT=3hT=5hTimeAverageOpinion→7April10April13April0 -0.4-0.20.20.40.60.8¯m(t)¯x(t)T=1hT=3hT=5hTimeAverageOpinion→7April10April13April0References
[1] O. Aalen  Ø. Borgan  and H. Gjessing. Survival and event history analysis: a process point of view.

Springer Verlag  2008.

[2] A. H. Al-Mohy and N. J. Higham. Computing the action of the matrix exponential  with an application

to exponential integrators. SIAM journal on scientiﬁc computing  33(2):488–511  2011.

[3] R. Axelrod. The dissemination of culture a model with local convergence and global polarization. Journal

of conﬂict resolution  41(2):203–226  1997.

[4] E. G. Birgin  J. M. Mart´ınez  and M. Raydan. Nonmonotone spectral projected gradient methods on

convex sets. SIAM Journal on Optimization  10(4)  2000.

[5] C. Blundell  J. Beck  and K. A. Heller. Modelling reciprocating relationships with hawkes processes. In

Advances in Neural Information Processing Systems  pages 2600–2608  2012.

[6] P. Clifford and A. Sudbury. A model for spatial conﬂict. Biometrika  60(3):581–588  1973.

[7] A. Das  S. Gollapudi  and K. Munagala. Modeling opinion dynamics in social networks. In WSDM  2014.

[8] A. De  S. Bhattacharya  P. Bhattacharya  N. Ganguly  and S. Chakrabarti. Learning a linear inﬂuence

model from transient opinion dynamics. In CIKM  2014.

[9] M. H. DeGroot. Reaching a consensus. Journal of the American Statistical Association  69(345)  1974.

[10] M. Farajtabar  N. Du  M. Gomez-Rodriguez  I. Valera  L. Song  and H. Zha. Shaping social activity by

incentivizing users. In NIPS  2014.

[11] M. Farajtabar  Y. Wang  M. Gomez-Rodriguez  S. Li  H. Zha  and L. Song. Coevolve: A joint point

process model for information diffusion and network co-evolution. In NIPS  2015.

[12] M. Gomez-Rodriguez  D. Balduzzi  and B. Sch¨olkopf. Uncovering the Temporal Dynamics of Diffusion

Networks. In ICML  2011.

[13] A. Hannak  E. Anderson  L. F. Barrett  S. Lehmann  A. Mislove  and M. Riedewald. Tweetin’in the rain:

Exploring societal-scale effects of weather on mood. In ICWSM  2012.

[14] F. B. Hanson. Applied Stochastic Processes and Control for Jump-Diffusions. SIAM  2007.

[15] R. Hegselmann and U. Krause. Opinion dynamics and bounded conﬁdence models  analysis  and simu-

lation. Journal of Artiﬁcial Societies and Social Simulation  5(3)  2002.

[16] D. Hinrichsen  A. Ilchmann  and A. Pritchard. Robustness of stability of time-varying linear systems.

Journal of Differential Equations  82(2):219 – 250  1989.

[17] P. Holme and M. E. Newman. Nonequilibrium phase transition in the coevolution of networks and opin-

ions. Physical Review E  74(5):056108  2006.

[18] T. Karppi and K. Crawford. Social media  ﬁnancial algorithms and the hack crash. TC&S  2015.

[19] J. Kim  J.-B. Yoo  H. Lim  H. Qiu  Z. Kozareva  and A. Galstyan. Sentiment prediction using collaborative

ﬁltering. In ICWSM  2013.

[20] J. Leskovec  D. Chakrabarti  J. M. Kleinberg  C. Faloutsos  and Z. Ghahramani. Kronecker graphs: An

approach to modeling networks. JMLR  2010.

[21] B. Pang and L. Lee. Opinion mining and sentiment analysis. F&T in information retrieval  2(1-2)  2008.

[22] B. H. Raven. The bases of power: Origins and recent developments. Journal of social issues  49(4)  1993.

[23] Y. Saad and M. H. Schultz. Gmres: A generalized minimal residual algorithm for solving nonsymmetric

linear systems. SIAM Journal on scientiﬁc and statistical computing  7(3):856–869  1986.

[24] I. Valera and M. Gomez-Rodriguez. Modeling adoption and usage of competing products. In Proceedings

of the 2015 IEEE International Conference on Data Mining  2015.

[25] Y. Wang  E. Theodorou  A. Verma  and L. Song. Steering opinion dynamics in information diffusion

networks. arXiv preprint arXiv:1603.09021  2016.

[26] M. E. Yildiz  R. Pagliari  A. Ozdaglar  and A. Scaglione. Voting models in random networks. In Infor-

mation Theory and Applications Workshop  pages 1–7  2010.

9

,Jason Lee
Ran Gilad-Bachrach
Rich Caruana
Abir De
Isabel Valera
Niloy Ganguly
Sourangshu Bhattacharya
Manuel Gomez Rodriguez