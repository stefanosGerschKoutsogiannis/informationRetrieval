2017,Nonbacktracking Bounds on the Influence in Independent Cascade Models,This paper develops upper and lower bounds on the influence measure in a network  more precisely  the expected number of nodes that a seed set can influence in the independent cascade model. In particular  our bounds exploit nonbacktracking walks  Fortuin-Kasteleyn-Ginibre type inequalities  and are computed by message passing algorithms. Nonbacktracking walks have recently allowed for headways in community detection  and this paper shows that their use can also impact the influence computation. Further  we provide parameterized versions of the bounds that control the trade-off between the efficiency and the accuracy. Finally  the tightness of the bounds is illustrated with simulations on various network models.,Nonbacktracking Bounds on the Inﬂuence in

Independent Cascade Models

1Program in Applied and Computational Mathematics 2The Department of Electrical Engineering

Emmanuel Abbe1 2 Sanjeev Kulkarni2 Eun Jee Lee1

Princeton University

{eabbe  kulkarni  ejlee}@princeton.edu

Abstract

This paper develops upper and lower bounds on the inﬂuence measure in a network 
more precisely  the expected number of nodes that a seed set can inﬂuence in the
independent cascade model. In particular  our bounds exploit nonbacktracking
walks  Fortuin–Kasteleyn–Ginibre type inequalities  and are computed by message
passing algorithms. Nonbacktracking walks have recently allowed for headways
in community detection  and this paper shows that their use can also impact the
inﬂuence computation. Further  we provide parameterized versions of the bounds
that control the trade-off between the efﬁciency and the accuracy. Finally  the
tightness of the bounds is illustrated with simulations on various network models.

1

Introduction

Inﬂuence propagation is concerned with the diffusion of information from initially inﬂuenced nodes 
called seeds  in a network. Understanding how information propagates in networks has become
a central problem in a broad range of ﬁelds  such as viral marketing [18]  sociology [9  20  24] 
communication [13]  epidemiology [21]  and social network analysis [25].
One of the most fundamental questions on inﬂuence propagation is to estimate the inﬂuence  i.e. the
expected number of inﬂuenced nodes at the end of the propagation given a set of seeds. Estimating
the inﬂuence is central to diverse research problems related to inﬂuence propagation  such as the
widely-known inﬂuence maximization problem — ﬁnding a set of k nodes that maximizes the
inﬂuence.
Recent studies on inﬂuence propagation have proposed various algorithms [12  19  4  8  23  22] for
the inﬂuence maximization problem while using Monte Carlo (MC) simulations to approximate the
inﬂuence. The submodularity argument and the probabilistic error bound on MC give a probabilistic
lower bound on the inﬂuence that is obtainable by the algorithms in terms of the true maximum
inﬂuence. Despite its beneﬁts on the inﬂuence maximization problem  approximating the inﬂuence
via MC simulations is far from ideal for large networks; in particular  MC may require a large amount
of computations in order to stabilize the approximation.
To overcome the limitations of Monte Carlo simulations  many researchers have been taking both
algorithmic and theoretical approaches to approximate the inﬂuence of given seeds in a network.
Chen and Teng [3] provided a probabilistic guarantee on estimating the inﬂuence of a single seed with
a relative error bound with the expected running time O((cid:96)(|V | + |E|)|V | log |V |/ε2)  such that with
probability 1 − 1/n(cid:96)  for all node v  the computed inﬂuence of v has relative error at most ε. Draief
et al.  [6] introduced an upper bound for the inﬂuence by using the spectral radius of the adjacency
matrix. Tighter upper bounds were later suggested in [17] which relate the ratio of inﬂuenced nodes
in a network to the spectral radius of the so-called Hazard matrix. Further  improved upper bounds
which account for sensitive edges were introduced in [16].

31st Conference on Neural Information Processing Systems (NIPS 2017)  Long Beach  CA  USA.

In contrast  there has been little work on ﬁnding a tight lower bound for the inﬂuence. An exception
is a work by Khim et al. [14]  where the lower bound is obtained by only considering the inﬂuence
through the maximal-weighted paths.
In this paper  we propose both upper and lower bounds on the inﬂuence using nonbacktracking walks
and Fortuin–Kasteleyn–Ginibre (FKG) type inequalities. The bounds can be efﬁciently obtained by
message passing implementation. This shows that nonbacktracking walks can also impact inﬂuence
propagation  making another case for the use of nonbacktracking walks in graphical model problems
as in [15  10  2  1]  discussed later in the paper. Further  we provide a parametrized version of the
bounds that can adjust the trade-off between the efﬁciency and the accuracy of the bounds.

2 Background

(cid:88)

We introduce here the independent cascade model and provide background for the main results.
Deﬁnition 1 (Independent Cascade Model). Consider a directed graph G = (V  E) where |V | = n 
a transmission probability matrix P ∈ [0  1]n×n  and a seed set S0 ⊆ V . For all u ∈ V   let N +(u)
be the set of out-neighbors of node u. The independent cascade model IC(G P  S0) sequentially
generates the inﬂuenced set St ⊆ V for each discrete time t ≥ 1 as follows. At time t  St is initialized
to be an empty set. Then  each node u ∈ St−1 attempts to inﬂuence v ∈ N +(u)\∪t−1
i=0Si with
probability Puv  i.e. node u inﬂuences its uninﬂuenced out-neighbor v with probability Puv. If v is
inﬂuenced at time t  add v to St. The process stops at T if ST = ∅ at the end of the step t = T . The
set of the inﬂuenced nodes at the end of propagation is deﬁned as S = ∪T−1
We often refer an edge (u  v) being open if node u inﬂuences node v. The IC model is equivalent
to the live-arc graph model  where the inﬂuence happens at once  rather than sequentially. The
live-arc graph model ﬁrst decides the state of every edge with a Bernoulli trial  i.e. edge (u  v) is
open independently with probability Puv and closed  otherwise. Then  the set of inﬂuenced nodes is
deﬁned as the nodes that are reachable from at least one of the seeds by the open edges.
Deﬁnition 2 (Inﬂuence). The expected number of nodes that are inﬂuenced at the end of the prop-
agation process is called the inﬂuence (rather than the expected inﬂuence  with a slight abuse of
terminology) of IC(G P  S0)  and is deﬁned as

i=0 St.

σ(S0) =

P(v is inﬂuenced).

(1)
v∈V
It is shown in [5] that computing the inﬂuence σ(S0) in the independent cascade model IC(G P  S0)
is #P-hard  even with a single seed  i.e. |S0| = 1.
Next  we deﬁne nonbacktracking (NB) walks on a directed graph. Nonbacktracking walks have
already been used for studying the characteristics of networks. To the best of our knowledge  the use
of NB walks in the context of epidemics was ﬁrst introduced in the paper of Karrer et al. [11] and
later applied to percolation in [10]. In particular  Karrer et al. reformulate the spread of inﬂuence as a
message passing process and demonstrate how the resulting equations can be used to calculate an
upper bound on the number of nodes that are susceptible at a given time. As we shall see  we take a
different approach to the use of the NB walks  which focuses on the effective contribution of a node
in inﬂuencing another node and accumulates such contributions to obtain upper and lower bounds.
More recently  nonbacktracking walks are used for community detection [15  2  1].
Deﬁnition 3 (Nonbacktracking Walk). Let G = (V  E) be a directed graph. A nonbacktracking walk
of length k is deﬁned as w(k) = (v0  v1  . . .   vk)  where vi ∈ V and (vi−1  vi) ∈ E for all i ∈ [k] 
and vi−1 (cid:54)= vi+1 for all i ∈ [k − 1].
We next recall a key inequality introduced by Fortuin et. al [7].
Theorem 1 (FKG Inequality). Let (Γ ≺) be a distributive lattice  where Γ is a ﬁnite partially ordered
set  ordered by ≺  and let µ be a positive measure on Γ satisfying the following condition: for all
x  y ∈ Γ 

µ(x ∧ y)µ(x ∨ y) ≥ µ(x)µ(y) 

where x ∧ y = max{z ∈ Γ : z (cid:22) x  z (cid:22) y} and x ∨ y = min{z ∈ Γ : y (cid:22) z  y (cid:22) z}. Let f and g
be both increasing (or both decreasing) functions on Γ. Then 

µ(x))(

f (x)g(x)µ(x)) ≥ (

f (x)µ(x))(

g(x)µ(x)).

(2)

(cid:88)

(
x∈Γ

(cid:88)

x∈Γ

(cid:88)

x∈Γ

(cid:88)

x∈Γ

2

FKG inequality is instrumental in studying inﬂuence propagation since the probability that a node is
inﬂuenced is nondecreasing with respect to the partial order of random variables describing the states 
open or closed  of the edges.

3 Nonbacktracking bounds on the inﬂuence

In this section  we present upper and lower bounds on the inﬂuence in the independent cascade model
and explain the motivations and intuitions of the bounds. The bounds utilize nonbacktracking walks
and FKG inequalities and are computed efﬁciently by message passing algorithms. In particular 
the upper bound on a network based on a graph G(V  E) runs in O(|V |2 + |V ||E|) and the lower
bound runs in O(|V | + |E|)  whereas Monte Carlo simulation would require O(|V |3 + |V |2|E|)
computations without knowing the variance of the inﬂuence  which is harder to estimate than the
inﬂuence. The reason for the large computational complexity of MC is that in order to ensure
that the standard error of the estimation does not grow with respect to |V |  MC requires O(|V |2)
computations. Hence  for large networks  where MC may not be feasible  our algorithms can still
provide bounds on the inﬂuence.
Furthermore  from the proposed upper σ+ and lower bounds σ−  we can compute an upper bound on
the variance given by (σ+ − σ−)2/4. This could be used to estimate the number of computations
needed by MC. Computing the upper bound on the variance with the proposed bounds can be done in
O(|V |2 +|V ||E|)  whereas computing the variance with MC simulation requires O(|V |5 +|V |4|E|).

3.1 Nonbacktracking upper bounds (NB-UB)
We start by deﬁning the following terms for the independent cascade model IC(G P  S0)  where
G = (V  E) and |V | = n.
Deﬁnition 4. For any v ∈ V   we deﬁne the set of in-neighbors N−(v) = {u ∈ V : (u  v) ∈ E} and
the set of out-neighbors N +(v) = {u ∈ V : (v  u) ∈ E}.
Deﬁnition 5. For any v ∈ V and l ∈ [n − 1]  the set Pl(S0→ v) is deﬁned as the set of all paths
with length l from any seed s ∈ S0 to v. We call a path P is open iff every edge in P is open. For
l = 0  we deﬁne P0(S0→ v) as the set (of size one) of the zero-length path containing node v and
assume the path P ∈ P0(S0→ v) is open iff v ∈ S0.
Deﬁnition 6. For any v ∈ V and l ∈ {0  . . .   n − 1}  we deﬁne

p(v) = P(v is inﬂuenced)
pl(v) = P(∪P∈Pl(S0→v){P is open})

pl(u→ v) = P(∪P∈Pl(S0→u) P(cid:54)∈v{P is open and edge (u  v) is open})

(3)
(4)
(5)

In other words  pl(v) is the probability that node v is inﬂuenced by open paths of length l  i.e. there
exists an open path of length l from a seed to v  and pl(u→ v) is the probability that v is inﬂuenced
by node u with open paths of length l + 1  i.e. there exists an open path of length l + 1 from a seed to
v that ends with edge (u  v).
Lemma 1. For any v ∈ V  

For any v ∈ V and l ∈ [n − 1] 

p(v) ≤ 1 − n−1(cid:89)
pl(v) ≤ 1 − (cid:89)

l=0

(1 − pl(v)).

(6)

(7)

(1 − pl−1(u→ v)).

u∈N−(v)

Lemma 1  which can be proved by FKG inequalities  suggests that given pl−1(u → v)  we may
compute an upper bound on the inﬂuence. Ideally  pl−1(u→ v) can be computed by considering all
paths that end with (u  v) having length l. However  this results in exponential complexity O(nl) 
as l goes up to n − 1. Thus  we present an efﬁcient way to compute an upper bound UBl−1(u→ v)
on pl−1(u→ v)  which in turns gives an upper bound UBl(v) on pl(v)  with the following recursion
formula.

3

Deﬁnition 7. For all l ∈ {0  . . .   n−1} and u  v ∈ V such that (u  v) ∈ E  UBl(u) ∈ [0  1] and
UBl(u→ v) ∈ [0  1] are deﬁned recursively as follows.
Initial condition: For every s∈ S0  s+∈ N +(s)  u∈ V \S0  and v∈ N +(u) 

UB0(s) = 1  UB0(s→ s+) = Pss+
UB0(u) = 0  UB0(u→ v) = 0.

(8)
(9)
Recursion: For every l∈ [n−1]  s∈ S0  s+∈ N +(s)  s−∈ N−(s)  u∈ V \S0  and v∈ N +(u)\S0 
(10)
(11)

UBl(s) = 0  UBl(s→ s+) = 0  UBl(s−→ s) = 0

UBl(u) = 1 − (cid:89)

w∈N−(u)

(1 − UBl−1(w→ u))

(cid:40)Puv(1 − 1−UBl(u)

1−UBl−1(v→u) ) 

PuvUBl(u) 

UBl(u→ v) =

if v∈ N−(u)
otherwise.

(12)

Equation (10) follows from that for any seed node s ∈ S0 and for all l > 0  the probabilities
pl(s) = 0  pl(s → s+) = 0  and pl(s− → s) = 0. A naive way to compute UBl(u → v) is
UBl(u→ v) = PuvUBl−1(u)  but this results in an extremely loose bound due to the backtracking.
For a tighter bound  we use nonbacktracking in Equation (12)  i.e. when computing UBl(u→ v)  we
ignore the contribution of UBl−1(v→ u).
Theorem 2. For any independent cascade model IC(G P  S0) 

σ(S0) ≤ (cid:88)

(1 − n−1(cid:89)

v∈V

l=0

(1 − UBl(v))) =: σ+(S0) 

(13)

where UBl(v) is obtained recursively as in Deﬁnition 7.

Next  we present Nonbacktracking Upper Bound (NB-UB) algorithm which computes UBl(v) and
UBl(u→ v) by message passing. At the l-th iteration  the variables in NB-UB represent as follows.
· Sl is the set of nodes that are processed at the l-th iteration.
· Mcurr(v) = {(u  UBl−1(u → v)) : u is an in-neighbor of v  and u ∈ Sl−1} is the set of pairs
(previously processed in-neighbor u of v  incoming message from u to v).
· MSrc(v) = {u : u is a in-neighbor of v  and u ∈ Sl−1} is the set of in-neighbor nodes of v that
were processed at the previous step.
· Mcurr(v)[u] = UBl−1(u→ v) is the incoming message from u to v.
· Mnext(v) = {(u  UBl(u → v)) : u is an in-neighbor of v  and u ∈ Sl} is the set of pairs (cur-
rently processed in-neighbor u  next iteration’s incoming message from u to v).

Algorithm 1 Nonbacktracking Upper Bound (NB-UB)

Initialize: UBl(v) = 0 for all 0 ≤ l ≤ n − 1 and v ∈ V
Initialize: Insert (s  1) to Mnext(s) for all s ∈ S0
for l = 0 to n − 1 do

for u ∈ Sl do

for u ∈ Sl do

Mcurr(u) = Mnext(u) and Clear Mnext(u)
UBl(u) = ProcessIncomingMsgUB(Mcurr(u))
for v ∈ N +(u) \ S0 do
Sl+1.insert(v)
if v ∈ MSrc(u) then

else

UBl(u→ v) = GenerateOutgoingMsgUB(Mcurr(u)[v]  UBl(u) Puv)
Mnext(v).insert((u  UBl(u→ v))).
UBl(u→ v) = GenerateOutgoingMsgUB(0  UBl(u) Puv)
Mnext(v).insert((u  UBl(u→ v))).

Output: UBl(u) for all l  u

4

At the beginning  every seed node s ∈ S0 is initialized such that Mcurr(s) = {(s  1)} in order to
satisfy the initial condition  UB0(s) = 1. For each l-th iteration  every node u in Sl is processed as
follows. First  ProcessIncomingMsgUB(Mcurr(u)) computes UBl(u) as in Equation (11). Second  u
passes a message to its neighbor v ∈ N +(u) \ S0 along the edge (u  v)  and v stores (inserts) the
message in Mnext(v) for the next iteration. The message contains 1) the source of the message  u  and
2) UBl(u→ v)  which is computed as in Equation (12)  by the function GenerateOutgoingMsgUB.
Finally  the algorithm outputs UBl(u) for all u ∈ V and l ∈ {0  . . .   n−1}  and the upper bound
σ+(S0) is computed by Equation (13). The description of how the algorithm runs on a small network
can be found in the supplementary material.
Computational complexity: Notice that for each iteration l ∈ {0  . . .   n − 1}  the algorithm
accesses at most n nodes  and for each node v  the functions ProcessIncomingMsgUB and
GenerateOutgoingMsgUB are computed in O(deg(v)) and O(1)  respectively. Therefore  the worst
case computational complexity is O(|V |2 + |V ||E|).

3.2 Nonbacktracking lower bounds (NB-LB)
A naive way to compute a lower bound on the inﬂuence in a network IC(G P  S0) is to reduce the
network to a (spanning) tree network  by removing edges. Then  since there is a unique path from
a node to another  we can compute the inﬂuence of the tree network  which is a lower bound on
the inﬂuence in the original network  in O(|V |). We take this approach of generating a subnetwork
from the original network  yet we avoid the signiﬁcant gap between the bound and the inﬂuence by
considering the following directed acyclic subnetwork  in which there is no backtracking walk.
Deﬁnition 8 (Min-distance Directed Acyclic Subnetwork). Consider an independent cascade model
IC(G P  S0) with G = (V  E) and |V | = n. Let d(S0  v) := mins∈S0 d(s  v)  i.e.
the mini-
mum distance from a seed in S0 to v. A minimum-distance directed acyclic subnetwork (MDAS) 
IC(G(cid:48) P(cid:48)  S0)  where G(cid:48) = (V (cid:48)  E(cid:48))  is obtained as follows.
· V (cid:48) = {v1  ...  vn} is an ordered set of nodes such that d(S0  vi) ≤ d(S0  vj)  for every i < j.
· E(cid:48) = {(vi  vj) ∈ E : i < j}  i.e. E(cid:48) is obtained from E by removing edges whose source node
comes later in the order than its destination node.
· P(cid:48)
If there are multiple ordered sets of vertices satisfying the condition  we may choose one arbitrarily.
For any k ∈ [n]  let p(vk) be the probability that vk ∈ V (cid:48) is inﬂuenced in the MDAS  IC(G(cid:48) P(cid:48)  S0).
Since p(vk) is equivalent to the probability of the union of the events that an in-neighbor ui ∈ N−(vk)
inﬂuences vk  p(vk) can be computed by the principle of inclusion and exclusion. Thus  we may
compute a lower bound on p(vk)  using Bonferroni inequalities  if we know the probabilities that
in-neighbors u and v both inﬂuences vk  for every pair u  v ∈ N−(vk). However  computing such
probabilities can take O(kk). Hence  we present LB(vk) which efﬁciently computes a lower bound
on p(vk) by the following recursion.
Deﬁnition 9. For all vk ∈ V (cid:48)  LB(vk) ∈ [0  1] is deﬁned by the recursion on k as follows.
Initial condition: For every vs ∈ S0 
Recursion: For every vk ∈ V (cid:48) \ S0 

= Pvivj   if (vi  vj) ∈ E(cid:48)  and P(cid:48)

= 0  otherwise.

(14)

vivj

vivj

LB(vk) =

m∗(cid:88)

LB(vs) = 1.

P(cid:48)
uivkLB(ui)(1 − i−1(cid:88)

  
m∗ = max{m(cid:48) ≤ m :(cid:80)m(cid:48)−1
Remark. Since the i-th summand in Equation (15) can utilize (cid:80)i−2
computed in (i−1)-th summand  to compute(cid:80)i−1

j=1 P(cid:48)

≤ 1}.

P(cid:48)

)

uj vk

j=1

i=1

uj vk

where N−(vk) = {u1  . . .   um} is the ordered set of in-neighbors of vk in IC(G(cid:48) P(cid:48)  S0) and

(15)

(16)

Theorem 3. For any independent cascade model IC(G P  S0) and its MDAS IC(G(cid:48) P(cid:48)  S0) 

uj vk  which is already
uj vk  the summation takes at most O(deg(vk)).

j=1 P(cid:48)

j=1 P(cid:48)

σ(S0) ≥ (cid:88)

vk∈V (cid:48)

LB(vk) =: σ−(S0) 

where LB(vk) is obtained recursively as in Deﬁnition 9.

5

Next  we present Nonbacktracking Lower Bound (NB-LB) algorithm which efﬁciently computes
LB(vk). At the k-th iteration  the key variable in NB-LB has the following meaning.
) : vj is an in-neighbor of vk} is the set of pairs (incoming message
· M(vk) = {(LB(vj) P(cid:48)
from an in-neighbor vj to vk  the transmission probability of edge (vj  vk)).

vj vk

Algorithm 2 Nonbacktracking Lower Bound (NB-LB)

Input: directed acyclic network IC(G(cid:48) P(cid:48)  S0)
Initialize: σ− = 0
Initialize: Insert (1  1) to M(vi) for all vi ∈ S0
for k = 1 to n do
LB(vk) = ProcessIncomingMsgLB(M(vk))
σ− += LB(vk)
for vl ∈ N +(vk) \ S0 do

M(vl).insert((LB(vk) P(cid:48)

Output: σ−

))

vkvl

At the beginning  every seed node s ∈ S0 is initialized such that M(s) = {(1  1)} in order to satisfy
the initial condition  LB(s) = 1. For each k-th iteration  node vk is processed as follows. First 
LB(vk) is computed as in the Equation (15)  by the function ProcessIncomingMsgLB  and added
to σ−. Second  vk passes the message (LB(vk) P(cid:48)
) to its out-neighbor vl ∈ N +(vk)\S0  and vl
stores (inserts) it in M(vl). Finally  the algorithm outputs σ−  the lower bound on the inﬂuence. The
description of how the algorithm runs on a small network can be found in the supplementary material.
Computational complexity: Obtaining an arbitrary directed acyclic subnetwork from the original
network takes O(|V | + |E|). Next  the algorithm iterates through the nodes V (cid:48) = {v1  . . .   vn}.
For each node vk  ProcessIncomingMsgLB takes O(deg(vk))  and vk sends messages to its out-
neighbors in O(deg(vk)). Hence  the worst case computational complexity is O(|V | + |E|).

vkvl

3.3 Tunable bounds

In this section  we brieﬂy introduce the parametrized version of NB-UB and NB-LB which provide
control to adjust the trade-off between the efﬁciency and the accuracy of the bounds.
Upper bounds (tNB-UB): Given a non-negative integer t ≤ n − 1  for every node u ∈ V   we
compute the probability p≤t(u) that node u is inﬂuenced by open paths whose length is less than or
equal to t  and for each v ∈ N +(u)  we compute the probability pt(u→ v). Then  we start NB-UB
from l = t + 1 with the new initial conditions that UBt(u→ v) = pt(u→ v) and UBt(u) = p≤t(u) 

and compute the upper bound as(cid:80)

v∈V (1 −(cid:81)n−1

l=t (1 − UBl(v))).

For higher values of t  the algorithm results in tighter upper bounds  while the computational
complexity may increase exponentially for dense networks. Thus  this method is most applicable in
sparse networks  where the degree of each node is bounded.
Lower bounds (tNB-LB): We ﬁrst order the set of nodes {v1  . . .   vn} such that d(S0  vi) ≤
d(S0  vj) for every i < j. Given a non-negative integer t ≤ n  we obtain a subnetwork
IC(G[Vt] P[Vt]  S0 ∩ Vt) of size t  where G[Vt] is the subgraph induced by the set of nodes
Vt = {v1  . . .   vt}  and P[Vt] is the corresponding transmission probability matrix. For each
vi ∈ Vt  we compute the exact probability pt(vi) that node vi is inﬂuenced in the subnetwork
IC(G[Vt] P[Vt]  S0 ∩ Vt). Then  we start NB-LB from i = t + 1 with the new initial conditions that
LB(vk) = pt(vk)  for all k ≤ t.
For larger t  the algorithm results in tighter lower bounds. However  the computational complexity
may increase exponentially with respect to t  the size of the subnetwork. This algorithm can
adopt Monte Carlo simulations on the subnetwork to avoid the large computational complexity.
However  this modiﬁcation results in probabilistic lower bounds  rather than theoretically guaranteed
lower bounds. Nonetheless  this can still give a signiﬁcant improvement  because the Monte Carlo
simulations on a smaller size of network require less computation to stabilize the estimation.

6

4 Experimental Results

In this section  we evaluate the NB-UB and NB-LB in independent cascade models on a variety of
classical synthetic networks.
Network Generation. We consider 4 classical random graph models with the parameters shown
as follows: Erdos Renyi random graphs with ER(n = 1000  p = 0.003)  scale-free networks
SF (n = 1000  α = 2.5)  random regular graphs Reg(n = 1000  d = 3)  and random tree graphs
with power-law degree distributions T (n = 1000  α = 3). For each graph model  we generate 100
networks IC(G  pA {s}) as follows. The graph G is the largest connected component of a graph
drawn from the graph model  the seed node s is a randomly selected vertex  and A is the adjacency
matrix of G. The corresponding IC model has the same transmission probability p for every edge.
Evaluation of Bounds. For each network generated  we compute the following quantities for
each p ∈ {0.1  0.2  . . .   0.9}.
· σmc: the estimation of the inﬂuence with 106 Monte Carlo simulations.
· σ+: the upper bound obtained by NB-UB.
· σ+
spec: the spectral upper bound by [17].
· σ−: the lower bound obtained by NB-LB.
· σ−

prob: the probabilistic lower bound obtained by 10 Monte Carlo simulations.

Figure 1: This ﬁgure compares the average relative gap of the bounds: NB-UB  the spectral upper bound in [17] 
NB-LB  and the probabilistic lower bound computed by MC simulations  for various types of networks.

(cid:80)

The probabilistic lower bound is chosen for the experiments since there has not been any tight lower
bound. The sample size of 10 is determined to overly match the computational complexity of NB-LB
algorithm. In Figure 1  we compare the average relative gap of the bounds for every network model
and for each transmission probability  where the true value is assumed to be σmc. For example 
the average relative gap of NB-UB for 100 Erdos Renyi networks {Ni}100
i=1 with the transmission
  where σ+[Ni] and σmc[Ni] denote the
probability p is computed by 1
NB-UB and the MC estimation  respectively  for the network Ni.
100
Results. Figure 1 shows that NB-UB outperforms the upper bound in [17] for the Erdos-Renyi and
random 3-regular networks  and performs comparably for the scale-free networks. Also  NB-LB gives
tighter bounds than the MC bounds on the Erdos-Renyi  scale-free  and random regular networks
when the transmission probability is small  p < 0.4. Both NB-UB and NB-LB compute the exact
inﬂuence for the tree networks since both algorithms avoid backtracking walks.
Next  we show the bounds on exemplary networks.

σ+[Ni]−σmc[Ni]

i∈[100]

σmc[Ni]

4.1 Upper Bounds

Selection of Networks. In order to illustrate a typical behavior of the bounds  we have chosen
the network in Figure 2a as follows. First  we generate 100 random 3-regular graphs G with 1000
nodes and assign a random seed s. Then  the corresponding IC model is deﬁned as IC(G P =

7

(a)

(b)

Figure 2: (a) The ﬁgure compares various upper bounds on the inﬂuence in the 3-regular network in section 4.1.
The MC upper bounds are computed with various simulation sizes and shown with the data points indicated
with MC(N )  where N is the number of simulations. The spectral upper bound in [17] is shown in red line  and
NB-UB is shown in green line.
(b) The ﬁgure shows lower bounds on the inﬂuence of a scale-free network in section 4.2. The probabilistic
lower bounds shown with points are obtained from Monte Carlo simulations with various simulation sizes  and
the data points indicated with MC(N ) are obtained by N number of simulations. NB-LB is shown in green line.
pA  S0 = {s}). For each network  we compute NB-UB and MC estimation. Then  we compute the
score for each network  where the score is deﬁned as the sum of the square differences between the
upper bounds and MC estimations over the transmission probability p ∈ {0.1  0.2 . . .  0.9}. Finally 
a graph whose score is the median from all 100 scores is chosen for Figure 2a.
Results. In ﬁgure 2a  we compare 1) the upper bounds introduced [17] and 2) the probabilistic upper
bounds obtained by Monte Carlo simulations with 99% conﬁdence level  to NB-UB. The MC upper
bounds are computed with the various sample sizes N ∈ {5  10  30  300  3000}. It is evident from
the ﬁgure that a larger sample size provides a tighter probabilistic upper bound. NB-UB outperforms
the bound by [17] and the probabilistic MC bound when the transmission probability is relatively
small. Further  it shows a similar trend as the MC simulations with a large sample size.

4.2 Lower Bounds

Selection of Networks. We adopt a similar selection process as in the selection for the upper
bounds  but with the scale free networks  with 3000 nodes and α = 2.5.
Results. We compare probabilistic lower bounds obtained by MC with 99% conﬁdence level
to NB-LB. The lower bounds from Monte Carlo simulations are computed with various sample
sizes N ∈ {5  12  30  300  3000}  which accounts for a constant  log(|V |)  0.01|V |  0.1|V |  and
|V |. NB-LB outperforms the probabilistic bounds by MC with small sample sizes. Recall that
the computational complexity of the lower bound in algorithm 2 is O(|V | + |E|)  which is the
computational complexity of a constant number of Monte Carlo simulations. In ﬁgure 2b  it shows
that NB-LB is tighter than the probabilistic lower bounds with the same computational complexity 
and it also agrees with the behavior of the MC simulations.

5 Conclusion

In this paper  we propose both upper and lower bounds on the inﬂuence in the independent cascade
models and provide algorithms to efﬁciently compute the bounds. We extend the results by proposing
tunable bounds which can adjust the trade-off between the efﬁciency and the accuracy. Finally  the
tightness and the performance of the bounds are shown with the experimental results. One can further
improve the bounds considering r-nonbacktracking walks  i.e. avoiding cycles of length r rather than
just backtracks  and we leave this for future study.

Acknowledgement. The authors thank Colin Sandon for helpful discussions.
This re-
search was partly supported by the NSF CAREER Award CCF-1552131 and the ARO grant
W911NF-16-1-0051

8

0010203040506070809010000.050.10.150.20.250.30.350.40.450.5InfluenceTransmission ProbabilityUpper bounds of the influenceMC (5)MC (10)MC (30)MC (300)MC (3000)NB-UBSpectral010203040506070809010000.10.20.30.40.5010020030040050060070080090010000.50.60.70.80.91180.92605.80500100015002000250000.10.20.30.40.50.60.70.80.91InfluenceTransmission ProbabilityLower bounds of the influenceMC (5)MC (12)MC (30)MC (300)MC (3000)NB-LBReferences
[1] E. Abbe and C. Sandon. Detection in the stochastic block model with multiple clusters: proof of
the achievability conjectures  acyclic bp  and the information-computation gap. arXiv preprint
arXiv:1512.09080  2015.

[2] C. Bordenave  M. Lelarge  and L. Massoulié. Non-backtracking spectrum of random graphs:
community detection and non-regular ramanujan graphs. In Foundations of Computer Science
(FOCS)  2015 IEEE 56th Annual Symposium on  pages 1347–1357. IEEE  2015.

[3] W. Chen and S.-H. Teng. Interplay between social inﬂuence and network centrality: A compar-
ative study on shapley centrality and single-node-inﬂuence centrality. In Proceedings of the
26th International Conference on World Wide Web  pages 967–976. International World Wide
Web Conferences Steering Committee  2017.

[4] W. Chen  Y. Wang  and S. Yang. Efﬁcient inﬂuence maximization in social networks. In
Proceedings of the 15th ACM SIGKDD international conference on Knowledge discovery and
data mining  pages 199–208. ACM  2009.

[5] W. Chen  Y. Yuan  and L. Zhang. Scalable inﬂuence maximization in social networks under the
linear threshold model. In Data Mining (ICDM)  2010 IEEE 10th International Conference on 
pages 88–97. IEEE  2010.

[6] M. Draief  A. Ganesh  and L. Massoulié. Thresholds for virus spread on networks. In Pro-
ceedings of the 1st international conference on Performance evaluation methodolgies and tools 
page 51. ACM  2006.

[7] C. M. Fortuin  P. W. Kasteleyn  and J. Ginibre. Correlation inequalities on some partially

ordered sets. Communications in Mathematical Physics  22(2):89–103  1971.

[8] A. Goyal  W. Lu  and L. V. Lakshmanan. Celf++: optimizing the greedy algorithm for inﬂuence
maximization in social networks. In Proceedings of the 20th international conference companion
on World wide web  pages 47–48. ACM  2011.

[9] M. Granovetter. Threshold models of collective behavior. American journal of sociology  pages

1420–1443  1978.

[10] B. Karrer  M. Newman  and L. Zdeborová. Percolation on sparse networks. Physical review

letters  113(20):208702  2014.

[11] B. Karrer and M. E. Newman. Message passing approach for general epidemic models. Physical

Review E  82(1):016101  2010.

[12] D. Kempe  J. Kleinberg  and É. Tardos. Maximizing the spread of inﬂuence through a social
network. In Proceedings of the ninth ACM SIGKDD international conference on Knowledge
discovery and data mining  pages 137–146. ACM  2003.

[13] A. Khelil  C. Becker  J. Tian  and K. Rothermel. An epidemic model for information diffusion
in manets. In Proceedings of the 5th ACM international workshop on Modeling analysis and
simulation of wireless and mobile systems  pages 54–60. ACM  2002.

[14] J. T. Khim  V. Jog  and P.-L. Loh. Computing and maximizing inﬂuence in linear threshold and
triggering models. In Advances in Neural Information Processing Systems  pages 4538–4546 
2016.

[15] F. Krzakala  C. Moore  E. Mossel  J. Neeman  A. Sly  L. Zdeborová  and P. Zhang. Spectral
redemption in clustering sparse networks. Proceedings of the National Academy of Sciences 
110(52):20935–20940  2013.

[16] E. J. Lee  S. Kamath  E. Abbe  and S. R. Kulkarni. Spectral bounds for independent cascade
model with sensitive edges. In 2016 Annual Conference on Information Science and Systems
(CISS)  pages 649–653  March 2016.

9

[17] R. Lemonnier  K. Scaman  and N. Vayatis. Tight bounds for inﬂuence in diffusion networks
and application to bond percolation and epidemiology. In Advances in Neural Information
Processing Systems  pages 846–854  2014.

[18] J. Leskovec  L. A. Adamic  and B. A. Huberman. The dynamics of viral marketing. ACM

Transactions on the Web (TWEB)  1(1):5  2007.

[19] J. Leskovec  A. Krause  C. Guestrin  C. Faloutsos  J. VanBriesen  and N. Glance. Cost-effective
In Proceedings of the 13th ACM SIGKDD international

outbreak detection in networks.
conference on Knowledge discovery and data mining  pages 420–429. ACM  2007.

[20] D. Lopez-Pintado and D. J. Watts. Social inﬂuence  binary decisions and collective dynamics.

Rationality and Society  20(4):399–443  2008.

[21] B. Shulgin  L. Stone  and Z. Agur. Pulse vaccination strategy in the sir epidemic model. Bulletin

of Mathematical Biology  60(6):1123–1148  1998.

[22] Y. Tang  X. Xiao  and Y. Shi. Inﬂuence maximization: Near-optimal time complexity meets
practical efﬁciency. In Proceedings of the 2014 ACM SIGMOD international conference on
Management of data  pages 75–86. ACM  2014.

[23] C. Wang  W. Chen  and Y. Wang. Scalable inﬂuence maximization for independent cascade
model in large-scale social networks. Data Mining and Knowledge Discovery  25(3):545–576 
2012.

[24] D. J. Watts. A simple model of global cascades on random networks. Proceedings of the

National Academy of Sciences  99(9):5766–5771  2002.

[25] J. Yang and S. Counts. Predicting the speed  scale  and range of information diffusion in twitter.

2010.

10

,Francesca Petralia
Joshua Vogelstein
David Dunson
Emmanuel Abbe
Sanjeev Kulkarni
Eun Jee Lee
Mikhail Yurochkin
Sebastian Claici
Edward Chien
Farzaneh Mirzazadeh
Justin Solomon