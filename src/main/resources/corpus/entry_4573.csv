2014,Real-Time Decoding of an Integrate and Fire Encoder,Neuronal encoding models range from the detailed biophysically-based Hodgkin Huxley model  to the statistical linear time invariant model specifying firing rates in terms of the extrinsic signal. Decoding the former becomes intractable  while the latter does not adequately capture the nonlinearities present in the neuronal encoding system. For use in practical applications  we wish to record the output of neurons  namely spikes  and decode this signal fast in order to drive a machine  for example a prosthetic device. Here  we introduce a causal  real-time decoder of the biophysically-based Integrate and Fire encoding neuron model. We show that the upper bound of the real-time reconstruction error decreases polynomially in time  and that the L2 norm of the error is bounded by a constant that depends on the density of the spikes  as well as the bandwidth and the decay of the input signal. We numerically validate the effect of these parameters on the reconstruction error.,Real-Time Decoding of an Integrate and Fire Encoder

Shreya Saxena and Munther Dahleh

Department of Electrical Engineering and Computer Sciences

Massachusetts Institute of Technology

Cambridge  MA 02139

{ssaxena dahleh}@mit.edu

Abstract

Neuronal encoding models range from the detailed biophysically-based Hodgkin
Huxley model  to the statistical linear time invariant model specifying ﬁring rates
in terms of the extrinsic signal. Decoding the former becomes intractable  while
the latter does not adequately capture the nonlinearities present in the neuronal
encoding system. For use in practical applications  we wish to record the output
of neurons  namely spikes  and decode this signal fast in order to act on this signal 
for example to drive a prosthetic device. Here  we introduce a causal  real-time
decoder of the biophysically-based Integrate and Fire encoding neuron model. We
show that the upper bound of the real-time reconstruction error decreases polyno-
mially in time  and that the L2 norm of the error is bounded by a constant that
depends on the density of the spikes  as well as the bandwidth and the decay of
the input signal. We numerically validate the effect of these parameters on the
reconstruction error.

1

Introduction

One of the most detailed and widely accepted models of the neuron is the Hodgkin Huxley (HH)
model [1].
It is a complex nonlinear model comprising of four differential equations governing
the membrane potential dynamics as well as the dynamics of the sodium  potassium and calcium
currents found in a neuron. We assume in the practical setting that we are recording multiple neurons
using an extracellular electrode  and thus that the observable postprocessed outputs of each neuron
are the time points at which the membrane voltage crosses a threshold  also known as spikes. Even
with complete knowledge of the HH model parameters  it is intractable to decode the extrinsic
signal applied to the neuron given only the spike times. Model reduction techniques are accurate in
certain regimes [2]; theoretical studies have also guaranteed an input-output equivalence between a
multiplicative or additive extrinsic signal applied to the HH model  and the same signal applied to
an Integrate and Fire (IAF) neuron model with variable thresholds [3].
Speciﬁcally  take the example of a decoder in a brain machine interface (BMI) device  where the
decoded signal drives a prosthetic limb in order to produce movement. Given the complications
involved in decoding an extrinsic signal using a realistic neuron model  current practices include
decoding using a Kalman ﬁlter  which assumes a linear time invariant (LTI) encoding with the ex-
trinsic signal as an input and the ﬁring rate of the neuron as the output [4–6]. Although extremely
tractable for decoding  this approach ignores the nonlinear processing of the extrinsic current by
the neuron. Moreover  assuming ﬁring rates as the output of the neuron averages out the data and
incurs inherent delays in the decoding process. Decoding of spike trains has also been performed
using stochastic jump models such as point process models [7  8]  and we are currently exploring
relationships between these and our work.

1

f (t)

IAF Encoder

{ti}i:|ti|t

Real-Time Decoder

˜ft(t)

Figure 1: IAF Encoder and a Real-Time Decoder.

We consider a biophysically inspired IAF neuron model with variable thresholds as the encoding
model.
It has been shown that  given the parameters of the model and given the spikes for all
time  a bandlimited signal driving the IAF model can be perfectly reconstructed if the spikes are
‘dense enough’ [9–11]. This is a Nyquist-type reconstruction formula. However  for this theory
to be applicable to a real-time setting  as in the case of BMI  we need a causal real-time decoder
that estimates the signal at every time t  and an estimate of the time taken for the convergence
of the reconstructed signal to the real signal. There have also been some approaches for causal
reconstruction of a signal encoded by an IAF encoder  such as in [12]. However  these do not show
the convergence of the estimate to the real signal with the advent of time.
In this paper  we introduce a causal real-time decoder (Figure 1) that  given the parameters of the
IAF encoding process  provides an estimate of the signal at every time  without the need to wait for
a minimum amount of time to start decoding. We show that  under certain conditions on the input
signal  the upper bound of the error between the estimated signal and the input signal decreases
polynomially in time  leading to perfect reconstruction as t ! 1  or a bounded error if a ﬁnite
number of iterations are used. The bounded input bounded output (BIBO) stability of a decoder is
extremely important to analyze for the application of a BMI. Here  we show that the L2 norm of the
error is bounded  with an upper bound that depends on the bandwidth of the signal  the density of
the spikes  and the decay of the input signal.
We numerically show the utility of the theory developed here. We ﬁrst provide example recon-
structions using the real-time decoder and compare our results with reconstructions obtained using
existing methods. We then show the dependence of the decoding error on the properties of the input
signal.
The theory and algorithm presented in this paper can be applied to any system that uses an IAF
encoding device  for example in pluviometry. We introduce some preliminary deﬁnitions in Section
2  and then present our theoretical results in Section 3. We use a model IAF system to numerically
simulate the output of an IAF encoder and provide causal real-time reconstruction in Section 4  and
end with conclusions in Section 5.

2 Preliminaries
We ﬁrst deﬁne the subsets of the L2 space that we consider. L⌦

2 and L⌦
2 = nf 2L 2 | ˆf (!) = 0 8!/2 [⌦  ⌦]o
L⌦
2  = nf g 2L 2 | ˆf (!) = 0 8!/2 [⌦  ⌦]o
L⌦

(2)
  where g(t) = (1+|t|) and ˆf (!) = (Ff )(!) is the Fourier transform of f. We will only consider
signals in L⌦
Next  we deﬁne sinc⌦(t) and [a b](t)  both of which will play an integral part in the reconstruction
of signals.

2  for   0.

2  are deﬁned as the following.
(1)

⌦t

sinc⌦(t) =( sin(⌦t)
[a b](t) =⇢1

1

0

t 6= 0
t = 0

t 2 [a  b]
otherwise

(3)

(4)

Finally  we deﬁne the encoding system based on an IAF neuron model; we term this the IAF Encoder.
We consider that this model has variable thresholds in its most general form  which may be useful if

2

Z ti+1

ti

it is the result of a model reduction technique such as in [3]  or in approaches whereR ti+1
f (⌧ )d⌧
can be calculated through other means  such as in [9]. A typical IAF Encoder is deﬁned in the
following way: given the thresholds {qi} where qi > 0 8i  the spikes {ti} are such that

ti

f (⌧ )d⌧ = ±qi

(5)

This signiﬁes that the encoder outputs a spike at time ti+1 every time the integralR t
f (⌧ )d⌧ reaches
the threshold qi or qi. We assume that the decoder has knowledge of the value of the integral
as well as the time at which the integral was reached. For a physical representation with neurons
whose dynamics can faithfully be modeled using IAF neurons  we can imagine two neurons with
the same input f; one neuron spikes when the positive threshold is reached while the other spikes
when the negative threshold is reached. The decoder views the activity of both of these neurons
and  with knowledge of the corresponding thresholds  decodes the signal accordingly. We can also
take the approach of limiting ourselves to positive f (t). In order to remain general in the following

ti

treatment  we assume that we have knowledge ofnR ti+1

ti

f (⌧ )d⌧o  as well as the corresponding

spike times {ti}.
3 Theoretical Results

The following is a theorem introduced in [11]  which was also applied to IAF Encoders in [10 13 14].
We will later use the operators and concepts introduced in this theorem.
Theorem 1. Perfect Reconstruction: Given a sampling set {ti}i2Z and the corresponding samples
R ti+1
f (⌧ )d⌧  we can perfectly reconstruct f 2L ⌦
2 if supi2Z (ti+1  ti) =  for some < ⇡
⌦.
ti
Moreover  f can be reconstructed iteratively in the following way  such that
⇡ ◆k+1
kf  f kk2 ✓ ⌦

kfk2

(6)

  and limk!1 f k = f in L2.

(7)
(8)

(9)

(10)

  where the operator Af is deﬁned as the following.

f 0 = Af
f 1 = (I A )f 0 + Af = (I A )Af + Af
f k = (I A )f k1 + Af =
(I A )nAf

kXn=0

Af =

1Xi=1Z ti+1

ti

f (⌧ )d⌧ sinc⌦(t  si)

and si = ti+ti+1

2

  the midpoint of each pair of spikes.

Proof. Provided in [11].

The above theorem requires an inﬁnite number of spikes in order to start decoding. However  we
would like a real-time decoder that outputs the ‘best guess’ at every time t in order for us to act on
the estimate of the signal. In this paper  we introduce one such decoder; we ﬁrst provide a high-level
description of the real-time decoder  then a recursive algorithm to apply in the practical case  and
ﬁnally we will provide error bounds for its performance.
Real-Time Decoder
At every time t  the decoder outputs an estimate of the input signal ˜ft(t)  where ˜ft(t) is an estimate
of the signal calculated using all the spikes from time 0 to t. Since there is no new information
between spikes  this is essentially the same as calculating an estimate after every spike ti  ˜fti(t) 
and using this estimate till the next spike  i.e. for time t 2 [ti  ti+1] (see Figure 2).

3

ft1(t)

ft2(t) = ft1(t) + gt2(t)

ft3(t)

f (t)

ft(t)

0

t0

t1

t2

t3

t4

t5

t6

t7

t

Figure 2: A visualization of the decoding process. The original signal f (t) is shown in black and the
spikes {ti} are shown in blue. As each spike ti arrives  a new estimate ˜fti(t) of the signal is formed
(shown in green)  which is modiﬁed after the next spike ti+1 by the innovation function gti+1. The
output of the decoder ˜ft(t) =Pi2Z

˜fti(t) [ti ti+1)(t) is shown in red.

We will show that we can calculate the estimate after every spike ˜fti+1 as the sum of the previous
estimate ˜fti and an innovation gti+1. This procedure is captured in the algorithm given in Equations
11 and 12.
Recursive Algorithm
˜f 0
ti+1 = ˜f 0
˜f k
ti+1 = ˜f k

ti+1
ti+1 = ˜f k

ti + g0
ti + gk

ti+1 + g0

(12)

(11)

Here  ˜f 0
t0 = 0  and g0
gti+1(t) = limk!1 gk

ti+1(t) =⇣R ti+1

f (⌧ )d⌧⌘ sinc(t si). We denote ˜fti(t) = limk!1

ti+1(t). We deﬁne the operator AT f used in Equation 12 as the following.

ti

˜f k
ti(t) and

ti +⇣gk1

ti+1⌘
ti+1 A ti+1gk1

AT f = Xi:|ti|TZ ti+1

ti

f (⌧ )d⌧ sinc⌦(t  si)

(13)

The output of our causal real-time decoder can also be written as ˜ft(t) =Pi2Z
˜f K
ti (t) [ti ti+1)(t). { ˜f k

˜fti(t) [ti ti+1)(t).
In the case of a decoder that uses a ﬁnite number of iterations K at every step  i.e. calculates ˜f K
ti
after every spike ti  the decoded signal is ˜f K
ti}k are stored after
every spike ti  and thus do not need to be recomputed at the arrival of the next spike. Thus  when a
new spike arrives at ti+1  each ˜f k
Next  we show an upper bound on the error incurred by the decoder.
Theorem 2. Real-time reconstruction: Given a signal f 2L ⌦
2  passed through an IAF encoder
with known thresholds  and given that the spikes satisfy a certain minimum density supi2Z(ti+1 
⇡   we can construct a causal real-time decoder that reconstructs a function
ti) =  for some < ⌦
˜ft(t) using the recursive algorithm in Equations 11 and 12  s.t.

ti can be modiﬁed by adding the innovation functions gk

t (t) =Pi2Z

ti+1.

|f (t)  ˜ft(t)|

⇡ kfk2 (1 + t)

c

1  ⌦
4

(14)

  where c depends only on   ⌦ and .
Moreover  if we use a ﬁnite number of iterations K at every step  we obtain the following error.

|f (t)  ˜f K

t (t)| c

⇡K+1
1  ⌦
1  ⌦

⇡

Proof. Provided in the Appendix.

kfk2 (1 + t) +✓ ⌦

⇡ ◆K+1 1 + ⌦
1  ⌦

⇡

⇡ kfk2

(15)

Theorem 2 is the main result of this paper. It shows that the upper bound of the real-time reconstruc-
tion error using the decoding algorithm in Equations 11 and 12  decreases polynomially as a function
of time. This implies that the approximation ˜ft(t) becomes more and more accurate with the passage
of time  and moreover  we can calculate the exact amount of time we would need to record to have a
given level of accuracy. Given a maximum allowed error ✏  these bounds can provide a combination
(t  K) that will ensure |f (t)  ˜f K
We can further show that the L2 norm of the reconstruction remains bounded with a bounded in-
put (BIBO stability)  by bounding the L2 norm of the error between the original signal and the
reconstruction.
Corollary 1. Bounded L2 norm: The causal decoder provided in Theorem 2  with the same as-
sumptions and in the case of K ! 1  constructs a signal ˜ft(t) s.t.
the L2 norm of the error
|f (t)  ˜ft(t)|2dt is bounded: kf  ˜ftk2  c/p21
kfk2  where c is the same
1 ⌦

2   and if the density constraint is met.

t (t)| ✏ if f 2L ⌦

kf  ˜ftk2 =qR 1

constant as in Theorem 2.

0

⇡

Proof.

sZ 1

0

|f (t)  ˜ft(t)|2dt  vuutZ 1

0 c
1  ⌦

⇡ !2

kfk2

2  (1 + t)2dt =

c/p2  1
1  ⌦

⇡

kfk2  (16)

Here  the ﬁrst inequality is due to Theorem 2  and all the constants are as deﬁned in the same.

Remark 1: This result also implies that we have a decay in the root-mean-square (RMS) error  i.e.
q 1
T R T
0 |f (t)  ˜ft(t)|2dt T!1! 0. For the case of a ﬁnite number of iterations K < 1  the RMS
error converges to a non-zero constant ⌦
Remark 2: The methods used in Corollary 1 also provide a bound on the error in the weighted L2
norm  i.e. kf  ˜fk2   c/p1
⇡ kfk2  for   2  which may be a more intuitive form to use for a
1 ⌦
subsequent stability analysis.

⇡K+1 1+ ⌦

⇡ kfk2.

1 ⌦

⇡

4 Numerical Simulations
We simulated signals f (t) of the following form  for t 2 [0  100]  using a stepsize of 102.

f (t) = P50

i=1 wk (sinc⌦ (t  dk))

i=1 wk

P50

(17)

Here  the wk’s and dk’s were picked uniformly at random from the interval [0  1] and [0  100] re-
spectively. Note that f 2L ⌦
2 . All simulations were performed using MATLAB R2014a. For each
simulation experiment  at every time t we decoded using only the spikes before time t.
We ﬁrst provide example reconstructions using the Real-Time Decoder for four signals in Figure 3 
using constant thresholds  i.e. qi = q 8i. We compare our results to those obtained using a Linear
Firing Rate (FR) Decoder  i.e. we let the reconstructed signal be a linear function of the number
of spikes in the past  seconds   being the window size. We can see that there is a delay in the
reconstruction with this decoding approach. Moreover  the reconstruction is not as accurate as that
using the Real-Time Decoder.

5

e
d
u

t
i
l

p
m
A

0.1

0.08

0.06

0.04

0.02

e
d
u

t
i
l

p
m
A

0.1

0.08

0.06

0.04

0.02

0
0

20

40

Time (s)

60

80

0
0

20

40

Time (s)

60

80

(a) ⌦= 0 .2⇡; Real-Time Decoder

(b) ⌦= 0 .2⇡; Linear FR Decoder

0.1

0.08

0.06

0.04

0.02

0.1

0.08

0.06

0.04

0.02

e
d
u

t
i
l

p
m
A

e
d
u

t
i
l

p
m
A

0
0

20

40

Time (s)

60

80

0
0

20

40

Time (s)

60

80

(c) ⌦= 0 .3⇡; Real-Time Decoder
0.1

(d) ⌦= 0 .3⇡; Linear FR Decoder
0.1

e
d
u

t
i
l

p
m
A

0.08

0.06

0.04

0.02

e
d
u

t
i
l

p
m
A

0.08

0.06

0.04

0.02

0
0

20

40

Time (s)

60

80

0
0

20

40

Time (s)

60

80

(e) ⌦= 0 .4⇡; Real-Time Decoder

(f) ⌦= 0 .4⇡; Linear FR Decoder

0.08

0.07

0.06

0.05

0.04

0.03

0.02

0.01

e
d
u
t
i
l

p
m
A

0
0

20

40

Time (s)

60

80

0.08

0.07

0.06

e
d
u
t
i
l

p
m
A

0.05

0.04

0.03

0.02

0.01

0
0

20

40

Time (s)

60

80

(g) ⌦= 0 .5⇡; Real-Time Decoder

(h) ⌦= 0 .5⇡; Linear FR Decoder

Figure 3: (a c e g) Four example reconstructions using the Real-Time Decoder  with the original
signal f (t) in black solid and the reconstructed signal ˜ft(t) in red dashed lines. Here  [  K ] =
[2  500]  and qi = 0.01 8i. (b d f h) The same signal was decoded using a Linear Firing Rate (FR)
Decoder. A window size of = 3 s was used.

6

−4

x 10

3

−4

x 10

2.5

2
!
t
˜f
−
f
!

β

 
2
!
f
!

2

1

0
0.1pi

0.2pi

Ω

0.3pi

0.4pi

2

2
!
t
˜f
−
f
!

β

 
2
!
f
!

1.5

1

0.5

0
0.6

0.8

1

1.2

1.4

1.6

δ

(a) ⌦ is varied; [    K ] = [2  ⇡

2⌦   500]

(b)  is varied; [⌦   K ] = [0.3⇡  2  500]

−4

10

−6

10

2
!
t
˜f
−
f
!

β

 
2
!
f
!

−8

10

−4

x 10

2

2
!
t
˜f
−
f
!

β

 
2
!
f
!

1

−10

10

2

2.5

3

3.5
β

4

4.5

5

0

0

100

200

300

400

500

K

(c)  is varied; [⌦   K ] = [0.3⇡ 

1
0.3   500]

(d) K is varied; [⌦   ] = [0.3⇡  5

3   2]

Figure 4: Average error for 20 different signals while varying different parameters.

Next  we show the decay of the real-time error by averaging out the error for 20 different input
signals  while varying certain parameters  namely ⌦     and K (Figure 4). The thresholds qi were
chosen to be constant a priori  but were reduced to satisfy the density constraint wherever necessary.
According to Equation 14 (including the effect of the constant c)  the error should decrease as ⌦ is
decreased. We see this effect in the simulation study in Figure 4a. For these simulations  we chose
 such that ⌦
⇡ < 1  thus  was decreasing as ⌦ increased; however  the effect of the increasing ⌦
dominated in this case.
In Figure 4b we see that increasing  while keeping the bandwidth constant does indeed increase the
error  thus the algorithm is sensitive to the density of the spikes. In this ﬁgure  all the values of 
satisfy the density constraint  i.e. ⌦
Increasing  is seen to have a large effect  as seen in Figure 4c: the error decreases polynomially
in  (note the log scale on the y-axis). Although increasing  in our simulations also increased
the bandwidth of the signal  the faster decay had a larger effect on the error than the change in
bandwidth.
In Figure 4d  the effect of increasing K is apparent; however  this error ﬂattens out for large values
of K  showing convergence of the algorithm.

⇡ < 1.

7

5 Conclusions

We provide a real-time decoder to reconstruct a signal f 2L ⌦
2  encoded by an IAF encoder. Under
Nyquist-type spike density conditions  we show that the reconstructed signal ˜ft(t) converges to f (t)
polynomially in time  or with a ﬁxed error that depends on the computation power used to reconstruct
the function. Moreover  we get a lower error as the spike density increases  i.e. we get better results
if we have more spikes. Decreasing the bandwidth or increasing the decay of the signal both lead to
a decrease in the error  corroborated by the numerical simulations. This decoder also outperforms
the linear decoder that acts on the ﬁring rate of the neuron. However  the main utility of this decoder
is that it comes with veriﬁable bounds on the error of decoding as we record more spikes.
There is a severe need in the BMI community for considering error bounds while decoding signals
from the brain. For example  in the case where the reconstructed signal is driving a prosthetic  we are
usually placing the decoder and machine in an inherent feedback loop (where the feedback is visual
in this case). A stability analysis of this feedback loop includes calculating a bound on the error
incurred by the decoding process  which is the ﬁrst step for the construction of a device that robustly
tracks agile maneuvers. In this paper  we provide an upper bound on the error incurred by the real-
time decoding process  which can be used along with concepts in robust control theory to provide
sufﬁcient conditions on the prosthetic and feedback system in order to ensure stability [15–17].

Acknowledgments
Research supported by the National Science Foundation’s Emerging Frontiers in Research and In-
novation Grant (1137237).

References
[1] A. L. Hodgkin and A. F. Huxley  “A quantitative description of membrane current and its
application to conduction and excitation in nerve ” The Journal of physiology  vol. 117  no. 4 
p. 500  1952.

[2] W. Gerstner and W. M. Kistler  Spiking neuron models: Single neurons  populations  plasticity.

Cambridge university press  2002.

[3] A. A. Lazar  “Population encoding with hodgkin–huxley neurons ” Information Theory  IEEE

Transactions on  vol. 56  no. 2  pp. 821–837  2010.

[4] J. M. Carmena  M. A. Lebedev  R. E. Crist  J. E. O’Doherty  D. M. Santucci  D. F. Dimitrov 
P. G. Patil  C. S. Henriquez  and M. A. Nicolelis  “Learning to control a brain–machine inter-
face for reaching and grasping by primates ” PLoS biology  vol. 1  no. 2  p. e42  2003.

[5] M. D. Serruya  N. G. Hatsopoulos  L. Paninski  M. R. Fellows  and J. P. Donoghue  “Brain-
machine interface: Instant neural control of a movement signal ” Nature  vol. 416  no. 6877 
pp. 141–142  2002.

[6] W. Wu  J. E. Kulkarni  N. G. Hatsopoulos  and L. Paninski  “Neural decoding of hand mo-
tion using a linear state-space model with hidden states ” Neural Systems and Rehabilitation
Engineering  IEEE Transactions on  vol. 17  no. 4  pp. 370–378  2009.

[7] E. N. Brown  L. M. Frank  D. Tang  M. C. Quirk  and M. A. Wilson  “A statistical paradigm for
neural spike train decoding applied to position prediction from ensemble ﬁring patterns of rat
hippocampal place cells ” The Journal of Neuroscience  vol. 18  no. 18  pp. 7411–7425  1998.
[8] U. T. Eden  L. M. Frank  R. Barbieri  V. Solo  and E. N. Brown  “Dynamic analysis of neural
encoding by point process adaptive ﬁltering ” Neural Computation  vol. 16  no. 5  pp. 971–998 
2004.

[9] A. A. Lazar  “Time encoding with an integrate-and-ﬁre neuron with a refractory period ” Neu-

rocomputing  vol. 58  pp. 53–58  2004.

[10] A. A. Lazar and L. T. T´oth  “Time encoding and perfect recovery of bandlimited signals ”

Proceedings of the ICASSP  vol. 3  pp. 709–712  2003.

[11] H. G. Feichtinger and K. Gr¨ochenig  “Theory and practice of irregular sampling ” Wavelets:

mathematics and applications  vol. 1994  pp. 305–363  1994.

8

[12] H. G. Feichtinger  J. C. Pr´ıncipe  J. L. Romero  A. S. Alvarado  and G. A. Velasco  “Approx-
imate reconstruction of bandlimited functions for the integrate and ﬁre sampler ” Advances in
computational mathematics  vol. 36  no. 1  pp. 67–78  2012.

[13] A. A. Lazar and L. T. T´oth  “Perfect recovery and sensitivity analysis of time encoded bandlim-
ited signals ” Circuits and Systems I: Regular Papers  IEEE Transactions on  vol. 51  no. 10 
pp. 2060–2073  2004.

[14] D. Gontier and M. Vetterli  “Sampling based on timing: Time encoding machines on shift-
invariant subspaces ” Applied and Computational Harmonic Analysis  vol. 36  no. 1  pp. 63–78 
2014.

[15] S. V. Sarma and M. A. Dahleh  “Remote control over noisy communication channels: A ﬁrst-
order example ” Automatic Control  IEEE Transactions on  vol. 52  no. 2  pp. 284–289  2007.
[16] ——  “Signal reconstruction in the presence of ﬁnite-rate measurements: ﬁnite-horizon control
applications ” International Journal of Robust and Nonlinear Control  vol. 20  no. 1  pp. 41–58 
2010.

[17] S. Saxena and M. A. Dahleh  “Analyzing the effect of an integrate and ﬁre encoder and decoder

in feedback ” Proceedings of 53rd IEEE Conference on Decision and Control (CDC)  2014.

9

,Shreya Saxena
Munther Dahleh